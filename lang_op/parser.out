Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CommentText
    EndComment
    InitComment
    NextLine
    SuchThat

Grammar

Rule 0     S' -> expressions
Rule 1     BooleanExpression -> BooleanOr
Rule 2     IntExpression -> StringLen
Rule 3     IntExpression -> AddSub
Rule 4     StringExpression -> StringConcat
Rule 5     BooleanOr -> BooleanOr Or BooleanAnd
Rule 6     BooleanOr -> BooleanAnd
Rule 7     AlphExpression -> AlphConcat
Rule 8     StringLen -> LenOp StringExpression LenOp
Rule 9     StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 10    LangExpression -> StringPrefix
Rule 11    LangExpression -> StringSuffix
Rule 12    LangExpression -> AlphKleeneC
Rule 13    LangExpression -> AlphPositiveC
Rule 14    LangExpression -> LangKleeneC
Rule 15    LangExpression -> LangPositiveC
Rule 16    LangExpression -> LangUnion
Rule 17    LangExpression -> StringSubSequence
Rule 18    LangExpression -> StringSubString
Rule 19    StringConcat -> StringConcat Concat StringPow
Rule 20    StringConcat -> StringPow
Rule 21    AlphConcat -> AlphConcat Concat AlphPow
Rule 22    AlphConcat -> AlphPow
Rule 23    expressions -> expressions expression Term
Rule 24    expressions -> expression Term
Rule 25    BooleanAnd -> BooleanAnd And BooleanGroup
Rule 26    BooleanAnd -> BooleanGroup
Rule 27    StringPow -> StringPow Pow IntExpression
Rule 28    StringPow -> StringGroup
Rule 29    AddSub -> AddSub Add MultDiv
Rule 30    AddSub -> AddSub Sub MultDiv
Rule 31    AddSub -> MultDiv
Rule 32    LangUnion -> LangUnion Add LangConcat
Rule 33    LangUnion -> LangConcat
Rule 34    expression -> IntExpression
Rule 35    expression -> AlphExpression
Rule 36    expression -> StringExpression
Rule 37    expression -> LangExpression
Rule 38    expression -> BooleanExpression
Rule 39    expression -> ShowVal
Rule 40    expression -> Assigns
Rule 41    expression -> Declares
Rule 42    AlphPow -> AlphPow Pow IntExpression
Rule 43    AlphPow -> AlphGroup
Rule 44    StringGroup -> LGroup StringExpression RGroup
Rule 45    StringGroup -> String
Rule 46    StringGroup -> VString
Rule 47    ShowVal -> Show expression
Rule 48    ShowVal -> ShowInLine expression
Rule 49    BooleanGroup -> LGroup BooleanExpression RGroup
Rule 50    BooleanGroup -> Boolean
Rule 51    BooleanGroup -> VBoolean
Rule 52    LangConcat -> LangConcat Concat LangGroup
Rule 53    LangConcat -> LangGroup
Rule 54    AlphGroup -> LGroup AlphExpression RGroup
Rule 55    AlphGroup -> Alph
Rule 56    AlphGroup -> VAlph
Rule 57    MultDiv -> MultDiv Concat IntPow
Rule 58    MultDiv -> MultDiv Div IntPow
Rule 59    MultDiv -> IntPow
Rule 60    Declares -> StringDeclare
Rule 61    Declares -> IntDeclare
Rule 62    Declares -> AlphDeclare
Rule 63    Declares -> LangDeclare
Rule 64    Declares -> BooleanDeclare
Rule 65    Boolean -> True
Rule 66    Boolean -> False
Rule 67    LangGroup -> LGroup LangExpression RGroup
Rule 68    LangGroup -> VLang
Rule 69    Alph -> OpenStruct StringList CloseStruct
Rule 70    Alph -> OpenStruct StringExpression CloseStruct
Rule 71    Assigns -> StringAssign
Rule 72    Assigns -> IntAssign
Rule 73    Assigns -> AlphAssign
Rule 74    Assigns -> LangAssign
Rule 75    Assigns -> BooleanAssign
Rule 76    IntPow -> IntPow Pow Unary
Rule 77    IntPow -> Unary
Rule 78    AlphKleeneC -> AlphExpression KleeneC IntExpression
Rule 79    StringDeclare -> StringType VarName
Rule 80    StringDeclare -> StringType VarName Eq StringExpression
Rule 81    StringDeclare -> StringDeclare Splitter VarName
Rule 82    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 83    StringList -> StringList Splitter StringExpression
Rule 84    StringList -> StringExpression Splitter StringExpression
Rule 85    AlphPositiveC -> AlphExpression PositiveC IntExpression
Rule 86    Unary -> Sub Primary
Rule 87    Unary -> Primary
Rule 88    LangKleeneC -> LangExpression KleeneC IntExpression
Rule 89    Primary -> LGroup IntExpression RGroup
Rule 90    Primary -> VInt
Rule 91    Primary -> Int
Rule 92    LangPositiveC -> LangExpression PositiveC IntExpression
Rule 93    StringPrefix -> Prefix StringExpression
Rule 94    StringAssign -> VString Eq StringExpression
Rule 95    StringSuffix -> Suffix StringExpression
Rule 96    IntDeclare -> IntType VarName
Rule 97    IntDeclare -> IntType VarName Eq IntExpression
Rule 98    IntDeclare -> IntDeclare Splitter VarName
Rule 99    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 100   StringSubSequence -> SubSequence StringExpression
Rule 101   StringSubString -> SubString StringExpression
Rule 102   IntAssign -> VarName Eq IntExpression
Rule 103   AlphDeclare -> AlphType VarName
Rule 104   AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 105   AlphDeclare -> AlphDeclare Splitter VarName
Rule 106   AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 107   AlphAssign -> VarName Eq AlphExpression
Rule 108   LangDeclare -> LangType VarName
Rule 109   LangDeclare -> LangType VarName Eq LangExpression
Rule 110   LangDeclare -> LangDeclare Splitter VarName
Rule 111   LangDeclare -> LangDeclare Splitter VarName Eq LangExpression
Rule 112   LangAssign -> VLang Eq LangExpression
Rule 113   BooleanDeclare -> BooleanType VarName
Rule 114   BooleanDeclare -> BooleanType VarName Eq BooleanExpression
Rule 115   BooleanDeclare -> BooleanDeclare Splitter VarName
Rule 116   BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression
Rule 117   BooleanAssign -> VBoolean Eq BooleanExpression

Terminals, with rules where they appear

Add                  : 29 32
AlphType             : 103 104
And                  : 25
BooleanType          : 113 114
CloseStruct          : 69 70
CommentText          : 
Concat               : 19 21 52 57
Div                  : 58
EndComment           : 
Eq                   : 80 82 94 97 99 102 104 106 107 109 111 112 114 116 117
False                : 66
InitComment          : 
Int                  : 91
IntType              : 96 97
KleeneC              : 78 88
LGroup               : 44 49 54 67 89
LangType             : 108 109
LenOp                : 8 8 9 9
NextLine             : 
On                   : 9
OpenStruct           : 69 70
Or                   : 5
PositiveC            : 85 92
Pow                  : 27 42 76
Prefix               : 93
RGroup               : 44 49 54 67 89
Show                 : 47
ShowInLine           : 48
Splitter             : 81 82 83 84 98 99 105 106 110 111 115 116
String               : 45
StringType           : 79 80
Sub                  : 30 86
SubSequence          : 100
SubString            : 101
SuchThat             : 
Suffix               : 95
Term                 : 23 24
True                 : 65
VAlph                : 56
VBoolean             : 51 117
VInt                 : 90
VLang                : 68 112
VString              : 46 94
VarName              : 79 80 81 82 96 97 98 99 102 103 104 105 106 107 108 109 110 111 113 114 115 116
error                : 

Nonterminals, with rules where they appear

AddSub               : 3 29 30
Alph                 : 55
AlphAssign           : 73
AlphConcat           : 7 21
AlphDeclare          : 62 105 106
AlphExpression       : 9 35 54 78 85 104 106 107
AlphGroup            : 43
AlphKleeneC          : 12
AlphPositiveC        : 13
AlphPow              : 21 22 42
Assigns              : 40
Boolean              : 50
BooleanAnd           : 5 6 25
BooleanAssign        : 75
BooleanDeclare       : 64 115 116
BooleanExpression    : 38 49 114 116 117
BooleanGroup         : 25 26
BooleanOr            : 1 5
Declares             : 41
IntAssign            : 72
IntDeclare           : 61 98 99
IntExpression        : 27 34 42 78 85 88 89 92 97 99 102
IntPow               : 57 58 59 76
LangAssign           : 74
LangConcat           : 32 33 52
LangDeclare          : 63 110 111
LangExpression       : 37 67 88 92 109 111 112
LangGroup            : 52 53
LangKleeneC          : 14
LangPositiveC        : 15
LangUnion            : 16 32
MultDiv              : 29 30 31 57 58
Primary              : 86 87
ShowVal              : 39
StringAssign         : 71
StringConcat         : 4 19
StringDeclare        : 60 81 82
StringExpression     : 8 9 36 44 70 80 82 83 84 84 93 94 95 100 101
StringGroup          : 28
StringLen            : 2
StringList           : 69 83
StringPow            : 19 20 27
StringPrefix         : 10
StringSubSequence    : 17
StringSubString      : 18
StringSuffix         : 11
Unary                : 76 77
expression           : 23 24 47 48
expressions          : 23 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (23) expressions -> . expressions expression Term
    (24) expressions -> . expression Term
    (34) expression -> . IntExpression
    (35) expression -> . AlphExpression
    (36) expression -> . StringExpression
    (37) expression -> . LangExpression
    (38) expression -> . BooleanExpression
    (39) expression -> . ShowVal
    (40) expression -> . Assigns
    (41) expression -> . Declares
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (7) AlphExpression -> . AlphConcat
    (4) StringExpression -> . StringConcat
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (1) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (71) Assigns -> . StringAssign
    (72) Assigns -> . IntAssign
    (73) Assigns -> . AlphAssign
    (74) Assigns -> . LangAssign
    (75) Assigns -> . BooleanAssign
    (60) Declares -> . StringDeclare
    (61) Declares -> . IntDeclare
    (62) Declares -> . AlphDeclare
    (63) Declares -> . LangDeclare
    (64) Declares -> . BooleanDeclare
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (94) StringAssign -> . VString Eq StringExpression
    (102) IntAssign -> . VarName Eq IntExpression
    (107) AlphAssign -> . VarName Eq AlphExpression
    (112) LangAssign -> . VLang Eq LangExpression
    (117) BooleanAssign -> . VBoolean Eq BooleanExpression
    (79) StringDeclare -> . StringType VarName
    (80) StringDeclare -> . StringType VarName Eq StringExpression
    (81) StringDeclare -> . StringDeclare Splitter VarName
    (82) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (96) IntDeclare -> . IntType VarName
    (97) IntDeclare -> . IntType VarName Eq IntExpression
    (98) IntDeclare -> . IntDeclare Splitter VarName
    (99) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (103) AlphDeclare -> . AlphType VarName
    (104) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (105) AlphDeclare -> . AlphDeclare Splitter VarName
    (106) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (108) LangDeclare -> . LangType VarName
    (109) LangDeclare -> . LangType VarName Eq LangExpression
    (110) LangDeclare -> . LangDeclare Splitter VarName
    (111) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (113) BooleanDeclare -> . BooleanType VarName
    (114) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (115) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (116) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 25
    ShowInLine      shift and go to state 26
    LenOp           shift and go to state 37
    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    VString         shift and go to state 48
    VarName         shift and go to state 49
    VLang           shift and go to state 50
    VBoolean        shift and go to state 51
    StringType      shift and go to state 52
    IntType         shift and go to state 53
    AlphType        shift and go to state 54
    LangType        shift and go to state 55
    BooleanType     shift and go to state 56
    LGroup          shift and go to state 63
    VAlph           shift and go to state 65
    String          shift and go to state 66
    Sub             shift and go to state 39
    OpenStruct      shift and go to state 69
    True            shift and go to state 70
    False           shift and go to state 71
    VInt            shift and go to state 72
    Int             shift and go to state 73

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    BooleanOr                      shift and go to state 24
    StringAssign                   shift and go to state 27
    IntAssign                      shift and go to state 28
    AlphAssign                     shift and go to state 29
    LangAssign                     shift and go to state 30
    BooleanAssign                  shift and go to state 31
    StringDeclare                  shift and go to state 32
    IntDeclare                     shift and go to state 33
    AlphDeclare                    shift and go to state 34
    LangDeclare                    shift and go to state 35
    BooleanDeclare                 shift and go to state 36
    MultDiv                        shift and go to state 38
    AlphPow                        shift and go to state 40
    StringPow                      shift and go to state 41
    LangConcat                     shift and go to state 44
    BooleanAnd                     shift and go to state 47
    IntPow                         shift and go to state 57
    AlphGroup                      shift and go to state 58
    StringGroup                    shift and go to state 59
    LangGroup                      shift and go to state 60
    BooleanGroup                   shift and go to state 61
    Unary                          shift and go to state 62
    Alph                           shift and go to state 64
    Boolean                        shift and go to state 67
    Primary                        shift and go to state 68

state 1

    (0) S' -> expressions .
    (23) expressions -> expressions . expression Term
    (34) expression -> . IntExpression
    (35) expression -> . AlphExpression
    (36) expression -> . StringExpression
    (37) expression -> . LangExpression
    (38) expression -> . BooleanExpression
    (39) expression -> . ShowVal
    (40) expression -> . Assigns
    (41) expression -> . Declares
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (7) AlphExpression -> . AlphConcat
    (4) StringExpression -> . StringConcat
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (1) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (71) Assigns -> . StringAssign
    (72) Assigns -> . IntAssign
    (73) Assigns -> . AlphAssign
    (74) Assigns -> . LangAssign
    (75) Assigns -> . BooleanAssign
    (60) Declares -> . StringDeclare
    (61) Declares -> . IntDeclare
    (62) Declares -> . AlphDeclare
    (63) Declares -> . LangDeclare
    (64) Declares -> . BooleanDeclare
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (94) StringAssign -> . VString Eq StringExpression
    (102) IntAssign -> . VarName Eq IntExpression
    (107) AlphAssign -> . VarName Eq AlphExpression
    (112) LangAssign -> . VLang Eq LangExpression
    (117) BooleanAssign -> . VBoolean Eq BooleanExpression
    (79) StringDeclare -> . StringType VarName
    (80) StringDeclare -> . StringType VarName Eq StringExpression
    (81) StringDeclare -> . StringDeclare Splitter VarName
    (82) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (96) IntDeclare -> . IntType VarName
    (97) IntDeclare -> . IntType VarName Eq IntExpression
    (98) IntDeclare -> . IntDeclare Splitter VarName
    (99) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (103) AlphDeclare -> . AlphType VarName
    (104) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (105) AlphDeclare -> . AlphDeclare Splitter VarName
    (106) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (108) LangDeclare -> . LangType VarName
    (109) LangDeclare -> . LangType VarName Eq LangExpression
    (110) LangDeclare -> . LangDeclare Splitter VarName
    (111) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (113) BooleanDeclare -> . BooleanType VarName
    (114) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (115) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (116) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 25
    ShowInLine      shift and go to state 26
    LenOp           shift and go to state 37
    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    VString         shift and go to state 48
    VarName         shift and go to state 49
    VLang           shift and go to state 50
    VBoolean        shift and go to state 51
    StringType      shift and go to state 52
    IntType         shift and go to state 53
    AlphType        shift and go to state 54
    LangType        shift and go to state 55
    BooleanType     shift and go to state 56
    LGroup          shift and go to state 63
    VAlph           shift and go to state 65
    String          shift and go to state 66
    Sub             shift and go to state 39
    OpenStruct      shift and go to state 69
    True            shift and go to state 70
    False           shift and go to state 71
    VInt            shift and go to state 72
    Int             shift and go to state 73

    expression                     shift and go to state 74
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    BooleanOr                      shift and go to state 24
    StringAssign                   shift and go to state 27
    IntAssign                      shift and go to state 28
    AlphAssign                     shift and go to state 29
    LangAssign                     shift and go to state 30
    BooleanAssign                  shift and go to state 31
    StringDeclare                  shift and go to state 32
    IntDeclare                     shift and go to state 33
    AlphDeclare                    shift and go to state 34
    LangDeclare                    shift and go to state 35
    BooleanDeclare                 shift and go to state 36
    MultDiv                        shift and go to state 38
    AlphPow                        shift and go to state 40
    StringPow                      shift and go to state 41
    LangConcat                     shift and go to state 44
    BooleanAnd                     shift and go to state 47
    IntPow                         shift and go to state 57
    AlphGroup                      shift and go to state 58
    StringGroup                    shift and go to state 59
    LangGroup                      shift and go to state 60
    BooleanGroup                   shift and go to state 61
    Unary                          shift and go to state 62
    Alph                           shift and go to state 64
    Boolean                        shift and go to state 67
    Primary                        shift and go to state 68

state 2

    (24) expressions -> expression . Term

    Term            shift and go to state 75


state 3

    (34) expression -> IntExpression .

    Term            reduce using rule 34 (expression -> IntExpression .)


state 4

    (35) expression -> AlphExpression .
    (78) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (85) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    Term            reduce using rule 35 (expression -> AlphExpression .)
    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 5

    (36) expression -> StringExpression .

    Term            reduce using rule 36 (expression -> StringExpression .)


state 6

    (37) expression -> LangExpression .
    (88) LangKleeneC -> LangExpression . KleeneC IntExpression
    (92) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 37 (expression -> LangExpression .)
    KleeneC         shift and go to state 78
    PositiveC       shift and go to state 79


state 7

    (38) expression -> BooleanExpression .

    Term            reduce using rule 38 (expression -> BooleanExpression .)


state 8

    (39) expression -> ShowVal .

    Term            reduce using rule 39 (expression -> ShowVal .)


state 9

    (40) expression -> Assigns .

    Term            reduce using rule 40 (expression -> Assigns .)


state 10

    (41) expression -> Declares .

    Term            reduce using rule 41 (expression -> Declares .)


state 11

    (2) IntExpression -> StringLen .

    Term            reduce using rule 2 (IntExpression -> StringLen .)
    RGroup          reduce using rule 2 (IntExpression -> StringLen .)
    KleeneC         reduce using rule 2 (IntExpression -> StringLen .)
    PositiveC       reduce using rule 2 (IntExpression -> StringLen .)
    Splitter        reduce using rule 2 (IntExpression -> StringLen .)
    Pow             reduce using rule 2 (IntExpression -> StringLen .)
    Concat          reduce using rule 2 (IntExpression -> StringLen .)
    LenOp           reduce using rule 2 (IntExpression -> StringLen .)
    On              reduce using rule 2 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 2 (IntExpression -> StringLen .)


state 12

    (3) IntExpression -> AddSub .
    (29) AddSub -> AddSub . Add MultDiv
    (30) AddSub -> AddSub . Sub MultDiv

    Term            reduce using rule 3 (IntExpression -> AddSub .)
    RGroup          reduce using rule 3 (IntExpression -> AddSub .)
    KleeneC         reduce using rule 3 (IntExpression -> AddSub .)
    PositiveC       reduce using rule 3 (IntExpression -> AddSub .)
    Splitter        reduce using rule 3 (IntExpression -> AddSub .)
    Pow             reduce using rule 3 (IntExpression -> AddSub .)
    Concat          reduce using rule 3 (IntExpression -> AddSub .)
    LenOp           reduce using rule 3 (IntExpression -> AddSub .)
    On              reduce using rule 3 (IntExpression -> AddSub .)
    CloseStruct     reduce using rule 3 (IntExpression -> AddSub .)
    Add             shift and go to state 80
    Sub             shift and go to state 81


state 13

    (7) AlphExpression -> AlphConcat .
    (21) AlphConcat -> AlphConcat . Concat AlphPow

    KleeneC         reduce using rule 7 (AlphExpression -> AlphConcat .)
    PositiveC       reduce using rule 7 (AlphExpression -> AlphConcat .)
    Term            reduce using rule 7 (AlphExpression -> AlphConcat .)
    RGroup          reduce using rule 7 (AlphExpression -> AlphConcat .)
    LenOp           reduce using rule 7 (AlphExpression -> AlphConcat .)
    Splitter        reduce using rule 7 (AlphExpression -> AlphConcat .)
    Concat          shift and go to state 82


state 14

    (4) StringExpression -> StringConcat .
    (19) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 4 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 4 (StringExpression -> StringConcat .)
    On              reduce using rule 4 (StringExpression -> StringConcat .)
    KleeneC         reduce using rule 4 (StringExpression -> StringConcat .)
    PositiveC       reduce using rule 4 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 4 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 4 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 4 (StringExpression -> StringConcat .)
    Concat          shift and go to state 83


state 15

    (10) LangExpression -> StringPrefix .

    KleeneC         reduce using rule 10 (LangExpression -> StringPrefix .)
    PositiveC       reduce using rule 10 (LangExpression -> StringPrefix .)
    Term            reduce using rule 10 (LangExpression -> StringPrefix .)
    RGroup          reduce using rule 10 (LangExpression -> StringPrefix .)
    Splitter        reduce using rule 10 (LangExpression -> StringPrefix .)


state 16

    (11) LangExpression -> StringSuffix .

    KleeneC         reduce using rule 11 (LangExpression -> StringSuffix .)
    PositiveC       reduce using rule 11 (LangExpression -> StringSuffix .)
    Term            reduce using rule 11 (LangExpression -> StringSuffix .)
    RGroup          reduce using rule 11 (LangExpression -> StringSuffix .)
    Splitter        reduce using rule 11 (LangExpression -> StringSuffix .)


state 17

    (12) LangExpression -> AlphKleeneC .

    KleeneC         reduce using rule 12 (LangExpression -> AlphKleeneC .)
    PositiveC       reduce using rule 12 (LangExpression -> AlphKleeneC .)
    Term            reduce using rule 12 (LangExpression -> AlphKleeneC .)
    RGroup          reduce using rule 12 (LangExpression -> AlphKleeneC .)
    Splitter        reduce using rule 12 (LangExpression -> AlphKleeneC .)


state 18

    (13) LangExpression -> AlphPositiveC .

    KleeneC         reduce using rule 13 (LangExpression -> AlphPositiveC .)
    PositiveC       reduce using rule 13 (LangExpression -> AlphPositiveC .)
    Term            reduce using rule 13 (LangExpression -> AlphPositiveC .)
    RGroup          reduce using rule 13 (LangExpression -> AlphPositiveC .)
    Splitter        reduce using rule 13 (LangExpression -> AlphPositiveC .)


state 19

    (14) LangExpression -> LangKleeneC .

    KleeneC         reduce using rule 14 (LangExpression -> LangKleeneC .)
    PositiveC       reduce using rule 14 (LangExpression -> LangKleeneC .)
    Term            reduce using rule 14 (LangExpression -> LangKleeneC .)
    RGroup          reduce using rule 14 (LangExpression -> LangKleeneC .)
    Splitter        reduce using rule 14 (LangExpression -> LangKleeneC .)


state 20

    (15) LangExpression -> LangPositiveC .

    KleeneC         reduce using rule 15 (LangExpression -> LangPositiveC .)
    PositiveC       reduce using rule 15 (LangExpression -> LangPositiveC .)
    Term            reduce using rule 15 (LangExpression -> LangPositiveC .)
    RGroup          reduce using rule 15 (LangExpression -> LangPositiveC .)
    Splitter        reduce using rule 15 (LangExpression -> LangPositiveC .)


state 21

    (16) LangExpression -> LangUnion .
    (32) LangUnion -> LangUnion . Add LangConcat

    KleeneC         reduce using rule 16 (LangExpression -> LangUnion .)
    PositiveC       reduce using rule 16 (LangExpression -> LangUnion .)
    Term            reduce using rule 16 (LangExpression -> LangUnion .)
    RGroup          reduce using rule 16 (LangExpression -> LangUnion .)
    Splitter        reduce using rule 16 (LangExpression -> LangUnion .)
    Add             shift and go to state 84


state 22

    (17) LangExpression -> StringSubSequence .

    KleeneC         reduce using rule 17 (LangExpression -> StringSubSequence .)
    PositiveC       reduce using rule 17 (LangExpression -> StringSubSequence .)
    Term            reduce using rule 17 (LangExpression -> StringSubSequence .)
    RGroup          reduce using rule 17 (LangExpression -> StringSubSequence .)
    Splitter        reduce using rule 17 (LangExpression -> StringSubSequence .)


state 23

    (18) LangExpression -> StringSubString .

    KleeneC         reduce using rule 18 (LangExpression -> StringSubString .)
    PositiveC       reduce using rule 18 (LangExpression -> StringSubString .)
    Term            reduce using rule 18 (LangExpression -> StringSubString .)
    RGroup          reduce using rule 18 (LangExpression -> StringSubString .)
    Splitter        reduce using rule 18 (LangExpression -> StringSubString .)


state 24

    (1) BooleanExpression -> BooleanOr .
    (5) BooleanOr -> BooleanOr . Or BooleanAnd

    Term            reduce using rule 1 (BooleanExpression -> BooleanOr .)
    RGroup          reduce using rule 1 (BooleanExpression -> BooleanOr .)
    Splitter        reduce using rule 1 (BooleanExpression -> BooleanOr .)
    Or              shift and go to state 85


state 25

    (47) ShowVal -> Show . expression
    (34) expression -> . IntExpression
    (35) expression -> . AlphExpression
    (36) expression -> . StringExpression
    (37) expression -> . LangExpression
    (38) expression -> . BooleanExpression
    (39) expression -> . ShowVal
    (40) expression -> . Assigns
    (41) expression -> . Declares
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (7) AlphExpression -> . AlphConcat
    (4) StringExpression -> . StringConcat
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (1) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (71) Assigns -> . StringAssign
    (72) Assigns -> . IntAssign
    (73) Assigns -> . AlphAssign
    (74) Assigns -> . LangAssign
    (75) Assigns -> . BooleanAssign
    (60) Declares -> . StringDeclare
    (61) Declares -> . IntDeclare
    (62) Declares -> . AlphDeclare
    (63) Declares -> . LangDeclare
    (64) Declares -> . BooleanDeclare
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (94) StringAssign -> . VString Eq StringExpression
    (102) IntAssign -> . VarName Eq IntExpression
    (107) AlphAssign -> . VarName Eq AlphExpression
    (112) LangAssign -> . VLang Eq LangExpression
    (117) BooleanAssign -> . VBoolean Eq BooleanExpression
    (79) StringDeclare -> . StringType VarName
    (80) StringDeclare -> . StringType VarName Eq StringExpression
    (81) StringDeclare -> . StringDeclare Splitter VarName
    (82) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (96) IntDeclare -> . IntType VarName
    (97) IntDeclare -> . IntType VarName Eq IntExpression
    (98) IntDeclare -> . IntDeclare Splitter VarName
    (99) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (103) AlphDeclare -> . AlphType VarName
    (104) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (105) AlphDeclare -> . AlphDeclare Splitter VarName
    (106) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (108) LangDeclare -> . LangType VarName
    (109) LangDeclare -> . LangType VarName Eq LangExpression
    (110) LangDeclare -> . LangDeclare Splitter VarName
    (111) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (113) BooleanDeclare -> . BooleanType VarName
    (114) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (115) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (116) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 25
    ShowInLine      shift and go to state 26
    LenOp           shift and go to state 37
    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    VString         shift and go to state 48
    VarName         shift and go to state 49
    VLang           shift and go to state 50
    VBoolean        shift and go to state 51
    StringType      shift and go to state 52
    IntType         shift and go to state 53
    AlphType        shift and go to state 54
    LangType        shift and go to state 55
    BooleanType     shift and go to state 56
    LGroup          shift and go to state 63
    VAlph           shift and go to state 65
    String          shift and go to state 66
    Sub             shift and go to state 39
    OpenStruct      shift and go to state 69
    True            shift and go to state 70
    False           shift and go to state 71
    VInt            shift and go to state 72
    Int             shift and go to state 73

    expression                     shift and go to state 86
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    BooleanOr                      shift and go to state 24
    StringAssign                   shift and go to state 27
    IntAssign                      shift and go to state 28
    AlphAssign                     shift and go to state 29
    LangAssign                     shift and go to state 30
    BooleanAssign                  shift and go to state 31
    StringDeclare                  shift and go to state 32
    IntDeclare                     shift and go to state 33
    AlphDeclare                    shift and go to state 34
    LangDeclare                    shift and go to state 35
    BooleanDeclare                 shift and go to state 36
    MultDiv                        shift and go to state 38
    AlphPow                        shift and go to state 40
    StringPow                      shift and go to state 41
    LangConcat                     shift and go to state 44
    BooleanAnd                     shift and go to state 47
    IntPow                         shift and go to state 57
    AlphGroup                      shift and go to state 58
    StringGroup                    shift and go to state 59
    LangGroup                      shift and go to state 60
    BooleanGroup                   shift and go to state 61
    Unary                          shift and go to state 62
    Alph                           shift and go to state 64
    Boolean                        shift and go to state 67
    Primary                        shift and go to state 68

state 26

    (48) ShowVal -> ShowInLine . expression
    (34) expression -> . IntExpression
    (35) expression -> . AlphExpression
    (36) expression -> . StringExpression
    (37) expression -> . LangExpression
    (38) expression -> . BooleanExpression
    (39) expression -> . ShowVal
    (40) expression -> . Assigns
    (41) expression -> . Declares
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (7) AlphExpression -> . AlphConcat
    (4) StringExpression -> . StringConcat
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (1) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (71) Assigns -> . StringAssign
    (72) Assigns -> . IntAssign
    (73) Assigns -> . AlphAssign
    (74) Assigns -> . LangAssign
    (75) Assigns -> . BooleanAssign
    (60) Declares -> . StringDeclare
    (61) Declares -> . IntDeclare
    (62) Declares -> . AlphDeclare
    (63) Declares -> . LangDeclare
    (64) Declares -> . BooleanDeclare
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (94) StringAssign -> . VString Eq StringExpression
    (102) IntAssign -> . VarName Eq IntExpression
    (107) AlphAssign -> . VarName Eq AlphExpression
    (112) LangAssign -> . VLang Eq LangExpression
    (117) BooleanAssign -> . VBoolean Eq BooleanExpression
    (79) StringDeclare -> . StringType VarName
    (80) StringDeclare -> . StringType VarName Eq StringExpression
    (81) StringDeclare -> . StringDeclare Splitter VarName
    (82) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (96) IntDeclare -> . IntType VarName
    (97) IntDeclare -> . IntType VarName Eq IntExpression
    (98) IntDeclare -> . IntDeclare Splitter VarName
    (99) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (103) AlphDeclare -> . AlphType VarName
    (104) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (105) AlphDeclare -> . AlphDeclare Splitter VarName
    (106) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (108) LangDeclare -> . LangType VarName
    (109) LangDeclare -> . LangType VarName Eq LangExpression
    (110) LangDeclare -> . LangDeclare Splitter VarName
    (111) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (113) BooleanDeclare -> . BooleanType VarName
    (114) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (115) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (116) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 25
    ShowInLine      shift and go to state 26
    LenOp           shift and go to state 37
    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    VString         shift and go to state 48
    VarName         shift and go to state 49
    VLang           shift and go to state 50
    VBoolean        shift and go to state 51
    StringType      shift and go to state 52
    IntType         shift and go to state 53
    AlphType        shift and go to state 54
    LangType        shift and go to state 55
    BooleanType     shift and go to state 56
    LGroup          shift and go to state 63
    VAlph           shift and go to state 65
    String          shift and go to state 66
    Sub             shift and go to state 39
    OpenStruct      shift and go to state 69
    True            shift and go to state 70
    False           shift and go to state 71
    VInt            shift and go to state 72
    Int             shift and go to state 73

    expression                     shift and go to state 87
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    BooleanOr                      shift and go to state 24
    StringAssign                   shift and go to state 27
    IntAssign                      shift and go to state 28
    AlphAssign                     shift and go to state 29
    LangAssign                     shift and go to state 30
    BooleanAssign                  shift and go to state 31
    StringDeclare                  shift and go to state 32
    IntDeclare                     shift and go to state 33
    AlphDeclare                    shift and go to state 34
    LangDeclare                    shift and go to state 35
    BooleanDeclare                 shift and go to state 36
    MultDiv                        shift and go to state 38
    AlphPow                        shift and go to state 40
    StringPow                      shift and go to state 41
    LangConcat                     shift and go to state 44
    BooleanAnd                     shift and go to state 47
    IntPow                         shift and go to state 57
    AlphGroup                      shift and go to state 58
    StringGroup                    shift and go to state 59
    LangGroup                      shift and go to state 60
    BooleanGroup                   shift and go to state 61
    Unary                          shift and go to state 62
    Alph                           shift and go to state 64
    Boolean                        shift and go to state 67
    Primary                        shift and go to state 68

state 27

    (71) Assigns -> StringAssign .

    Term            reduce using rule 71 (Assigns -> StringAssign .)


state 28

    (72) Assigns -> IntAssign .

    Term            reduce using rule 72 (Assigns -> IntAssign .)


state 29

    (73) Assigns -> AlphAssign .

    Term            reduce using rule 73 (Assigns -> AlphAssign .)


state 30

    (74) Assigns -> LangAssign .

    Term            reduce using rule 74 (Assigns -> LangAssign .)


state 31

    (75) Assigns -> BooleanAssign .

    Term            reduce using rule 75 (Assigns -> BooleanAssign .)


state 32

    (60) Declares -> StringDeclare .
    (81) StringDeclare -> StringDeclare . Splitter VarName
    (82) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 60 (Declares -> StringDeclare .)
    Splitter        shift and go to state 88


state 33

    (61) Declares -> IntDeclare .
    (98) IntDeclare -> IntDeclare . Splitter VarName
    (99) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 61 (Declares -> IntDeclare .)
    Splitter        shift and go to state 89


state 34

    (62) Declares -> AlphDeclare .
    (105) AlphDeclare -> AlphDeclare . Splitter VarName
    (106) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 62 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 90


state 35

    (63) Declares -> LangDeclare .
    (110) LangDeclare -> LangDeclare . Splitter VarName
    (111) LangDeclare -> LangDeclare . Splitter VarName Eq LangExpression

    Term            reduce using rule 63 (Declares -> LangDeclare .)
    Splitter        shift and go to state 91


state 36

    (64) Declares -> BooleanDeclare .
    (115) BooleanDeclare -> BooleanDeclare . Splitter VarName
    (116) BooleanDeclare -> BooleanDeclare . Splitter VarName Eq BooleanExpression

    Term            reduce using rule 64 (Declares -> BooleanDeclare .)
    Splitter        shift and go to state 92


state 37

    (8) StringLen -> LenOp . StringExpression LenOp
    (9) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 93
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 38

    (31) AddSub -> MultDiv .
    (57) MultDiv -> MultDiv . Concat IntPow
    (58) MultDiv -> MultDiv . Div IntPow

  ! shift/reduce conflict for Concat resolved as shift
    Add             reduce using rule 31 (AddSub -> MultDiv .)
    Sub             reduce using rule 31 (AddSub -> MultDiv .)
    Term            reduce using rule 31 (AddSub -> MultDiv .)
    RGroup          reduce using rule 31 (AddSub -> MultDiv .)
    KleeneC         reduce using rule 31 (AddSub -> MultDiv .)
    PositiveC       reduce using rule 31 (AddSub -> MultDiv .)
    Splitter        reduce using rule 31 (AddSub -> MultDiv .)
    Pow             reduce using rule 31 (AddSub -> MultDiv .)
    LenOp           reduce using rule 31 (AddSub -> MultDiv .)
    On              reduce using rule 31 (AddSub -> MultDiv .)
    CloseStruct     reduce using rule 31 (AddSub -> MultDiv .)
    Concat          shift and go to state 96
    Div             shift and go to state 97

  ! Concat          [ reduce using rule 31 (AddSub -> MultDiv .) ]


state 39

    (86) Unary -> Sub . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    Primary                        shift and go to state 98

state 40

    (22) AlphConcat -> AlphPow .
    (42) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 22 (AlphConcat -> AlphPow .)
    KleeneC         reduce using rule 22 (AlphConcat -> AlphPow .)
    PositiveC       reduce using rule 22 (AlphConcat -> AlphPow .)
    Term            reduce using rule 22 (AlphConcat -> AlphPow .)
    RGroup          reduce using rule 22 (AlphConcat -> AlphPow .)
    LenOp           reduce using rule 22 (AlphConcat -> AlphPow .)
    Splitter        reduce using rule 22 (AlphConcat -> AlphPow .)
    Pow             shift and go to state 100


state 41

    (20) StringConcat -> StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 20 (StringConcat -> StringPow .)
    Term            reduce using rule 20 (StringConcat -> StringPow .)
    LenOp           reduce using rule 20 (StringConcat -> StringPow .)
    On              reduce using rule 20 (StringConcat -> StringPow .)
    KleeneC         reduce using rule 20 (StringConcat -> StringPow .)
    PositiveC       reduce using rule 20 (StringConcat -> StringPow .)
    RGroup          reduce using rule 20 (StringConcat -> StringPow .)
    Splitter        reduce using rule 20 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 20 (StringConcat -> StringPow .)
    Pow             shift and go to state 101


state 42

    (93) StringPrefix -> Prefix . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 102
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 43

    (95) StringSuffix -> Suffix . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 103
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 44

    (33) LangUnion -> LangConcat .
    (52) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 33 (LangUnion -> LangConcat .)
    KleeneC         reduce using rule 33 (LangUnion -> LangConcat .)
    PositiveC       reduce using rule 33 (LangUnion -> LangConcat .)
    Term            reduce using rule 33 (LangUnion -> LangConcat .)
    RGroup          reduce using rule 33 (LangUnion -> LangConcat .)
    Splitter        reduce using rule 33 (LangUnion -> LangConcat .)
    Concat          shift and go to state 104


state 45

    (100) StringSubSequence -> SubSequence . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 105
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 46

    (101) StringSubString -> SubString . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 106
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 47

    (6) BooleanOr -> BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 6 (BooleanOr -> BooleanAnd .)
    Term            reduce using rule 6 (BooleanOr -> BooleanAnd .)
    RGroup          reduce using rule 6 (BooleanOr -> BooleanAnd .)
    Splitter        reduce using rule 6 (BooleanOr -> BooleanAnd .)
    And             shift and go to state 107


state 48

    (94) StringAssign -> VString . Eq StringExpression
    (46) StringGroup -> VString .

    Eq              shift and go to state 108
    Pow             reduce using rule 46 (StringGroup -> VString .)
    Concat          reduce using rule 46 (StringGroup -> VString .)
    Term            reduce using rule 46 (StringGroup -> VString .)


state 49

    (102) IntAssign -> VarName . Eq IntExpression
    (107) AlphAssign -> VarName . Eq AlphExpression

    Eq              shift and go to state 109


state 50

    (112) LangAssign -> VLang . Eq LangExpression
    (68) LangGroup -> VLang .

    Eq              shift and go to state 110
    Concat          reduce using rule 68 (LangGroup -> VLang .)
    Add             reduce using rule 68 (LangGroup -> VLang .)
    KleeneC         reduce using rule 68 (LangGroup -> VLang .)
    PositiveC       reduce using rule 68 (LangGroup -> VLang .)
    Term            reduce using rule 68 (LangGroup -> VLang .)


state 51

    (117) BooleanAssign -> VBoolean . Eq BooleanExpression
    (51) BooleanGroup -> VBoolean .

    Eq              shift and go to state 111
    And             reduce using rule 51 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 51 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 51 (BooleanGroup -> VBoolean .)


state 52

    (79) StringDeclare -> StringType . VarName
    (80) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 112


state 53

    (96) IntDeclare -> IntType . VarName
    (97) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 113


state 54

    (103) AlphDeclare -> AlphType . VarName
    (104) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 114


state 55

    (108) LangDeclare -> LangType . VarName
    (109) LangDeclare -> LangType . VarName Eq LangExpression

    VarName         shift and go to state 115


state 56

    (113) BooleanDeclare -> BooleanType . VarName
    (114) BooleanDeclare -> BooleanType . VarName Eq BooleanExpression

    VarName         shift and go to state 116


state 57

    (59) MultDiv -> IntPow .
    (76) IntPow -> IntPow . Pow Unary

  ! shift/reduce conflict for Pow resolved as shift
    Concat          reduce using rule 59 (MultDiv -> IntPow .)
    Div             reduce using rule 59 (MultDiv -> IntPow .)
    Add             reduce using rule 59 (MultDiv -> IntPow .)
    Sub             reduce using rule 59 (MultDiv -> IntPow .)
    Term            reduce using rule 59 (MultDiv -> IntPow .)
    RGroup          reduce using rule 59 (MultDiv -> IntPow .)
    KleeneC         reduce using rule 59 (MultDiv -> IntPow .)
    PositiveC       reduce using rule 59 (MultDiv -> IntPow .)
    Splitter        reduce using rule 59 (MultDiv -> IntPow .)
    LenOp           reduce using rule 59 (MultDiv -> IntPow .)
    On              reduce using rule 59 (MultDiv -> IntPow .)
    CloseStruct     reduce using rule 59 (MultDiv -> IntPow .)
    Pow             shift and go to state 117

  ! Pow             [ reduce using rule 59 (MultDiv -> IntPow .) ]


state 58

    (43) AlphPow -> AlphGroup .

    Pow             reduce using rule 43 (AlphPow -> AlphGroup .)
    Concat          reduce using rule 43 (AlphPow -> AlphGroup .)
    KleeneC         reduce using rule 43 (AlphPow -> AlphGroup .)
    PositiveC       reduce using rule 43 (AlphPow -> AlphGroup .)
    Term            reduce using rule 43 (AlphPow -> AlphGroup .)
    RGroup          reduce using rule 43 (AlphPow -> AlphGroup .)
    LenOp           reduce using rule 43 (AlphPow -> AlphGroup .)
    Splitter        reduce using rule 43 (AlphPow -> AlphGroup .)


state 59

    (28) StringPow -> StringGroup .

    Pow             reduce using rule 28 (StringPow -> StringGroup .)
    Concat          reduce using rule 28 (StringPow -> StringGroup .)
    Term            reduce using rule 28 (StringPow -> StringGroup .)
    LenOp           reduce using rule 28 (StringPow -> StringGroup .)
    On              reduce using rule 28 (StringPow -> StringGroup .)
    KleeneC         reduce using rule 28 (StringPow -> StringGroup .)
    PositiveC       reduce using rule 28 (StringPow -> StringGroup .)
    RGroup          reduce using rule 28 (StringPow -> StringGroup .)
    Splitter        reduce using rule 28 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 28 (StringPow -> StringGroup .)


state 60

    (53) LangConcat -> LangGroup .

    Concat          reduce using rule 53 (LangConcat -> LangGroup .)
    Add             reduce using rule 53 (LangConcat -> LangGroup .)
    KleeneC         reduce using rule 53 (LangConcat -> LangGroup .)
    PositiveC       reduce using rule 53 (LangConcat -> LangGroup .)
    Term            reduce using rule 53 (LangConcat -> LangGroup .)
    RGroup          reduce using rule 53 (LangConcat -> LangGroup .)
    Splitter        reduce using rule 53 (LangConcat -> LangGroup .)


state 61

    (26) BooleanAnd -> BooleanGroup .

    And             reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Or              reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Term            reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    RGroup          reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Splitter        reduce using rule 26 (BooleanAnd -> BooleanGroup .)


state 62

    (77) IntPow -> Unary .

    Pow             reduce using rule 77 (IntPow -> Unary .)
    Concat          reduce using rule 77 (IntPow -> Unary .)
    Div             reduce using rule 77 (IntPow -> Unary .)
    Add             reduce using rule 77 (IntPow -> Unary .)
    Sub             reduce using rule 77 (IntPow -> Unary .)
    Term            reduce using rule 77 (IntPow -> Unary .)
    RGroup          reduce using rule 77 (IntPow -> Unary .)
    KleeneC         reduce using rule 77 (IntPow -> Unary .)
    PositiveC       reduce using rule 77 (IntPow -> Unary .)
    Splitter        reduce using rule 77 (IntPow -> Unary .)
    LenOp           reduce using rule 77 (IntPow -> Unary .)
    On              reduce using rule 77 (IntPow -> Unary .)
    CloseStruct     reduce using rule 77 (IntPow -> Unary .)


state 63

    (54) AlphGroup -> LGroup . AlphExpression RGroup
    (44) StringGroup -> LGroup . StringExpression RGroup
    (67) LangGroup -> LGroup . LangExpression RGroup
    (49) BooleanGroup -> LGroup . BooleanExpression RGroup
    (89) Primary -> LGroup . IntExpression RGroup
    (7) AlphExpression -> . AlphConcat
    (4) StringExpression -> . StringConcat
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (1) BooleanExpression -> . BooleanOr
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    LenOp           shift and go to state 37
    LGroup          shift and go to state 63
    VAlph           shift and go to state 65
    String          shift and go to state 66
    VString         shift and go to state 95
    VLang           shift and go to state 123
    VBoolean        shift and go to state 124
    OpenStruct      shift and go to state 69
    True            shift and go to state 70
    False           shift and go to state 71
    Sub             shift and go to state 39
    VInt            shift and go to state 72
    Int             shift and go to state 73

    AlphExpression                 shift and go to state 118
    StringExpression               shift and go to state 119
    LangExpression                 shift and go to state 120
    BooleanExpression              shift and go to state 121
    IntExpression                  shift and go to state 122
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    BooleanOr                      shift and go to state 24
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 40
    StringPow                      shift and go to state 41
    LangConcat                     shift and go to state 44
    BooleanAnd                     shift and go to state 47
    MultDiv                        shift and go to state 38
    AlphGroup                      shift and go to state 58
    StringGroup                    shift and go to state 59
    LangGroup                      shift and go to state 60
    BooleanGroup                   shift and go to state 61
    IntPow                         shift and go to state 57
    Alph                           shift and go to state 64
    Boolean                        shift and go to state 67
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 64

    (55) AlphGroup -> Alph .

    Pow             reduce using rule 55 (AlphGroup -> Alph .)
    Concat          reduce using rule 55 (AlphGroup -> Alph .)
    KleeneC         reduce using rule 55 (AlphGroup -> Alph .)
    PositiveC       reduce using rule 55 (AlphGroup -> Alph .)
    Term            reduce using rule 55 (AlphGroup -> Alph .)
    RGroup          reduce using rule 55 (AlphGroup -> Alph .)
    LenOp           reduce using rule 55 (AlphGroup -> Alph .)
    Splitter        reduce using rule 55 (AlphGroup -> Alph .)


state 65

    (56) AlphGroup -> VAlph .

    Pow             reduce using rule 56 (AlphGroup -> VAlph .)
    Concat          reduce using rule 56 (AlphGroup -> VAlph .)
    KleeneC         reduce using rule 56 (AlphGroup -> VAlph .)
    PositiveC       reduce using rule 56 (AlphGroup -> VAlph .)
    Term            reduce using rule 56 (AlphGroup -> VAlph .)
    RGroup          reduce using rule 56 (AlphGroup -> VAlph .)
    LenOp           reduce using rule 56 (AlphGroup -> VAlph .)
    Splitter        reduce using rule 56 (AlphGroup -> VAlph .)


state 66

    (45) StringGroup -> String .

    Pow             reduce using rule 45 (StringGroup -> String .)
    Concat          reduce using rule 45 (StringGroup -> String .)
    Term            reduce using rule 45 (StringGroup -> String .)
    LenOp           reduce using rule 45 (StringGroup -> String .)
    On              reduce using rule 45 (StringGroup -> String .)
    KleeneC         reduce using rule 45 (StringGroup -> String .)
    PositiveC       reduce using rule 45 (StringGroup -> String .)
    RGroup          reduce using rule 45 (StringGroup -> String .)
    Splitter        reduce using rule 45 (StringGroup -> String .)
    CloseStruct     reduce using rule 45 (StringGroup -> String .)


state 67

    (50) BooleanGroup -> Boolean .

    And             reduce using rule 50 (BooleanGroup -> Boolean .)
    Or              reduce using rule 50 (BooleanGroup -> Boolean .)
    Term            reduce using rule 50 (BooleanGroup -> Boolean .)
    RGroup          reduce using rule 50 (BooleanGroup -> Boolean .)
    Splitter        reduce using rule 50 (BooleanGroup -> Boolean .)


state 68

    (87) Unary -> Primary .

    Pow             reduce using rule 87 (Unary -> Primary .)
    Concat          reduce using rule 87 (Unary -> Primary .)
    Div             reduce using rule 87 (Unary -> Primary .)
    Add             reduce using rule 87 (Unary -> Primary .)
    Sub             reduce using rule 87 (Unary -> Primary .)
    Term            reduce using rule 87 (Unary -> Primary .)
    RGroup          reduce using rule 87 (Unary -> Primary .)
    KleeneC         reduce using rule 87 (Unary -> Primary .)
    PositiveC       reduce using rule 87 (Unary -> Primary .)
    Splitter        reduce using rule 87 (Unary -> Primary .)
    LenOp           reduce using rule 87 (Unary -> Primary .)
    On              reduce using rule 87 (Unary -> Primary .)
    CloseStruct     reduce using rule 87 (Unary -> Primary .)


state 69

    (69) Alph -> OpenStruct . StringList CloseStruct
    (70) Alph -> OpenStruct . StringExpression CloseStruct
    (83) StringList -> . StringList Splitter StringExpression
    (84) StringList -> . StringExpression Splitter StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringList                     shift and go to state 125
    StringExpression               shift and go to state 126
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 70

    (65) Boolean -> True .

    And             reduce using rule 65 (Boolean -> True .)
    Or              reduce using rule 65 (Boolean -> True .)
    Term            reduce using rule 65 (Boolean -> True .)
    RGroup          reduce using rule 65 (Boolean -> True .)
    Splitter        reduce using rule 65 (Boolean -> True .)


state 71

    (66) Boolean -> False .

    And             reduce using rule 66 (Boolean -> False .)
    Or              reduce using rule 66 (Boolean -> False .)
    Term            reduce using rule 66 (Boolean -> False .)
    RGroup          reduce using rule 66 (Boolean -> False .)
    Splitter        reduce using rule 66 (Boolean -> False .)


state 72

    (90) Primary -> VInt .

    Pow             reduce using rule 90 (Primary -> VInt .)
    Concat          reduce using rule 90 (Primary -> VInt .)
    Div             reduce using rule 90 (Primary -> VInt .)
    Add             reduce using rule 90 (Primary -> VInt .)
    Sub             reduce using rule 90 (Primary -> VInt .)
    Term            reduce using rule 90 (Primary -> VInt .)
    RGroup          reduce using rule 90 (Primary -> VInt .)
    KleeneC         reduce using rule 90 (Primary -> VInt .)
    PositiveC       reduce using rule 90 (Primary -> VInt .)
    Splitter        reduce using rule 90 (Primary -> VInt .)
    LenOp           reduce using rule 90 (Primary -> VInt .)
    On              reduce using rule 90 (Primary -> VInt .)
    CloseStruct     reduce using rule 90 (Primary -> VInt .)


state 73

    (91) Primary -> Int .

    Pow             reduce using rule 91 (Primary -> Int .)
    Concat          reduce using rule 91 (Primary -> Int .)
    Div             reduce using rule 91 (Primary -> Int .)
    Add             reduce using rule 91 (Primary -> Int .)
    Sub             reduce using rule 91 (Primary -> Int .)
    Term            reduce using rule 91 (Primary -> Int .)
    RGroup          reduce using rule 91 (Primary -> Int .)
    KleeneC         reduce using rule 91 (Primary -> Int .)
    PositiveC       reduce using rule 91 (Primary -> Int .)
    Splitter        reduce using rule 91 (Primary -> Int .)
    LenOp           reduce using rule 91 (Primary -> Int .)
    On              reduce using rule 91 (Primary -> Int .)
    CloseStruct     reduce using rule 91 (Primary -> Int .)


state 74

    (23) expressions -> expressions expression . Term

    Term            shift and go to state 127


state 75

    (24) expressions -> expression Term .

    Show            reduce using rule 24 (expressions -> expression Term .)
    ShowInLine      reduce using rule 24 (expressions -> expression Term .)
    LenOp           reduce using rule 24 (expressions -> expression Term .)
    Prefix          reduce using rule 24 (expressions -> expression Term .)
    Suffix          reduce using rule 24 (expressions -> expression Term .)
    SubSequence     reduce using rule 24 (expressions -> expression Term .)
    SubString       reduce using rule 24 (expressions -> expression Term .)
    VString         reduce using rule 24 (expressions -> expression Term .)
    VarName         reduce using rule 24 (expressions -> expression Term .)
    VLang           reduce using rule 24 (expressions -> expression Term .)
    VBoolean        reduce using rule 24 (expressions -> expression Term .)
    StringType      reduce using rule 24 (expressions -> expression Term .)
    IntType         reduce using rule 24 (expressions -> expression Term .)
    AlphType        reduce using rule 24 (expressions -> expression Term .)
    LangType        reduce using rule 24 (expressions -> expression Term .)
    BooleanType     reduce using rule 24 (expressions -> expression Term .)
    LGroup          reduce using rule 24 (expressions -> expression Term .)
    VAlph           reduce using rule 24 (expressions -> expression Term .)
    String          reduce using rule 24 (expressions -> expression Term .)
    Sub             reduce using rule 24 (expressions -> expression Term .)
    OpenStruct      reduce using rule 24 (expressions -> expression Term .)
    True            reduce using rule 24 (expressions -> expression Term .)
    False           reduce using rule 24 (expressions -> expression Term .)
    VInt            reduce using rule 24 (expressions -> expression Term .)
    Int             reduce using rule 24 (expressions -> expression Term .)
    $end            reduce using rule 24 (expressions -> expression Term .)


state 76

    (78) AlphKleeneC -> AlphExpression KleeneC . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 128
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 77

    (85) AlphPositiveC -> AlphExpression PositiveC . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 129
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 78

    (88) LangKleeneC -> LangExpression KleeneC . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 130
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 79

    (92) LangPositiveC -> LangExpression PositiveC . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 131
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 80

    (29) AddSub -> AddSub Add . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    MultDiv                        shift and go to state 132
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 81

    (30) AddSub -> AddSub Sub . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    MultDiv                        shift and go to state 133
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 82

    (21) AlphConcat -> AlphConcat Concat . AlphPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 135
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    AlphPow                        shift and go to state 134
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 83

    (19) StringConcat -> StringConcat Concat . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringPow                      shift and go to state 136
    StringGroup                    shift and go to state 59

state 84

    (32) LangUnion -> LangUnion Add . LangConcat
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang

    LGroup          shift and go to state 138
    VLang           shift and go to state 123

    LangConcat                     shift and go to state 137
    LangGroup                      shift and go to state 60

state 85

    (5) BooleanOr -> BooleanOr Or . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 140
    VBoolean        shift and go to state 124
    True            shift and go to state 70
    False           shift and go to state 71

    BooleanAnd                     shift and go to state 139
    BooleanGroup                   shift and go to state 61
    Boolean                        shift and go to state 67

state 86

    (47) ShowVal -> Show expression .

    Term            reduce using rule 47 (ShowVal -> Show expression .)


state 87

    (48) ShowVal -> ShowInLine expression .

    Term            reduce using rule 48 (ShowVal -> ShowInLine expression .)


state 88

    (81) StringDeclare -> StringDeclare Splitter . VarName
    (82) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 141


state 89

    (98) IntDeclare -> IntDeclare Splitter . VarName
    (99) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 142


state 90

    (105) AlphDeclare -> AlphDeclare Splitter . VarName
    (106) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 143


state 91

    (110) LangDeclare -> LangDeclare Splitter . VarName
    (111) LangDeclare -> LangDeclare Splitter . VarName Eq LangExpression

    VarName         shift and go to state 144


state 92

    (115) BooleanDeclare -> BooleanDeclare Splitter . VarName
    (116) BooleanDeclare -> BooleanDeclare Splitter . VarName Eq BooleanExpression

    VarName         shift and go to state 145


state 93

    (8) StringLen -> LenOp StringExpression . LenOp
    (9) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 146
    On              shift and go to state 147


state 94

    (44) StringGroup -> LGroup . StringExpression RGroup
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 119
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 95

    (46) StringGroup -> VString .

    Pow             reduce using rule 46 (StringGroup -> VString .)
    Concat          reduce using rule 46 (StringGroup -> VString .)
    LenOp           reduce using rule 46 (StringGroup -> VString .)
    On              reduce using rule 46 (StringGroup -> VString .)
    KleeneC         reduce using rule 46 (StringGroup -> VString .)
    PositiveC       reduce using rule 46 (StringGroup -> VString .)
    Term            reduce using rule 46 (StringGroup -> VString .)
    RGroup          reduce using rule 46 (StringGroup -> VString .)
    Splitter        reduce using rule 46 (StringGroup -> VString .)
    CloseStruct     reduce using rule 46 (StringGroup -> VString .)


state 96

    (57) MultDiv -> MultDiv Concat . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntPow                         shift and go to state 148
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 97

    (58) MultDiv -> MultDiv Div . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntPow                         shift and go to state 149
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 98

    (86) Unary -> Sub Primary .

    Pow             reduce using rule 86 (Unary -> Sub Primary .)
    Concat          reduce using rule 86 (Unary -> Sub Primary .)
    Div             reduce using rule 86 (Unary -> Sub Primary .)
    Add             reduce using rule 86 (Unary -> Sub Primary .)
    Sub             reduce using rule 86 (Unary -> Sub Primary .)
    Term            reduce using rule 86 (Unary -> Sub Primary .)
    RGroup          reduce using rule 86 (Unary -> Sub Primary .)
    KleeneC         reduce using rule 86 (Unary -> Sub Primary .)
    PositiveC       reduce using rule 86 (Unary -> Sub Primary .)
    Splitter        reduce using rule 86 (Unary -> Sub Primary .)
    LenOp           reduce using rule 86 (Unary -> Sub Primary .)
    On              reduce using rule 86 (Unary -> Sub Primary .)
    CloseStruct     reduce using rule 86 (Unary -> Sub Primary .)


state 99

    (89) Primary -> LGroup . IntExpression RGroup
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 122
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 100

    (42) AlphPow -> AlphPow Pow . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 150
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 101

    (27) StringPow -> StringPow Pow . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 151
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 102

    (93) StringPrefix -> Prefix StringExpression .

    KleeneC         reduce using rule 93 (StringPrefix -> Prefix StringExpression .)
    PositiveC       reduce using rule 93 (StringPrefix -> Prefix StringExpression .)
    Term            reduce using rule 93 (StringPrefix -> Prefix StringExpression .)
    RGroup          reduce using rule 93 (StringPrefix -> Prefix StringExpression .)
    Splitter        reduce using rule 93 (StringPrefix -> Prefix StringExpression .)


state 103

    (95) StringSuffix -> Suffix StringExpression .

    KleeneC         reduce using rule 95 (StringSuffix -> Suffix StringExpression .)
    PositiveC       reduce using rule 95 (StringSuffix -> Suffix StringExpression .)
    Term            reduce using rule 95 (StringSuffix -> Suffix StringExpression .)
    RGroup          reduce using rule 95 (StringSuffix -> Suffix StringExpression .)
    Splitter        reduce using rule 95 (StringSuffix -> Suffix StringExpression .)


state 104

    (52) LangConcat -> LangConcat Concat . LangGroup
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang

    LGroup          shift and go to state 138
    VLang           shift and go to state 123

    LangGroup                      shift and go to state 152

state 105

    (100) StringSubSequence -> SubSequence StringExpression .

    KleeneC         reduce using rule 100 (StringSubSequence -> SubSequence StringExpression .)
    PositiveC       reduce using rule 100 (StringSubSequence -> SubSequence StringExpression .)
    Term            reduce using rule 100 (StringSubSequence -> SubSequence StringExpression .)
    RGroup          reduce using rule 100 (StringSubSequence -> SubSequence StringExpression .)
    Splitter        reduce using rule 100 (StringSubSequence -> SubSequence StringExpression .)


state 106

    (101) StringSubString -> SubString StringExpression .

    KleeneC         reduce using rule 101 (StringSubString -> SubString StringExpression .)
    PositiveC       reduce using rule 101 (StringSubString -> SubString StringExpression .)
    Term            reduce using rule 101 (StringSubString -> SubString StringExpression .)
    RGroup          reduce using rule 101 (StringSubString -> SubString StringExpression .)
    Splitter        reduce using rule 101 (StringSubString -> SubString StringExpression .)


state 107

    (25) BooleanAnd -> BooleanAnd And . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 140
    VBoolean        shift and go to state 124
    True            shift and go to state 70
    False           shift and go to state 71

    BooleanGroup                   shift and go to state 153
    Boolean                        shift and go to state 67

state 108

    (94) StringAssign -> VString Eq . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 154
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 109

    (102) IntAssign -> VarName Eq . IntExpression
    (107) AlphAssign -> VarName Eq . AlphExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (7) AlphExpression -> . AlphConcat
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    LGroup          shift and go to state 157
    VAlph           shift and go to state 65
    Sub             shift and go to state 39
    OpenStruct      shift and go to state 69
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 155
    AlphExpression                 shift and go to state 156
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    MultDiv                        shift and go to state 38
    AlphPow                        shift and go to state 40
    IntPow                         shift and go to state 57
    AlphGroup                      shift and go to state 58
    Unary                          shift and go to state 62
    Alph                           shift and go to state 64
    Primary                        shift and go to state 68

state 110

    (112) LangAssign -> VLang Eq . LangExpression
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (7) AlphExpression -> . AlphConcat
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    LGroup          shift and go to state 160
    VLang           shift and go to state 123
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    LangExpression                 shift and go to state 158
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    AlphExpression                 shift and go to state 159
    LangConcat                     shift and go to state 44
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 60
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 111

    (117) BooleanAssign -> VBoolean Eq . BooleanExpression
    (1) BooleanExpression -> . BooleanOr
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 140
    VBoolean        shift and go to state 124
    True            shift and go to state 70
    False           shift and go to state 71

    BooleanExpression              shift and go to state 161
    BooleanOr                      shift and go to state 24
    BooleanAnd                     shift and go to state 47
    BooleanGroup                   shift and go to state 61
    Boolean                        shift and go to state 67

state 112

    (79) StringDeclare -> StringType VarName .
    (80) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 79 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 79 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 162


state 113

    (96) IntDeclare -> IntType VarName .
    (97) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 96 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 96 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 163


state 114

    (103) AlphDeclare -> AlphType VarName .
    (104) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 103 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 103 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 164


state 115

    (108) LangDeclare -> LangType VarName .
    (109) LangDeclare -> LangType VarName . Eq LangExpression

    Splitter        reduce using rule 108 (LangDeclare -> LangType VarName .)
    Term            reduce using rule 108 (LangDeclare -> LangType VarName .)
    Eq              shift and go to state 165


state 116

    (113) BooleanDeclare -> BooleanType VarName .
    (114) BooleanDeclare -> BooleanType VarName . Eq BooleanExpression

    Splitter        reduce using rule 113 (BooleanDeclare -> BooleanType VarName .)
    Term            reduce using rule 113 (BooleanDeclare -> BooleanType VarName .)
    Eq              shift and go to state 166


state 117

    (76) IntPow -> IntPow Pow . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    Unary                          shift and go to state 167
    Primary                        shift and go to state 68

state 118

    (54) AlphGroup -> LGroup AlphExpression . RGroup
    (78) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (85) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    RGroup          shift and go to state 168
    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 119

    (44) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 169


state 120

    (67) LangGroup -> LGroup LangExpression . RGroup
    (88) LangKleeneC -> LangExpression . KleeneC IntExpression
    (92) LangPositiveC -> LangExpression . PositiveC IntExpression

    RGroup          shift and go to state 170
    KleeneC         shift and go to state 78
    PositiveC       shift and go to state 79


state 121

    (49) BooleanGroup -> LGroup BooleanExpression . RGroup

    RGroup          shift and go to state 171


state 122

    (89) Primary -> LGroup IntExpression . RGroup

    RGroup          shift and go to state 172


state 123

    (68) LangGroup -> VLang .

    Concat          reduce using rule 68 (LangGroup -> VLang .)
    Add             reduce using rule 68 (LangGroup -> VLang .)
    RGroup          reduce using rule 68 (LangGroup -> VLang .)
    KleeneC         reduce using rule 68 (LangGroup -> VLang .)
    PositiveC       reduce using rule 68 (LangGroup -> VLang .)
    Term            reduce using rule 68 (LangGroup -> VLang .)
    Splitter        reduce using rule 68 (LangGroup -> VLang .)


state 124

    (51) BooleanGroup -> VBoolean .

    And             reduce using rule 51 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 51 (BooleanGroup -> VBoolean .)
    RGroup          reduce using rule 51 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 51 (BooleanGroup -> VBoolean .)
    Splitter        reduce using rule 51 (BooleanGroup -> VBoolean .)


state 125

    (69) Alph -> OpenStruct StringList . CloseStruct
    (83) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 173
    Splitter        shift and go to state 174


state 126

    (70) Alph -> OpenStruct StringExpression . CloseStruct
    (84) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 175
    Splitter        shift and go to state 176


state 127

    (23) expressions -> expressions expression Term .

    Show            reduce using rule 23 (expressions -> expressions expression Term .)
    ShowInLine      reduce using rule 23 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 23 (expressions -> expressions expression Term .)
    Prefix          reduce using rule 23 (expressions -> expressions expression Term .)
    Suffix          reduce using rule 23 (expressions -> expressions expression Term .)
    SubSequence     reduce using rule 23 (expressions -> expressions expression Term .)
    SubString       reduce using rule 23 (expressions -> expressions expression Term .)
    VString         reduce using rule 23 (expressions -> expressions expression Term .)
    VarName         reduce using rule 23 (expressions -> expressions expression Term .)
    VLang           reduce using rule 23 (expressions -> expressions expression Term .)
    VBoolean        reduce using rule 23 (expressions -> expressions expression Term .)
    StringType      reduce using rule 23 (expressions -> expressions expression Term .)
    IntType         reduce using rule 23 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 23 (expressions -> expressions expression Term .)
    LangType        reduce using rule 23 (expressions -> expressions expression Term .)
    BooleanType     reduce using rule 23 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 23 (expressions -> expressions expression Term .)
    VAlph           reduce using rule 23 (expressions -> expressions expression Term .)
    String          reduce using rule 23 (expressions -> expressions expression Term .)
    Sub             reduce using rule 23 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 23 (expressions -> expressions expression Term .)
    True            reduce using rule 23 (expressions -> expressions expression Term .)
    False           reduce using rule 23 (expressions -> expressions expression Term .)
    VInt            reduce using rule 23 (expressions -> expressions expression Term .)
    Int             reduce using rule 23 (expressions -> expressions expression Term .)
    $end            reduce using rule 23 (expressions -> expressions expression Term .)


state 128

    (78) AlphKleeneC -> AlphExpression KleeneC IntExpression .

    KleeneC         reduce using rule 78 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 78 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Term            reduce using rule 78 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    RGroup          reduce using rule 78 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Splitter        reduce using rule 78 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)


state 129

    (85) AlphPositiveC -> AlphExpression PositiveC IntExpression .

    KleeneC         reduce using rule 85 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 85 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Term            reduce using rule 85 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    RGroup          reduce using rule 85 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Splitter        reduce using rule 85 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)


state 130

    (88) LangKleeneC -> LangExpression KleeneC IntExpression .

    KleeneC         reduce using rule 88 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 88 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Term            reduce using rule 88 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    RGroup          reduce using rule 88 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Splitter        reduce using rule 88 (LangKleeneC -> LangExpression KleeneC IntExpression .)


state 131

    (92) LangPositiveC -> LangExpression PositiveC IntExpression .

    KleeneC         reduce using rule 92 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 92 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Term            reduce using rule 92 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    RGroup          reduce using rule 92 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Splitter        reduce using rule 92 (LangPositiveC -> LangExpression PositiveC IntExpression .)


state 132

    (29) AddSub -> AddSub Add MultDiv .
    (57) MultDiv -> MultDiv . Concat IntPow
    (58) MultDiv -> MultDiv . Div IntPow

    Add             reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    Sub             reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    Term            reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    RGroup          reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    KleeneC         reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    PositiveC       reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    Splitter        reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    Pow             reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    LenOp           reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    On              reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    CloseStruct     reduce using rule 29 (AddSub -> AddSub Add MultDiv .)
    Concat          shift and go to state 96
    Div             shift and go to state 97

  ! Concat          [ reduce using rule 29 (AddSub -> AddSub Add MultDiv .) ]


state 133

    (30) AddSub -> AddSub Sub MultDiv .
    (57) MultDiv -> MultDiv . Concat IntPow
    (58) MultDiv -> MultDiv . Div IntPow

    Add             reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    Sub             reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    Term            reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    RGroup          reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    KleeneC         reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    PositiveC       reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    Splitter        reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    Pow             reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    LenOp           reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    On              reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    CloseStruct     reduce using rule 30 (AddSub -> AddSub Sub MultDiv .)
    Concat          shift and go to state 96
    Div             shift and go to state 97

  ! Concat          [ reduce using rule 30 (AddSub -> AddSub Sub MultDiv .) ]


state 134

    (21) AlphConcat -> AlphConcat Concat AlphPow .
    (42) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 21 (AlphConcat -> AlphConcat Concat AlphPow .)
    KleeneC         reduce using rule 21 (AlphConcat -> AlphConcat Concat AlphPow .)
    PositiveC       reduce using rule 21 (AlphConcat -> AlphConcat Concat AlphPow .)
    Term            reduce using rule 21 (AlphConcat -> AlphConcat Concat AlphPow .)
    RGroup          reduce using rule 21 (AlphConcat -> AlphConcat Concat AlphPow .)
    LenOp           reduce using rule 21 (AlphConcat -> AlphConcat Concat AlphPow .)
    Splitter        reduce using rule 21 (AlphConcat -> AlphConcat Concat AlphPow .)
    Pow             shift and go to state 100


state 135

    (54) AlphGroup -> LGroup . AlphExpression RGroup
    (7) AlphExpression -> . AlphConcat
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 135
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    AlphExpression                 shift and go to state 177
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 136

    (19) StringConcat -> StringConcat Concat StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    KleeneC         reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    PositiveC       reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 101


state 137

    (32) LangUnion -> LangUnion Add LangConcat .
    (52) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 32 (LangUnion -> LangUnion Add LangConcat .)
    KleeneC         reduce using rule 32 (LangUnion -> LangUnion Add LangConcat .)
    PositiveC       reduce using rule 32 (LangUnion -> LangUnion Add LangConcat .)
    Term            reduce using rule 32 (LangUnion -> LangUnion Add LangConcat .)
    RGroup          reduce using rule 32 (LangUnion -> LangUnion Add LangConcat .)
    Splitter        reduce using rule 32 (LangUnion -> LangUnion Add LangConcat .)
    Concat          shift and go to state 104


state 138

    (67) LangGroup -> LGroup . LangExpression RGroup
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (7) AlphExpression -> . AlphConcat
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    LGroup          shift and go to state 160
    VLang           shift and go to state 123
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    LangExpression                 shift and go to state 120
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    AlphExpression                 shift and go to state 159
    LangConcat                     shift and go to state 44
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 60
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 139

    (5) BooleanOr -> BooleanOr Or BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 5 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Term            reduce using rule 5 (BooleanOr -> BooleanOr Or BooleanAnd .)
    RGroup          reduce using rule 5 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Splitter        reduce using rule 5 (BooleanOr -> BooleanOr Or BooleanAnd .)
    And             shift and go to state 107


state 140

    (49) BooleanGroup -> LGroup . BooleanExpression RGroup
    (1) BooleanExpression -> . BooleanOr
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 140
    VBoolean        shift and go to state 124
    True            shift and go to state 70
    False           shift and go to state 71

    BooleanExpression              shift and go to state 121
    BooleanOr                      shift and go to state 24
    BooleanAnd                     shift and go to state 47
    BooleanGroup                   shift and go to state 61
    Boolean                        shift and go to state 67

state 141

    (81) StringDeclare -> StringDeclare Splitter VarName .
    (82) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 81 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 81 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 178


state 142

    (98) IntDeclare -> IntDeclare Splitter VarName .
    (99) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 98 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 98 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 179


state 143

    (105) AlphDeclare -> AlphDeclare Splitter VarName .
    (106) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 105 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 105 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 180


state 144

    (110) LangDeclare -> LangDeclare Splitter VarName .
    (111) LangDeclare -> LangDeclare Splitter VarName . Eq LangExpression

    Splitter        reduce using rule 110 (LangDeclare -> LangDeclare Splitter VarName .)
    Term            reduce using rule 110 (LangDeclare -> LangDeclare Splitter VarName .)
    Eq              shift and go to state 181


state 145

    (115) BooleanDeclare -> BooleanDeclare Splitter VarName .
    (116) BooleanDeclare -> BooleanDeclare Splitter VarName . Eq BooleanExpression

    Splitter        reduce using rule 115 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Term            reduce using rule 115 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Eq              shift and go to state 182


state 146

    (8) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    KleeneC         reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    PositiveC       reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 8 (StringLen -> LenOp StringExpression LenOp .)


state 147

    (9) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (7) AlphExpression -> . AlphConcat
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 135
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    AlphExpression                 shift and go to state 183
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 148

    (57) MultDiv -> MultDiv Concat IntPow .
    (76) IntPow -> IntPow . Pow Unary

    Concat          reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    Div             reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    Add             reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    Sub             reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    Term            reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    RGroup          reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    KleeneC         reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    PositiveC       reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    Splitter        reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    LenOp           reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    On              reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    CloseStruct     reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .)
    Pow             shift and go to state 117

  ! Pow             [ reduce using rule 57 (MultDiv -> MultDiv Concat IntPow .) ]


state 149

    (58) MultDiv -> MultDiv Div IntPow .
    (76) IntPow -> IntPow . Pow Unary

    Concat          reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    Div             reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    Add             reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    Sub             reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    Term            reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    RGroup          reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    KleeneC         reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    PositiveC       reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    Splitter        reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    LenOp           reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    On              reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    CloseStruct     reduce using rule 58 (MultDiv -> MultDiv Div IntPow .)
    Pow             shift and go to state 117

  ! Pow             [ reduce using rule 58 (MultDiv -> MultDiv Div IntPow .) ]


state 150

    (42) AlphPow -> AlphPow Pow IntExpression .

    Pow             reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)
    Concat          reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)
    KleeneC         reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)
    PositiveC       reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)
    Term            reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)
    RGroup          reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)
    LenOp           reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)
    Splitter        reduce using rule 42 (AlphPow -> AlphPow Pow IntExpression .)


state 151

    (27) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    KleeneC         reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    PositiveC       reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)


state 152

    (52) LangConcat -> LangConcat Concat LangGroup .

    Concat          reduce using rule 52 (LangConcat -> LangConcat Concat LangGroup .)
    Add             reduce using rule 52 (LangConcat -> LangConcat Concat LangGroup .)
    KleeneC         reduce using rule 52 (LangConcat -> LangConcat Concat LangGroup .)
    PositiveC       reduce using rule 52 (LangConcat -> LangConcat Concat LangGroup .)
    Term            reduce using rule 52 (LangConcat -> LangConcat Concat LangGroup .)
    RGroup          reduce using rule 52 (LangConcat -> LangConcat Concat LangGroup .)
    Splitter        reduce using rule 52 (LangConcat -> LangConcat Concat LangGroup .)


state 153

    (25) BooleanAnd -> BooleanAnd And BooleanGroup .

    And             reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Or              reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Term            reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    RGroup          reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Splitter        reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)


state 154

    (94) StringAssign -> VString Eq StringExpression .

    Term            reduce using rule 94 (StringAssign -> VString Eq StringExpression .)


state 155

    (102) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 102 (IntAssign -> VarName Eq IntExpression .)


state 156

    (107) AlphAssign -> VarName Eq AlphExpression .

    Term            reduce using rule 107 (AlphAssign -> VarName Eq AlphExpression .)


state 157

    (54) AlphGroup -> LGroup . AlphExpression RGroup
    (89) Primary -> LGroup . IntExpression RGroup
    (7) AlphExpression -> . AlphConcat
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    LGroup          shift and go to state 157
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69
    Sub             shift and go to state 39
    VInt            shift and go to state 72
    Int             shift and go to state 73

    AlphExpression                 shift and go to state 177
    IntExpression                  shift and go to state 122
    AlphConcat                     shift and go to state 13
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 40
    MultDiv                        shift and go to state 38
    AlphGroup                      shift and go to state 58
    IntPow                         shift and go to state 57
    Alph                           shift and go to state 64
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 158

    (112) LangAssign -> VLang Eq LangExpression .
    (88) LangKleeneC -> LangExpression . KleeneC IntExpression
    (92) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 112 (LangAssign -> VLang Eq LangExpression .)
    KleeneC         shift and go to state 78
    PositiveC       shift and go to state 79


state 159

    (78) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (85) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 160

    (67) LangGroup -> LGroup . LangExpression RGroup
    (54) AlphGroup -> LGroup . AlphExpression RGroup
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (7) AlphExpression -> . AlphConcat
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    LGroup          shift and go to state 160
    VLang           shift and go to state 123
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    LangExpression                 shift and go to state 120
    AlphExpression                 shift and go to state 118
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    AlphConcat                     shift and go to state 13
    LangConcat                     shift and go to state 44
    AlphPow                        shift and go to state 40
    LangGroup                      shift and go to state 60
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 161

    (117) BooleanAssign -> VBoolean Eq BooleanExpression .

    Term            reduce using rule 117 (BooleanAssign -> VBoolean Eq BooleanExpression .)


state 162

    (80) StringDeclare -> StringType VarName Eq . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 184
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 163

    (97) IntDeclare -> IntType VarName Eq . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 185
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 164

    (104) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (7) AlphExpression -> . AlphConcat
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 135
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    AlphExpression                 shift and go to state 186
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 165

    (109) LangDeclare -> LangType VarName Eq . LangExpression
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (7) AlphExpression -> . AlphConcat
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    LGroup          shift and go to state 160
    VLang           shift and go to state 123
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    LangExpression                 shift and go to state 187
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    AlphExpression                 shift and go to state 159
    LangConcat                     shift and go to state 44
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 60
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 166

    (114) BooleanDeclare -> BooleanType VarName Eq . BooleanExpression
    (1) BooleanExpression -> . BooleanOr
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 140
    VBoolean        shift and go to state 124
    True            shift and go to state 70
    False           shift and go to state 71

    BooleanExpression              shift and go to state 188
    BooleanOr                      shift and go to state 24
    BooleanAnd                     shift and go to state 47
    BooleanGroup                   shift and go to state 61
    Boolean                        shift and go to state 67

state 167

    (76) IntPow -> IntPow Pow Unary .

    Pow             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Concat          reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Div             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Add             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Sub             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Term            reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    RGroup          reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    KleeneC         reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    PositiveC       reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Splitter        reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    LenOp           reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    On              reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    CloseStruct     reduce using rule 76 (IntPow -> IntPow Pow Unary .)


state 168

    (54) AlphGroup -> LGroup AlphExpression RGroup .

    Pow             reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)
    Concat          reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)
    KleeneC         reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)
    PositiveC       reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)
    Term            reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)
    RGroup          reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)
    LenOp           reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)
    Splitter        reduce using rule 54 (AlphGroup -> LGroup AlphExpression RGroup .)


state 169

    (44) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    KleeneC         reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    PositiveC       reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)


state 170

    (67) LangGroup -> LGroup LangExpression RGroup .

    Concat          reduce using rule 67 (LangGroup -> LGroup LangExpression RGroup .)
    Add             reduce using rule 67 (LangGroup -> LGroup LangExpression RGroup .)
    KleeneC         reduce using rule 67 (LangGroup -> LGroup LangExpression RGroup .)
    PositiveC       reduce using rule 67 (LangGroup -> LGroup LangExpression RGroup .)
    Term            reduce using rule 67 (LangGroup -> LGroup LangExpression RGroup .)
    RGroup          reduce using rule 67 (LangGroup -> LGroup LangExpression RGroup .)
    Splitter        reduce using rule 67 (LangGroup -> LGroup LangExpression RGroup .)


state 171

    (49) BooleanGroup -> LGroup BooleanExpression RGroup .

    And             reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Or              reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Term            reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    RGroup          reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Splitter        reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)


state 172

    (89) Primary -> LGroup IntExpression RGroup .

    Pow             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Concat          reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Div             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Add             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Sub             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Term            reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    RGroup          reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    KleeneC         reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    PositiveC       reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Splitter        reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    LenOp           reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    On              reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    CloseStruct     reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)


state 173

    (69) Alph -> OpenStruct StringList CloseStruct .

    Pow             reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)
    Concat          reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)
    KleeneC         reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)
    PositiveC       reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)
    Term            reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)
    RGroup          reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 69 (Alph -> OpenStruct StringList CloseStruct .)


state 174

    (83) StringList -> StringList Splitter . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 189
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 175

    (70) Alph -> OpenStruct StringExpression CloseStruct .

    Pow             reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)
    Concat          reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)
    KleeneC         reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)
    PositiveC       reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)
    Term            reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)
    RGroup          reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 70 (Alph -> OpenStruct StringExpression CloseStruct .)


state 176

    (84) StringList -> StringExpression Splitter . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 190
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 177

    (54) AlphGroup -> LGroup AlphExpression . RGroup

    RGroup          shift and go to state 168


state 178

    (82) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (4) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 94
    String          shift and go to state 66
    VString         shift and go to state 95

    StringExpression               shift and go to state 191
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 41
    StringGroup                    shift and go to state 59

state 179

    (99) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (2) IntExpression -> . StringLen
    (3) IntExpression -> . AddSub
    (8) StringLen -> . LenOp StringExpression LenOp
    (9) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (29) AddSub -> . AddSub Add MultDiv
    (30) AddSub -> . AddSub Sub MultDiv
    (31) AddSub -> . MultDiv
    (57) MultDiv -> . MultDiv Concat IntPow
    (58) MultDiv -> . MultDiv Div IntPow
    (59) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (86) Unary -> . Sub Primary
    (87) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 37
    Sub             shift and go to state 39
    LGroup          shift and go to state 99
    VInt            shift and go to state 72
    Int             shift and go to state 73

    IntExpression                  shift and go to state 192
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 38
    IntPow                         shift and go to state 57
    Unary                          shift and go to state 62
    Primary                        shift and go to state 68

state 180

    (106) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (7) AlphExpression -> . AlphConcat
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 135
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    AlphExpression                 shift and go to state 193
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 181

    (111) LangDeclare -> LangDeclare Splitter VarName Eq . LangExpression
    (10) LangExpression -> . StringPrefix
    (11) LangExpression -> . StringSuffix
    (12) LangExpression -> . AlphKleeneC
    (13) LangExpression -> . AlphPositiveC
    (14) LangExpression -> . LangKleeneC
    (15) LangExpression -> . LangPositiveC
    (16) LangExpression -> . LangUnion
    (17) LangExpression -> . StringSubSequence
    (18) LangExpression -> . StringSubString
    (93) StringPrefix -> . Prefix StringExpression
    (95) StringSuffix -> . Suffix StringExpression
    (78) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (85) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (88) LangKleeneC -> . LangExpression KleeneC IntExpression
    (92) LangPositiveC -> . LangExpression PositiveC IntExpression
    (32) LangUnion -> . LangUnion Add LangConcat
    (33) LangUnion -> . LangConcat
    (100) StringSubSequence -> . SubSequence StringExpression
    (101) StringSubString -> . SubString StringExpression
    (7) AlphExpression -> . AlphConcat
    (52) LangConcat -> . LangConcat Concat LangGroup
    (53) LangConcat -> . LangGroup
    (21) AlphConcat -> . AlphConcat Concat AlphPow
    (22) AlphConcat -> . AlphPow
    (67) LangGroup -> . LGroup LangExpression RGroup
    (68) LangGroup -> . VLang
    (42) AlphPow -> . AlphPow Pow IntExpression
    (43) AlphPow -> . AlphGroup
    (54) AlphGroup -> . LGroup AlphExpression RGroup
    (55) AlphGroup -> . Alph
    (56) AlphGroup -> . VAlph
    (69) Alph -> . OpenStruct StringList CloseStruct
    (70) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 42
    Suffix          shift and go to state 43
    SubSequence     shift and go to state 45
    SubString       shift and go to state 46
    LGroup          shift and go to state 160
    VLang           shift and go to state 123
    VAlph           shift and go to state 65
    OpenStruct      shift and go to state 69

    LangExpression                 shift and go to state 194
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    StringSubString                shift and go to state 23
    AlphExpression                 shift and go to state 159
    LangConcat                     shift and go to state 44
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 60
    AlphPow                        shift and go to state 40
    AlphGroup                      shift and go to state 58
    Alph                           shift and go to state 64

state 182

    (116) BooleanDeclare -> BooleanDeclare Splitter VarName Eq . BooleanExpression
    (1) BooleanExpression -> . BooleanOr
    (5) BooleanOr -> . BooleanOr Or BooleanAnd
    (6) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 140
    VBoolean        shift and go to state 124
    True            shift and go to state 70
    False           shift and go to state 71

    BooleanExpression              shift and go to state 195
    BooleanOr                      shift and go to state 24
    BooleanAnd                     shift and go to state 47
    BooleanGroup                   shift and go to state 61
    Boolean                        shift and go to state 67

state 183

    (9) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 196


state 184

    (80) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 80 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 80 (StringDeclare -> StringType VarName Eq StringExpression .)


state 185

    (97) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 97 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 97 (IntDeclare -> IntType VarName Eq IntExpression .)


state 186

    (104) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 104 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 104 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 187

    (109) LangDeclare -> LangType VarName Eq LangExpression .
    (88) LangKleeneC -> LangExpression . KleeneC IntExpression
    (92) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 109 (LangDeclare -> LangType VarName Eq LangExpression .)
    Term            reduce using rule 109 (LangDeclare -> LangType VarName Eq LangExpression .)
    KleeneC         shift and go to state 78
    PositiveC       shift and go to state 79


state 188

    (114) BooleanDeclare -> BooleanType VarName Eq BooleanExpression .

    Splitter        reduce using rule 114 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)
    Term            reduce using rule 114 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)


state 189

    (83) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 83 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 83 (StringList -> StringList Splitter StringExpression .)


state 190

    (84) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 84 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 84 (StringList -> StringExpression Splitter StringExpression .)


state 191

    (82) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 82 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 82 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 192

    (99) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 99 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 99 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 193

    (106) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 106 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 106 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 194

    (111) LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .
    (88) LangKleeneC -> LangExpression . KleeneC IntExpression
    (92) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 111 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    Term            reduce using rule 111 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    KleeneC         shift and go to state 78
    PositiveC       shift and go to state 79


state 195

    (116) BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .

    Splitter        reduce using rule 116 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)
    Term            reduce using rule 116 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)


state 196

    (9) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    KleeneC         reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    PositiveC       reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 9 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Concat in state 38 resolved as shift
WARNING: shift/reduce conflict for Pow in state 57 resolved as shift
