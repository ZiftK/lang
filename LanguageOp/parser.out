Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LangType
    NextLine

Grammar

Rule 0     S' -> expressions
Rule 1     AlphExpression -> Alph
Rule 2     AlphExpression -> VarValue
Rule 3     IntExpression -> Int
Rule 4     IntExpression -> StringLen
Rule 5     IntExpression -> VarValue
Rule 6     VarValue -> VarName
Rule 7     StringExpression -> StringConcat
Rule 8     Alph -> OpenStruct StringList CloseStruct
Rule 9     Alph -> OpenStruct StringExpression CloseStruct
Rule 10    StringLen -> LenOp StringExpression LenOp
Rule 11    StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 12    StringConcat -> StringConcat Concat StringPow
Rule 13    StringConcat -> StringPow
Rule 14    expressions -> expressions expression Term
Rule 15    expressions -> expression Term
Rule 16    StringList -> StringList Splitter StringExpression
Rule 17    StringList -> StringExpression Splitter StringExpression
Rule 18    StringPow -> StringPow Pow IntExpression
Rule 19    StringPow -> StringGroup
Rule 20    expression -> StringExpression
Rule 21    expression -> IntExpression
Rule 22    expression -> AlphExpression
Rule 23    expression -> ShowVal
Rule 24    expression -> Assigns
Rule 25    expression -> Declares
Rule 26    ShowVal -> Show IntExpression
Rule 27    ShowVal -> Show StringExpression
Rule 28    StringPrefix -> Prefix StringExpression
Rule 29    StringGroup -> LGroup StringExpression RGroup
Rule 30    StringGroup -> String
Rule 31    StringGroup -> VarValue
Rule 32    Declares -> StringDeclare
Rule 33    Declares -> IntDeclare
Rule 34    Declares -> AlphDeclare
Rule 35    Assigns -> StringAssign
Rule 36    Assigns -> IntAssign
Rule 37    Assigns -> AlphAssign
Rule 38    StringDeclare -> StringType VarName
Rule 39    StringDeclare -> StringType VarName Eq StringExpression
Rule 40    StringDeclare -> StringDeclare Splitter VarName
Rule 41    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 42    StringAssign -> VarName Eq StringExpression
Rule 43    IntDeclare -> IntType VarName
Rule 44    IntDeclare -> IntType VarName Eq IntExpression
Rule 45    IntDeclare -> IntDeclare Splitter VarName
Rule 46    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 47    IntAssign -> VarName Eq IntExpression
Rule 48    AlphDeclare -> AlphType VarName
Rule 49    AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 50    AlphDeclare -> AlphDeclare Splitter VarName
Rule 51    AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 52    AlphAssign -> VarName Eq AlphExpression

Terminals, with rules where they appear

AlphType             : 48 49
CloseStruct          : 8 9
Concat               : 12
Eq                   : 39 41 42 44 46 47 49 51 52
Int                  : 3
IntType              : 43 44
LGroup               : 29
LangType             : 
LenOp                : 10 10 11 11
NextLine             : 
On                   : 11
OpenStruct           : 8 9
Pow                  : 18
Prefix               : 28
RGroup               : 29
Show                 : 26 27
Splitter             : 16 17 40 41 45 46 50 51
String               : 30
StringType           : 38 39
Term                 : 14 15
VarName              : 6 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52
error                : 

Nonterminals, with rules where they appear

Alph                 : 1
AlphAssign           : 37
AlphDeclare          : 34 50 51
AlphExpression       : 11 22 49 51 52
Assigns              : 24
Declares             : 25
IntAssign            : 36
IntDeclare           : 33 45 46
IntExpression        : 18 21 26 44 46 47
ShowVal              : 23
StringAssign         : 35
StringConcat         : 7 12
StringDeclare        : 32 40 41
StringExpression     : 9 10 11 16 17 17 20 27 28 29 39 41 42
StringGroup          : 19
StringLen            : 4
StringList           : 8 16
StringPow            : 12 13 18
StringPrefix         : 
VarValue             : 2 5 31
expression           : 14 15
expressions          : 14 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (14) expressions -> . expressions expression Term
    (15) expressions -> . expression Term
    (20) expression -> . StringExpression
    (21) expression -> . IntExpression
    (22) expression -> . AlphExpression
    (23) expression -> . ShowVal
    (24) expression -> . Assigns
    (25) expression -> . Declares
    (7) StringExpression -> . StringConcat
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VarValue
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (26) ShowVal -> . Show IntExpression
    (27) ShowVal -> . Show StringExpression
    (35) Assigns -> . StringAssign
    (36) Assigns -> . IntAssign
    (37) Assigns -> . AlphAssign
    (32) Declares -> . StringDeclare
    (33) Declares -> . IntDeclare
    (34) Declares -> . AlphDeclare
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (10) StringLen -> . LenOp StringExpression LenOp
    (11) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (6) VarValue -> . VarName
    (8) Alph -> . OpenStruct StringList CloseStruct
    (9) Alph -> . OpenStruct StringExpression CloseStruct
    (42) StringAssign -> . VarName Eq StringExpression
    (47) IntAssign -> . VarName Eq IntExpression
    (52) AlphAssign -> . VarName Eq AlphExpression
    (38) StringDeclare -> . StringType VarName
    (39) StringDeclare -> . StringType VarName Eq StringExpression
    (40) StringDeclare -> . StringDeclare Splitter VarName
    (41) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (43) IntDeclare -> . IntType VarName
    (44) IntDeclare -> . IntType VarName Eq IntExpression
    (45) IntDeclare -> . IntDeclare Splitter VarName
    (46) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (48) AlphDeclare -> . AlphType VarName
    (49) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (50) AlphDeclare -> . AlphDeclare Splitter VarName
    (51) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue

    Int             shift and go to state 10
    Show            shift and go to state 14
    LenOp           shift and go to state 22
    VarName         shift and go to state 23
    OpenStruct      shift and go to state 24
    StringType      shift and go to state 25
    IntType         shift and go to state 26
    AlphType        shift and go to state 27
    LGroup          shift and go to state 29
    String          shift and go to state 30

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    StringExpression               shift and go to state 3
    IntExpression                  shift and go to state 4
    AlphExpression                 shift and go to state 5
    ShowVal                        shift and go to state 6
    Assigns                        shift and go to state 7
    Declares                       shift and go to state 8
    StringConcat                   shift and go to state 9
    StringLen                      shift and go to state 11
    VarValue                       shift and go to state 12
    Alph                           shift and go to state 13
    StringAssign                   shift and go to state 15
    IntAssign                      shift and go to state 16
    AlphAssign                     shift and go to state 17
    StringDeclare                  shift and go to state 18
    IntDeclare                     shift and go to state 19
    AlphDeclare                    shift and go to state 20
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28

state 1

    (0) S' -> expressions .
    (14) expressions -> expressions . expression Term
    (20) expression -> . StringExpression
    (21) expression -> . IntExpression
    (22) expression -> . AlphExpression
    (23) expression -> . ShowVal
    (24) expression -> . Assigns
    (25) expression -> . Declares
    (7) StringExpression -> . StringConcat
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VarValue
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (26) ShowVal -> . Show IntExpression
    (27) ShowVal -> . Show StringExpression
    (35) Assigns -> . StringAssign
    (36) Assigns -> . IntAssign
    (37) Assigns -> . AlphAssign
    (32) Declares -> . StringDeclare
    (33) Declares -> . IntDeclare
    (34) Declares -> . AlphDeclare
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (10) StringLen -> . LenOp StringExpression LenOp
    (11) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (6) VarValue -> . VarName
    (8) Alph -> . OpenStruct StringList CloseStruct
    (9) Alph -> . OpenStruct StringExpression CloseStruct
    (42) StringAssign -> . VarName Eq StringExpression
    (47) IntAssign -> . VarName Eq IntExpression
    (52) AlphAssign -> . VarName Eq AlphExpression
    (38) StringDeclare -> . StringType VarName
    (39) StringDeclare -> . StringType VarName Eq StringExpression
    (40) StringDeclare -> . StringDeclare Splitter VarName
    (41) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (43) IntDeclare -> . IntType VarName
    (44) IntDeclare -> . IntType VarName Eq IntExpression
    (45) IntDeclare -> . IntDeclare Splitter VarName
    (46) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (48) AlphDeclare -> . AlphType VarName
    (49) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (50) AlphDeclare -> . AlphDeclare Splitter VarName
    (51) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue

    Int             shift and go to state 10
    Show            shift and go to state 14
    LenOp           shift and go to state 22
    VarName         shift and go to state 23
    OpenStruct      shift and go to state 24
    StringType      shift and go to state 25
    IntType         shift and go to state 26
    AlphType        shift and go to state 27
    LGroup          shift and go to state 29
    String          shift and go to state 30

    expression                     shift and go to state 31
    StringExpression               shift and go to state 3
    IntExpression                  shift and go to state 4
    AlphExpression                 shift and go to state 5
    ShowVal                        shift and go to state 6
    Assigns                        shift and go to state 7
    Declares                       shift and go to state 8
    StringConcat                   shift and go to state 9
    StringLen                      shift and go to state 11
    VarValue                       shift and go to state 12
    Alph                           shift and go to state 13
    StringAssign                   shift and go to state 15
    IntAssign                      shift and go to state 16
    AlphAssign                     shift and go to state 17
    StringDeclare                  shift and go to state 18
    IntDeclare                     shift and go to state 19
    AlphDeclare                    shift and go to state 20
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28

state 2

    (15) expressions -> expression . Term

    Term            shift and go to state 32


state 3

    (20) expression -> StringExpression .

    Term            reduce using rule 20 (expression -> StringExpression .)


state 4

    (21) expression -> IntExpression .

    Term            reduce using rule 21 (expression -> IntExpression .)


state 5

    (22) expression -> AlphExpression .

    Term            reduce using rule 22 (expression -> AlphExpression .)


state 6

    (23) expression -> ShowVal .

    Term            reduce using rule 23 (expression -> ShowVal .)


state 7

    (24) expression -> Assigns .

    Term            reduce using rule 24 (expression -> Assigns .)


state 8

    (25) expression -> Declares .

    Term            reduce using rule 25 (expression -> Declares .)


state 9

    (7) StringExpression -> StringConcat .
    (12) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 7 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 7 (StringExpression -> StringConcat .)
    On              reduce using rule 7 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 7 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 7 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 7 (StringExpression -> StringConcat .)
    Concat          shift and go to state 33


state 10

    (3) IntExpression -> Int .

    Term            reduce using rule 3 (IntExpression -> Int .)
    Pow             reduce using rule 3 (IntExpression -> Int .)
    Concat          reduce using rule 3 (IntExpression -> Int .)
    LenOp           reduce using rule 3 (IntExpression -> Int .)
    On              reduce using rule 3 (IntExpression -> Int .)
    CloseStruct     reduce using rule 3 (IntExpression -> Int .)
    Splitter        reduce using rule 3 (IntExpression -> Int .)
    RGroup          reduce using rule 3 (IntExpression -> Int .)


state 11

    (4) IntExpression -> StringLen .

    Term            reduce using rule 4 (IntExpression -> StringLen .)
    Pow             reduce using rule 4 (IntExpression -> StringLen .)
    Concat          reduce using rule 4 (IntExpression -> StringLen .)
    LenOp           reduce using rule 4 (IntExpression -> StringLen .)
    On              reduce using rule 4 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 4 (IntExpression -> StringLen .)
    Splitter        reduce using rule 4 (IntExpression -> StringLen .)
    RGroup          reduce using rule 4 (IntExpression -> StringLen .)


state 12

    (5) IntExpression -> VarValue .
    (2) AlphExpression -> VarValue .
    (31) StringGroup -> VarValue .

  ! reduce/reduce conflict for Term resolved using rule 2 (AlphExpression -> VarValue .)
  ! reduce/reduce conflict for Term resolved using rule 2 (AlphExpression -> VarValue .)
    Term            reduce using rule 2 (AlphExpression -> VarValue .)
    Pow             reduce using rule 31 (StringGroup -> VarValue .)
    Concat          reduce using rule 31 (StringGroup -> VarValue .)

  ! Term            [ reduce using rule 5 (IntExpression -> VarValue .) ]
  ! Term            [ reduce using rule 31 (StringGroup -> VarValue .) ]


state 13

    (1) AlphExpression -> Alph .

    Term            reduce using rule 1 (AlphExpression -> Alph .)
    LenOp           reduce using rule 1 (AlphExpression -> Alph .)
    Splitter        reduce using rule 1 (AlphExpression -> Alph .)


state 14

    (26) ShowVal -> Show . IntExpression
    (27) ShowVal -> Show . StringExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VarValue
    (7) StringExpression -> . StringConcat
    (10) StringLen -> . LenOp StringExpression LenOp
    (11) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (6) VarValue -> . VarName
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue

    Int             shift and go to state 10
    LenOp           shift and go to state 22
    VarName         shift and go to state 37
    LGroup          shift and go to state 29
    String          shift and go to state 30

    IntExpression                  shift and go to state 34
    StringExpression               shift and go to state 35
    StringLen                      shift and go to state 11
    VarValue                       shift and go to state 36
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28

state 15

    (35) Assigns -> StringAssign .

    Term            reduce using rule 35 (Assigns -> StringAssign .)


state 16

    (36) Assigns -> IntAssign .

    Term            reduce using rule 36 (Assigns -> IntAssign .)


state 17

    (37) Assigns -> AlphAssign .

    Term            reduce using rule 37 (Assigns -> AlphAssign .)


state 18

    (32) Declares -> StringDeclare .
    (40) StringDeclare -> StringDeclare . Splitter VarName
    (41) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 32 (Declares -> StringDeclare .)
    Splitter        shift and go to state 38


state 19

    (33) Declares -> IntDeclare .
    (45) IntDeclare -> IntDeclare . Splitter VarName
    (46) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 33 (Declares -> IntDeclare .)
    Splitter        shift and go to state 39


state 20

    (34) Declares -> AlphDeclare .
    (50) AlphDeclare -> AlphDeclare . Splitter VarName
    (51) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 34 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 40


state 21

    (13) StringConcat -> StringPow .
    (18) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 13 (StringConcat -> StringPow .)
    Term            reduce using rule 13 (StringConcat -> StringPow .)
    LenOp           reduce using rule 13 (StringConcat -> StringPow .)
    On              reduce using rule 13 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 13 (StringConcat -> StringPow .)
    Splitter        reduce using rule 13 (StringConcat -> StringPow .)
    RGroup          reduce using rule 13 (StringConcat -> StringPow .)
    Pow             shift and go to state 41


state 22

    (10) StringLen -> LenOp . StringExpression LenOp
    (11) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (7) StringExpression -> . StringConcat
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringExpression               shift and go to state 42
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 23

    (6) VarValue -> VarName .
    (42) StringAssign -> VarName . Eq StringExpression
    (47) IntAssign -> VarName . Eq IntExpression
    (52) AlphAssign -> VarName . Eq AlphExpression

    Term            reduce using rule 6 (VarValue -> VarName .)
    Pow             reduce using rule 6 (VarValue -> VarName .)
    Concat          reduce using rule 6 (VarValue -> VarName .)
    Eq              shift and go to state 44


state 24

    (8) Alph -> OpenStruct . StringList CloseStruct
    (9) Alph -> OpenStruct . StringExpression CloseStruct
    (16) StringList -> . StringList Splitter StringExpression
    (17) StringList -> . StringExpression Splitter StringExpression
    (7) StringExpression -> . StringConcat
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringList                     shift and go to state 45
    StringExpression               shift and go to state 46
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 25

    (38) StringDeclare -> StringType . VarName
    (39) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 47


state 26

    (43) IntDeclare -> IntType . VarName
    (44) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 48


state 27

    (48) AlphDeclare -> AlphType . VarName
    (49) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 49


state 28

    (19) StringPow -> StringGroup .

    Pow             reduce using rule 19 (StringPow -> StringGroup .)
    Concat          reduce using rule 19 (StringPow -> StringGroup .)
    Term            reduce using rule 19 (StringPow -> StringGroup .)
    LenOp           reduce using rule 19 (StringPow -> StringGroup .)
    On              reduce using rule 19 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 19 (StringPow -> StringGroup .)
    Splitter        reduce using rule 19 (StringPow -> StringGroup .)
    RGroup          reduce using rule 19 (StringPow -> StringGroup .)


state 29

    (29) StringGroup -> LGroup . StringExpression RGroup
    (7) StringExpression -> . StringConcat
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringExpression               shift and go to state 50
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 30

    (30) StringGroup -> String .

    Pow             reduce using rule 30 (StringGroup -> String .)
    Concat          reduce using rule 30 (StringGroup -> String .)
    Term            reduce using rule 30 (StringGroup -> String .)
    LenOp           reduce using rule 30 (StringGroup -> String .)
    On              reduce using rule 30 (StringGroup -> String .)
    CloseStruct     reduce using rule 30 (StringGroup -> String .)
    Splitter        reduce using rule 30 (StringGroup -> String .)
    RGroup          reduce using rule 30 (StringGroup -> String .)


state 31

    (14) expressions -> expressions expression . Term

    Term            shift and go to state 51


state 32

    (15) expressions -> expression Term .

    Int             reduce using rule 15 (expressions -> expression Term .)
    Show            reduce using rule 15 (expressions -> expression Term .)
    LenOp           reduce using rule 15 (expressions -> expression Term .)
    VarName         reduce using rule 15 (expressions -> expression Term .)
    OpenStruct      reduce using rule 15 (expressions -> expression Term .)
    StringType      reduce using rule 15 (expressions -> expression Term .)
    IntType         reduce using rule 15 (expressions -> expression Term .)
    AlphType        reduce using rule 15 (expressions -> expression Term .)
    LGroup          reduce using rule 15 (expressions -> expression Term .)
    String          reduce using rule 15 (expressions -> expression Term .)
    $end            reduce using rule 15 (expressions -> expression Term .)


state 33

    (12) StringConcat -> StringConcat Concat . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringPow                      shift and go to state 52
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 34

    (26) ShowVal -> Show IntExpression .

    Term            reduce using rule 26 (ShowVal -> Show IntExpression .)


state 35

    (27) ShowVal -> Show StringExpression .

    Term            reduce using rule 27 (ShowVal -> Show StringExpression .)


state 36

    (5) IntExpression -> VarValue .
    (31) StringGroup -> VarValue .

  ! reduce/reduce conflict for Term resolved using rule 5 (IntExpression -> VarValue .)
    Term            reduce using rule 5 (IntExpression -> VarValue .)
    Pow             reduce using rule 31 (StringGroup -> VarValue .)
    Concat          reduce using rule 31 (StringGroup -> VarValue .)

  ! Term            [ reduce using rule 31 (StringGroup -> VarValue .) ]


state 37

    (6) VarValue -> VarName .

    Term            reduce using rule 6 (VarValue -> VarName .)
    Pow             reduce using rule 6 (VarValue -> VarName .)
    Concat          reduce using rule 6 (VarValue -> VarName .)
    LenOp           reduce using rule 6 (VarValue -> VarName .)
    On              reduce using rule 6 (VarValue -> VarName .)
    CloseStruct     reduce using rule 6 (VarValue -> VarName .)
    Splitter        reduce using rule 6 (VarValue -> VarName .)
    RGroup          reduce using rule 6 (VarValue -> VarName .)


state 38

    (40) StringDeclare -> StringDeclare Splitter . VarName
    (41) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 53


state 39

    (45) IntDeclare -> IntDeclare Splitter . VarName
    (46) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 54


state 40

    (50) AlphDeclare -> AlphDeclare Splitter . VarName
    (51) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 55


state 41

    (18) StringPow -> StringPow Pow . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VarValue
    (10) StringLen -> . LenOp StringExpression LenOp
    (11) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (6) VarValue -> . VarName

    Int             shift and go to state 10
    LenOp           shift and go to state 22
    VarName         shift and go to state 37

    IntExpression                  shift and go to state 56
    StringLen                      shift and go to state 11
    VarValue                       shift and go to state 57

state 42

    (10) StringLen -> LenOp StringExpression . LenOp
    (11) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 58
    On              shift and go to state 59


state 43

    (31) StringGroup -> VarValue .

    Pow             reduce using rule 31 (StringGroup -> VarValue .)
    Concat          reduce using rule 31 (StringGroup -> VarValue .)
    LenOp           reduce using rule 31 (StringGroup -> VarValue .)
    On              reduce using rule 31 (StringGroup -> VarValue .)
    CloseStruct     reduce using rule 31 (StringGroup -> VarValue .)
    Splitter        reduce using rule 31 (StringGroup -> VarValue .)
    RGroup          reduce using rule 31 (StringGroup -> VarValue .)
    Term            reduce using rule 31 (StringGroup -> VarValue .)


state 44

    (42) StringAssign -> VarName Eq . StringExpression
    (47) IntAssign -> VarName Eq . IntExpression
    (52) AlphAssign -> VarName Eq . AlphExpression
    (7) StringExpression -> . StringConcat
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VarValue
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (10) StringLen -> . LenOp StringExpression LenOp
    (11) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (6) VarValue -> . VarName
    (8) Alph -> . OpenStruct StringList CloseStruct
    (9) Alph -> . OpenStruct StringExpression CloseStruct
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue

    Int             shift and go to state 10
    LenOp           shift and go to state 22
    VarName         shift and go to state 37
    OpenStruct      shift and go to state 24
    LGroup          shift and go to state 29
    String          shift and go to state 30

    StringExpression               shift and go to state 60
    IntExpression                  shift and go to state 61
    AlphExpression                 shift and go to state 62
    StringConcat                   shift and go to state 9
    StringLen                      shift and go to state 11
    VarValue                       shift and go to state 12
    Alph                           shift and go to state 13
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28

state 45

    (8) Alph -> OpenStruct StringList . CloseStruct
    (16) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 63
    Splitter        shift and go to state 64


state 46

    (9) Alph -> OpenStruct StringExpression . CloseStruct
    (17) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 65
    Splitter        shift and go to state 66


state 47

    (38) StringDeclare -> StringType VarName .
    (39) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 38 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 38 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 67


state 48

    (43) IntDeclare -> IntType VarName .
    (44) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 43 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 43 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 68


state 49

    (48) AlphDeclare -> AlphType VarName .
    (49) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 48 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 48 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 69


state 50

    (29) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 70


state 51

    (14) expressions -> expressions expression Term .

    Int             reduce using rule 14 (expressions -> expressions expression Term .)
    Show            reduce using rule 14 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 14 (expressions -> expressions expression Term .)
    VarName         reduce using rule 14 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 14 (expressions -> expressions expression Term .)
    StringType      reduce using rule 14 (expressions -> expressions expression Term .)
    IntType         reduce using rule 14 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 14 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 14 (expressions -> expressions expression Term .)
    String          reduce using rule 14 (expressions -> expressions expression Term .)
    $end            reduce using rule 14 (expressions -> expressions expression Term .)


state 52

    (12) StringConcat -> StringConcat Concat StringPow .
    (18) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 12 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 12 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 12 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 12 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 12 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 12 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 12 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 41


state 53

    (40) StringDeclare -> StringDeclare Splitter VarName .
    (41) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 40 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 40 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 71


state 54

    (45) IntDeclare -> IntDeclare Splitter VarName .
    (46) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 45 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 45 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 72


state 55

    (50) AlphDeclare -> AlphDeclare Splitter VarName .
    (51) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 50 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 50 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 73


state 56

    (18) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 18 (StringPow -> StringPow Pow IntExpression .)


state 57

    (5) IntExpression -> VarValue .

    Pow             reduce using rule 5 (IntExpression -> VarValue .)
    Concat          reduce using rule 5 (IntExpression -> VarValue .)
    Term            reduce using rule 5 (IntExpression -> VarValue .)
    LenOp           reduce using rule 5 (IntExpression -> VarValue .)
    On              reduce using rule 5 (IntExpression -> VarValue .)
    CloseStruct     reduce using rule 5 (IntExpression -> VarValue .)
    Splitter        reduce using rule 5 (IntExpression -> VarValue .)
    RGroup          reduce using rule 5 (IntExpression -> VarValue .)


state 58

    (10) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 10 (StringLen -> LenOp StringExpression LenOp .)


state 59

    (11) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (8) Alph -> . OpenStruct StringList CloseStruct
    (9) Alph -> . OpenStruct StringExpression CloseStruct
    (6) VarValue -> . VarName

    OpenStruct      shift and go to state 24
    VarName         shift and go to state 37

    AlphExpression                 shift and go to state 74
    Alph                           shift and go to state 13
    VarValue                       shift and go to state 75

state 60

    (42) StringAssign -> VarName Eq StringExpression .

    Term            reduce using rule 42 (StringAssign -> VarName Eq StringExpression .)


state 61

    (47) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 47 (IntAssign -> VarName Eq IntExpression .)


state 62

    (52) AlphAssign -> VarName Eq AlphExpression .

    Term            reduce using rule 52 (AlphAssign -> VarName Eq AlphExpression .)


state 63

    (8) Alph -> OpenStruct StringList CloseStruct .

    Term            reduce using rule 8 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 8 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 8 (Alph -> OpenStruct StringList CloseStruct .)


state 64

    (16) StringList -> StringList Splitter . StringExpression
    (7) StringExpression -> . StringConcat
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringExpression               shift and go to state 76
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 65

    (9) Alph -> OpenStruct StringExpression CloseStruct .

    Term            reduce using rule 9 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 9 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 9 (Alph -> OpenStruct StringExpression CloseStruct .)


state 66

    (17) StringList -> StringExpression Splitter . StringExpression
    (7) StringExpression -> . StringConcat
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringExpression               shift and go to state 77
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 67

    (39) StringDeclare -> StringType VarName Eq . StringExpression
    (7) StringExpression -> . StringConcat
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringExpression               shift and go to state 78
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 68

    (44) IntDeclare -> IntType VarName Eq . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VarValue
    (10) StringLen -> . LenOp StringExpression LenOp
    (11) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (6) VarValue -> . VarName

    Int             shift and go to state 10
    LenOp           shift and go to state 22
    VarName         shift and go to state 37

    IntExpression                  shift and go to state 79
    StringLen                      shift and go to state 11
    VarValue                       shift and go to state 57

state 69

    (49) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (8) Alph -> . OpenStruct StringList CloseStruct
    (9) Alph -> . OpenStruct StringExpression CloseStruct
    (6) VarValue -> . VarName

    OpenStruct      shift and go to state 24
    VarName         shift and go to state 37

    AlphExpression                 shift and go to state 80
    Alph                           shift and go to state 13
    VarValue                       shift and go to state 75

state 70

    (29) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 29 (StringGroup -> LGroup StringExpression RGroup .)


state 71

    (41) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (7) StringExpression -> . StringConcat
    (12) StringConcat -> . StringConcat Concat StringPow
    (13) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow IntExpression
    (19) StringPow -> . StringGroup
    (29) StringGroup -> . LGroup StringExpression RGroup
    (30) StringGroup -> . String
    (31) StringGroup -> . VarValue
    (6) VarValue -> . VarName

    LGroup          shift and go to state 29
    String          shift and go to state 30
    VarName         shift and go to state 37

    StringExpression               shift and go to state 81
    StringConcat                   shift and go to state 9
    StringPow                      shift and go to state 21
    StringGroup                    shift and go to state 28
    VarValue                       shift and go to state 43

state 72

    (46) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VarValue
    (10) StringLen -> . LenOp StringExpression LenOp
    (11) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (6) VarValue -> . VarName

    Int             shift and go to state 10
    LenOp           shift and go to state 22
    VarName         shift and go to state 37

    IntExpression                  shift and go to state 82
    StringLen                      shift and go to state 11
    VarValue                       shift and go to state 57

state 73

    (51) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (8) Alph -> . OpenStruct StringList CloseStruct
    (9) Alph -> . OpenStruct StringExpression CloseStruct
    (6) VarValue -> . VarName

    OpenStruct      shift and go to state 24
    VarName         shift and go to state 37

    AlphExpression                 shift and go to state 83
    Alph                           shift and go to state 13
    VarValue                       shift and go to state 75

state 74

    (11) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 84


state 75

    (2) AlphExpression -> VarValue .

    LenOp           reduce using rule 2 (AlphExpression -> VarValue .)
    Splitter        reduce using rule 2 (AlphExpression -> VarValue .)
    Term            reduce using rule 2 (AlphExpression -> VarValue .)


state 76

    (16) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 16 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 16 (StringList -> StringList Splitter StringExpression .)


state 77

    (17) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 17 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 17 (StringList -> StringExpression Splitter StringExpression .)


state 78

    (39) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 39 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 39 (StringDeclare -> StringType VarName Eq StringExpression .)


state 79

    (44) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 44 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 44 (IntDeclare -> IntType VarName Eq IntExpression .)


state 80

    (49) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 49 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 49 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 81

    (41) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 41 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 41 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 82

    (46) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 46 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 46 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 83

    (51) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 51 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 51 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 84

    (11) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 11 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 12 resolved using rule (AlphExpression -> VarValue)
WARNING: rejected rule (IntExpression -> VarValue) in state 12
WARNING: reduce/reduce conflict in state 12 resolved using rule (AlphExpression -> VarValue)
WARNING: rejected rule (StringGroup -> VarValue) in state 12
WARNING: reduce/reduce conflict in state 36 resolved using rule (IntExpression -> VarValue)
WARNING: rejected rule (StringGroup -> VarValue) in state 36
