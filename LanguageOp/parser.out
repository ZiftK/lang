Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NextLine

Grammar

Rule 0     S' -> expressions
Rule 1     AlphExpression -> Alph
Rule 2     AlphExpression -> VarValue
Rule 3     LangExpression -> StringPrefix
Rule 4     LangExpression -> StringSuffix
Rule 5     IntExpression -> Int
Rule 6     IntExpression -> StringLen
Rule 7     IntExpression -> VarValue
Rule 8     VarValue -> VarName
Rule 9     StringExpression -> StringConcat
Rule 10    Alph -> OpenStruct StringList CloseStruct
Rule 11    Alph -> OpenStruct StringExpression CloseStruct
Rule 12    StringPrefix -> Prefix StringExpression
Rule 13    StringLen -> LenOp StringExpression LenOp
Rule 14    StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 15    StringConcat -> StringConcat Concat StringPow
Rule 16    StringConcat -> StringPow
Rule 17    StringSuffix -> Suffix StringExpression
Rule 18    StringList -> StringList Splitter StringExpression
Rule 19    StringList -> StringExpression Splitter StringExpression
Rule 20    expressions -> expressions expression Term
Rule 21    expressions -> expression Term
Rule 22    StringPow -> StringPow Pow IntExpression
Rule 23    StringPow -> StringGroup
Rule 24    expression -> StringExpression
Rule 25    expression -> IntExpression
Rule 26    expression -> AlphExpression
Rule 27    expression -> LangExpression
Rule 28    expression -> ShowVal
Rule 29    expression -> Assigns
Rule 30    expression -> Declares
Rule 31    ShowVal -> Show IntExpression
Rule 32    ShowVal -> Show StringExpression
Rule 33    StringGroup -> LGroup StringExpression RGroup
Rule 34    StringGroup -> String
Rule 35    StringGroup -> VarValue
Rule 36    Declares -> StringDeclare
Rule 37    Declares -> IntDeclare
Rule 38    Declares -> AlphDeclare
Rule 39    Declares -> LangDeclare
Rule 40    Assigns -> StringAssign
Rule 41    Assigns -> IntAssign
Rule 42    Assigns -> AlphAssign
Rule 43    Assigns -> LangAssign
Rule 44    StringDeclare -> StringType VarName
Rule 45    StringDeclare -> StringType VarName Eq StringExpression
Rule 46    StringDeclare -> StringDeclare Splitter VarName
Rule 47    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 48    StringAssign -> VarName Eq StringExpression
Rule 49    IntDeclare -> IntType VarName
Rule 50    IntDeclare -> IntType VarName Eq IntExpression
Rule 51    IntDeclare -> IntDeclare Splitter VarName
Rule 52    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 53    IntAssign -> VarName Eq IntExpression
Rule 54    AlphDeclare -> AlphType VarName
Rule 55    AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 56    AlphDeclare -> AlphDeclare Splitter VarName
Rule 57    AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 58    AlphAssign -> VarName Eq AlphExpression
Rule 59    LangDeclare -> LangType VarName
Rule 60    LangDeclare -> LangType VarName Eq LangExpression
Rule 61    LangDeclare -> LangDeclare Splitter VarName
Rule 62    LangDeclare -> LangDeclare Splitter VarName Eq LangExpression
Rule 63    LangAssign -> VarName Eq LangExpression

Terminals, with rules where they appear

AlphType             : 54 55
CloseStruct          : 10 11
Concat               : 15
Eq                   : 45 47 48 50 52 53 55 57 58 60 62 63
Int                  : 5
IntType              : 49 50
LGroup               : 33
LangType             : 59 60
LenOp                : 13 13 14 14
NextLine             : 
On                   : 14
OpenStruct           : 10 11
Pow                  : 22
Prefix               : 12
RGroup               : 33
Show                 : 31 32
Splitter             : 18 19 46 47 51 52 56 57 61 62
String               : 34
StringType           : 44 45
Suffix               : 17
Term                 : 20 21
VarName              : 8 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
error                : 

Nonterminals, with rules where they appear

Alph                 : 1
AlphAssign           : 42
AlphDeclare          : 38 56 57
AlphExpression       : 14 26 55 57 58
Assigns              : 29
Declares             : 30
IntAssign            : 41
IntDeclare           : 37 51 52
IntExpression        : 22 25 31 50 52 53
LangAssign           : 43
LangDeclare          : 39 61 62
LangExpression       : 27 60 62 63
ShowVal              : 28
StringAssign         : 40
StringConcat         : 9 15
StringDeclare        : 36 46 47
StringExpression     : 11 12 13 14 17 18 19 19 24 32 33 45 47 48
StringGroup          : 23
StringLen            : 6
StringList           : 10 18
StringPow            : 15 16 22
StringPrefix         : 3
StringSuffix         : 4
VarValue             : 2 7 35
expression           : 20 21
expressions          : 20 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (20) expressions -> . expressions expression Term
    (21) expressions -> . expression Term
    (24) expression -> . StringExpression
    (25) expression -> . IntExpression
    (26) expression -> . AlphExpression
    (27) expression -> . LangExpression
    (28) expression -> . ShowVal
    (29) expression -> . Assigns
    (30) expression -> . Declares
    (9) StringExpression -> . StringConcat
    (5) IntExpression -> . Int
    (6) IntExpression -> . StringLen
    (7) IntExpression -> . VarValue
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (31) ShowVal -> . Show IntExpression
    (32) ShowVal -> . Show StringExpression
    (40) Assigns -> . StringAssign
    (41) Assigns -> . IntAssign
    (42) Assigns -> . AlphAssign
    (43) Assigns -> . LangAssign
    (36) Declares -> . StringDeclare
    (37) Declares -> . IntDeclare
    (38) Declares -> . AlphDeclare
    (39) Declares -> . LangDeclare
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (13) StringLen -> . LenOp StringExpression LenOp
    (14) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (8) VarValue -> . VarName
    (10) Alph -> . OpenStruct StringList CloseStruct
    (11) Alph -> . OpenStruct StringExpression CloseStruct
    (12) StringPrefix -> . Prefix StringExpression
    (17) StringSuffix -> . Suffix StringExpression
    (48) StringAssign -> . VarName Eq StringExpression
    (53) IntAssign -> . VarName Eq IntExpression
    (58) AlphAssign -> . VarName Eq AlphExpression
    (63) LangAssign -> . VarName Eq LangExpression
    (44) StringDeclare -> . StringType VarName
    (45) StringDeclare -> . StringType VarName Eq StringExpression
    (46) StringDeclare -> . StringDeclare Splitter VarName
    (47) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (49) IntDeclare -> . IntType VarName
    (50) IntDeclare -> . IntType VarName Eq IntExpression
    (51) IntDeclare -> . IntDeclare Splitter VarName
    (52) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (54) AlphDeclare -> . AlphType VarName
    (55) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (56) AlphDeclare -> . AlphDeclare Splitter VarName
    (57) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (59) LangDeclare -> . LangType VarName
    (60) LangDeclare -> . LangType VarName Eq LangExpression
    (61) LangDeclare -> . LangDeclare Splitter VarName
    (62) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue

    Int             shift and go to state 11
    Show            shift and go to state 17
    LenOp           shift and go to state 27
    VarName         shift and go to state 28
    OpenStruct      shift and go to state 29
    Prefix          shift and go to state 30
    Suffix          shift and go to state 31
    StringType      shift and go to state 32
    IntType         shift and go to state 33
    AlphType        shift and go to state 34
    LangType        shift and go to state 35
    LGroup          shift and go to state 37
    String          shift and go to state 38

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    StringExpression               shift and go to state 3
    IntExpression                  shift and go to state 4
    AlphExpression                 shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringConcat                   shift and go to state 10
    StringLen                      shift and go to state 12
    VarValue                       shift and go to state 13
    Alph                           shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    StringAssign                   shift and go to state 18
    IntAssign                      shift and go to state 19
    AlphAssign                     shift and go to state 20
    LangAssign                     shift and go to state 21
    StringDeclare                  shift and go to state 22
    IntDeclare                     shift and go to state 23
    AlphDeclare                    shift and go to state 24
    LangDeclare                    shift and go to state 25
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36

state 1

    (0) S' -> expressions .
    (20) expressions -> expressions . expression Term
    (24) expression -> . StringExpression
    (25) expression -> . IntExpression
    (26) expression -> . AlphExpression
    (27) expression -> . LangExpression
    (28) expression -> . ShowVal
    (29) expression -> . Assigns
    (30) expression -> . Declares
    (9) StringExpression -> . StringConcat
    (5) IntExpression -> . Int
    (6) IntExpression -> . StringLen
    (7) IntExpression -> . VarValue
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (31) ShowVal -> . Show IntExpression
    (32) ShowVal -> . Show StringExpression
    (40) Assigns -> . StringAssign
    (41) Assigns -> . IntAssign
    (42) Assigns -> . AlphAssign
    (43) Assigns -> . LangAssign
    (36) Declares -> . StringDeclare
    (37) Declares -> . IntDeclare
    (38) Declares -> . AlphDeclare
    (39) Declares -> . LangDeclare
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (13) StringLen -> . LenOp StringExpression LenOp
    (14) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (8) VarValue -> . VarName
    (10) Alph -> . OpenStruct StringList CloseStruct
    (11) Alph -> . OpenStruct StringExpression CloseStruct
    (12) StringPrefix -> . Prefix StringExpression
    (17) StringSuffix -> . Suffix StringExpression
    (48) StringAssign -> . VarName Eq StringExpression
    (53) IntAssign -> . VarName Eq IntExpression
    (58) AlphAssign -> . VarName Eq AlphExpression
    (63) LangAssign -> . VarName Eq LangExpression
    (44) StringDeclare -> . StringType VarName
    (45) StringDeclare -> . StringType VarName Eq StringExpression
    (46) StringDeclare -> . StringDeclare Splitter VarName
    (47) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (49) IntDeclare -> . IntType VarName
    (50) IntDeclare -> . IntType VarName Eq IntExpression
    (51) IntDeclare -> . IntDeclare Splitter VarName
    (52) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (54) AlphDeclare -> . AlphType VarName
    (55) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (56) AlphDeclare -> . AlphDeclare Splitter VarName
    (57) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (59) LangDeclare -> . LangType VarName
    (60) LangDeclare -> . LangType VarName Eq LangExpression
    (61) LangDeclare -> . LangDeclare Splitter VarName
    (62) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue

    Int             shift and go to state 11
    Show            shift and go to state 17
    LenOp           shift and go to state 27
    VarName         shift and go to state 28
    OpenStruct      shift and go to state 29
    Prefix          shift and go to state 30
    Suffix          shift and go to state 31
    StringType      shift and go to state 32
    IntType         shift and go to state 33
    AlphType        shift and go to state 34
    LangType        shift and go to state 35
    LGroup          shift and go to state 37
    String          shift and go to state 38

    expression                     shift and go to state 39
    StringExpression               shift and go to state 3
    IntExpression                  shift and go to state 4
    AlphExpression                 shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringConcat                   shift and go to state 10
    StringLen                      shift and go to state 12
    VarValue                       shift and go to state 13
    Alph                           shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    StringAssign                   shift and go to state 18
    IntAssign                      shift and go to state 19
    AlphAssign                     shift and go to state 20
    LangAssign                     shift and go to state 21
    StringDeclare                  shift and go to state 22
    IntDeclare                     shift and go to state 23
    AlphDeclare                    shift and go to state 24
    LangDeclare                    shift and go to state 25
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36

state 2

    (21) expressions -> expression . Term

    Term            shift and go to state 40


state 3

    (24) expression -> StringExpression .

    Term            reduce using rule 24 (expression -> StringExpression .)


state 4

    (25) expression -> IntExpression .

    Term            reduce using rule 25 (expression -> IntExpression .)


state 5

    (26) expression -> AlphExpression .

    Term            reduce using rule 26 (expression -> AlphExpression .)


state 6

    (27) expression -> LangExpression .

    Term            reduce using rule 27 (expression -> LangExpression .)


state 7

    (28) expression -> ShowVal .

    Term            reduce using rule 28 (expression -> ShowVal .)


state 8

    (29) expression -> Assigns .

    Term            reduce using rule 29 (expression -> Assigns .)


state 9

    (30) expression -> Declares .

    Term            reduce using rule 30 (expression -> Declares .)


state 10

    (9) StringExpression -> StringConcat .
    (15) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 9 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 9 (StringExpression -> StringConcat .)
    On              reduce using rule 9 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 9 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 9 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 9 (StringExpression -> StringConcat .)
    Concat          shift and go to state 41


state 11

    (5) IntExpression -> Int .

    Term            reduce using rule 5 (IntExpression -> Int .)
    Pow             reduce using rule 5 (IntExpression -> Int .)
    Concat          reduce using rule 5 (IntExpression -> Int .)
    LenOp           reduce using rule 5 (IntExpression -> Int .)
    On              reduce using rule 5 (IntExpression -> Int .)
    CloseStruct     reduce using rule 5 (IntExpression -> Int .)
    Splitter        reduce using rule 5 (IntExpression -> Int .)
    RGroup          reduce using rule 5 (IntExpression -> Int .)


state 12

    (6) IntExpression -> StringLen .

    Term            reduce using rule 6 (IntExpression -> StringLen .)
    Pow             reduce using rule 6 (IntExpression -> StringLen .)
    Concat          reduce using rule 6 (IntExpression -> StringLen .)
    LenOp           reduce using rule 6 (IntExpression -> StringLen .)
    On              reduce using rule 6 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 6 (IntExpression -> StringLen .)
    Splitter        reduce using rule 6 (IntExpression -> StringLen .)
    RGroup          reduce using rule 6 (IntExpression -> StringLen .)


state 13

    (7) IntExpression -> VarValue .
    (2) AlphExpression -> VarValue .
    (35) StringGroup -> VarValue .

  ! reduce/reduce conflict for Term resolved using rule 2 (AlphExpression -> VarValue .)
  ! reduce/reduce conflict for Term resolved using rule 2 (AlphExpression -> VarValue .)
    Term            reduce using rule 2 (AlphExpression -> VarValue .)
    Pow             reduce using rule 35 (StringGroup -> VarValue .)
    Concat          reduce using rule 35 (StringGroup -> VarValue .)

  ! Term            [ reduce using rule 7 (IntExpression -> VarValue .) ]
  ! Term            [ reduce using rule 35 (StringGroup -> VarValue .) ]


state 14

    (1) AlphExpression -> Alph .

    Term            reduce using rule 1 (AlphExpression -> Alph .)
    LenOp           reduce using rule 1 (AlphExpression -> Alph .)
    Splitter        reduce using rule 1 (AlphExpression -> Alph .)


state 15

    (3) LangExpression -> StringPrefix .

    Term            reduce using rule 3 (LangExpression -> StringPrefix .)
    Splitter        reduce using rule 3 (LangExpression -> StringPrefix .)


state 16

    (4) LangExpression -> StringSuffix .

    Term            reduce using rule 4 (LangExpression -> StringSuffix .)
    Splitter        reduce using rule 4 (LangExpression -> StringSuffix .)


state 17

    (31) ShowVal -> Show . IntExpression
    (32) ShowVal -> Show . StringExpression
    (5) IntExpression -> . Int
    (6) IntExpression -> . StringLen
    (7) IntExpression -> . VarValue
    (9) StringExpression -> . StringConcat
    (13) StringLen -> . LenOp StringExpression LenOp
    (14) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (8) VarValue -> . VarName
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue

    Int             shift and go to state 11
    LenOp           shift and go to state 27
    VarName         shift and go to state 45
    LGroup          shift and go to state 37
    String          shift and go to state 38

    IntExpression                  shift and go to state 42
    StringExpression               shift and go to state 43
    StringLen                      shift and go to state 12
    VarValue                       shift and go to state 44
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36

state 18

    (40) Assigns -> StringAssign .

    Term            reduce using rule 40 (Assigns -> StringAssign .)


state 19

    (41) Assigns -> IntAssign .

    Term            reduce using rule 41 (Assigns -> IntAssign .)


state 20

    (42) Assigns -> AlphAssign .

    Term            reduce using rule 42 (Assigns -> AlphAssign .)


state 21

    (43) Assigns -> LangAssign .

    Term            reduce using rule 43 (Assigns -> LangAssign .)


state 22

    (36) Declares -> StringDeclare .
    (46) StringDeclare -> StringDeclare . Splitter VarName
    (47) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 36 (Declares -> StringDeclare .)
    Splitter        shift and go to state 46


state 23

    (37) Declares -> IntDeclare .
    (51) IntDeclare -> IntDeclare . Splitter VarName
    (52) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 37 (Declares -> IntDeclare .)
    Splitter        shift and go to state 47


state 24

    (38) Declares -> AlphDeclare .
    (56) AlphDeclare -> AlphDeclare . Splitter VarName
    (57) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 38 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 48


state 25

    (39) Declares -> LangDeclare .
    (61) LangDeclare -> LangDeclare . Splitter VarName
    (62) LangDeclare -> LangDeclare . Splitter VarName Eq LangExpression

    Term            reduce using rule 39 (Declares -> LangDeclare .)
    Splitter        shift and go to state 49


state 26

    (16) StringConcat -> StringPow .
    (22) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 16 (StringConcat -> StringPow .)
    Term            reduce using rule 16 (StringConcat -> StringPow .)
    LenOp           reduce using rule 16 (StringConcat -> StringPow .)
    On              reduce using rule 16 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 16 (StringConcat -> StringPow .)
    Splitter        reduce using rule 16 (StringConcat -> StringPow .)
    RGroup          reduce using rule 16 (StringConcat -> StringPow .)
    Pow             shift and go to state 50


state 27

    (13) StringLen -> LenOp . StringExpression LenOp
    (14) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 51
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 28

    (8) VarValue -> VarName .
    (48) StringAssign -> VarName . Eq StringExpression
    (53) IntAssign -> VarName . Eq IntExpression
    (58) AlphAssign -> VarName . Eq AlphExpression
    (63) LangAssign -> VarName . Eq LangExpression

    Term            reduce using rule 8 (VarValue -> VarName .)
    Pow             reduce using rule 8 (VarValue -> VarName .)
    Concat          reduce using rule 8 (VarValue -> VarName .)
    Eq              shift and go to state 53


state 29

    (10) Alph -> OpenStruct . StringList CloseStruct
    (11) Alph -> OpenStruct . StringExpression CloseStruct
    (18) StringList -> . StringList Splitter StringExpression
    (19) StringList -> . StringExpression Splitter StringExpression
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringList                     shift and go to state 54
    StringExpression               shift and go to state 55
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 30

    (12) StringPrefix -> Prefix . StringExpression
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 56
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 31

    (17) StringSuffix -> Suffix . StringExpression
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 57
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 32

    (44) StringDeclare -> StringType . VarName
    (45) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 58


state 33

    (49) IntDeclare -> IntType . VarName
    (50) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 59


state 34

    (54) AlphDeclare -> AlphType . VarName
    (55) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 60


state 35

    (59) LangDeclare -> LangType . VarName
    (60) LangDeclare -> LangType . VarName Eq LangExpression

    VarName         shift and go to state 61


state 36

    (23) StringPow -> StringGroup .

    Pow             reduce using rule 23 (StringPow -> StringGroup .)
    Concat          reduce using rule 23 (StringPow -> StringGroup .)
    Term            reduce using rule 23 (StringPow -> StringGroup .)
    LenOp           reduce using rule 23 (StringPow -> StringGroup .)
    On              reduce using rule 23 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 23 (StringPow -> StringGroup .)
    Splitter        reduce using rule 23 (StringPow -> StringGroup .)
    RGroup          reduce using rule 23 (StringPow -> StringGroup .)


state 37

    (33) StringGroup -> LGroup . StringExpression RGroup
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 62
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 38

    (34) StringGroup -> String .

    Pow             reduce using rule 34 (StringGroup -> String .)
    Concat          reduce using rule 34 (StringGroup -> String .)
    Term            reduce using rule 34 (StringGroup -> String .)
    LenOp           reduce using rule 34 (StringGroup -> String .)
    On              reduce using rule 34 (StringGroup -> String .)
    CloseStruct     reduce using rule 34 (StringGroup -> String .)
    Splitter        reduce using rule 34 (StringGroup -> String .)
    RGroup          reduce using rule 34 (StringGroup -> String .)


state 39

    (20) expressions -> expressions expression . Term

    Term            shift and go to state 63


state 40

    (21) expressions -> expression Term .

    Int             reduce using rule 21 (expressions -> expression Term .)
    Show            reduce using rule 21 (expressions -> expression Term .)
    LenOp           reduce using rule 21 (expressions -> expression Term .)
    VarName         reduce using rule 21 (expressions -> expression Term .)
    OpenStruct      reduce using rule 21 (expressions -> expression Term .)
    Prefix          reduce using rule 21 (expressions -> expression Term .)
    Suffix          reduce using rule 21 (expressions -> expression Term .)
    StringType      reduce using rule 21 (expressions -> expression Term .)
    IntType         reduce using rule 21 (expressions -> expression Term .)
    AlphType        reduce using rule 21 (expressions -> expression Term .)
    LangType        reduce using rule 21 (expressions -> expression Term .)
    LGroup          reduce using rule 21 (expressions -> expression Term .)
    String          reduce using rule 21 (expressions -> expression Term .)
    $end            reduce using rule 21 (expressions -> expression Term .)


state 41

    (15) StringConcat -> StringConcat Concat . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringPow                      shift and go to state 64
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 42

    (31) ShowVal -> Show IntExpression .

    Term            reduce using rule 31 (ShowVal -> Show IntExpression .)


state 43

    (32) ShowVal -> Show StringExpression .

    Term            reduce using rule 32 (ShowVal -> Show StringExpression .)


state 44

    (7) IntExpression -> VarValue .
    (35) StringGroup -> VarValue .

  ! reduce/reduce conflict for Term resolved using rule 7 (IntExpression -> VarValue .)
    Term            reduce using rule 7 (IntExpression -> VarValue .)
    Pow             reduce using rule 35 (StringGroup -> VarValue .)
    Concat          reduce using rule 35 (StringGroup -> VarValue .)

  ! Term            [ reduce using rule 35 (StringGroup -> VarValue .) ]


state 45

    (8) VarValue -> VarName .

    Term            reduce using rule 8 (VarValue -> VarName .)
    Pow             reduce using rule 8 (VarValue -> VarName .)
    Concat          reduce using rule 8 (VarValue -> VarName .)
    LenOp           reduce using rule 8 (VarValue -> VarName .)
    On              reduce using rule 8 (VarValue -> VarName .)
    CloseStruct     reduce using rule 8 (VarValue -> VarName .)
    Splitter        reduce using rule 8 (VarValue -> VarName .)
    RGroup          reduce using rule 8 (VarValue -> VarName .)


state 46

    (46) StringDeclare -> StringDeclare Splitter . VarName
    (47) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 65


state 47

    (51) IntDeclare -> IntDeclare Splitter . VarName
    (52) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 66


state 48

    (56) AlphDeclare -> AlphDeclare Splitter . VarName
    (57) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 67


state 49

    (61) LangDeclare -> LangDeclare Splitter . VarName
    (62) LangDeclare -> LangDeclare Splitter . VarName Eq LangExpression

    VarName         shift and go to state 68


state 50

    (22) StringPow -> StringPow Pow . IntExpression
    (5) IntExpression -> . Int
    (6) IntExpression -> . StringLen
    (7) IntExpression -> . VarValue
    (13) StringLen -> . LenOp StringExpression LenOp
    (14) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (8) VarValue -> . VarName

    Int             shift and go to state 11
    LenOp           shift and go to state 27
    VarName         shift and go to state 45

    IntExpression                  shift and go to state 69
    StringLen                      shift and go to state 12
    VarValue                       shift and go to state 70

state 51

    (13) StringLen -> LenOp StringExpression . LenOp
    (14) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 71
    On              shift and go to state 72


state 52

    (35) StringGroup -> VarValue .

    Pow             reduce using rule 35 (StringGroup -> VarValue .)
    Concat          reduce using rule 35 (StringGroup -> VarValue .)
    LenOp           reduce using rule 35 (StringGroup -> VarValue .)
    On              reduce using rule 35 (StringGroup -> VarValue .)
    CloseStruct     reduce using rule 35 (StringGroup -> VarValue .)
    Splitter        reduce using rule 35 (StringGroup -> VarValue .)
    Term            reduce using rule 35 (StringGroup -> VarValue .)
    RGroup          reduce using rule 35 (StringGroup -> VarValue .)


state 53

    (48) StringAssign -> VarName Eq . StringExpression
    (53) IntAssign -> VarName Eq . IntExpression
    (58) AlphAssign -> VarName Eq . AlphExpression
    (63) LangAssign -> VarName Eq . LangExpression
    (9) StringExpression -> . StringConcat
    (5) IntExpression -> . Int
    (6) IntExpression -> . StringLen
    (7) IntExpression -> . VarValue
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (13) StringLen -> . LenOp StringExpression LenOp
    (14) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (8) VarValue -> . VarName
    (10) Alph -> . OpenStruct StringList CloseStruct
    (11) Alph -> . OpenStruct StringExpression CloseStruct
    (12) StringPrefix -> . Prefix StringExpression
    (17) StringSuffix -> . Suffix StringExpression
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue

    Int             shift and go to state 11
    LenOp           shift and go to state 27
    VarName         shift and go to state 45
    OpenStruct      shift and go to state 29
    Prefix          shift and go to state 30
    Suffix          shift and go to state 31
    LGroup          shift and go to state 37
    String          shift and go to state 38

    StringExpression               shift and go to state 73
    IntExpression                  shift and go to state 74
    AlphExpression                 shift and go to state 75
    LangExpression                 shift and go to state 76
    StringConcat                   shift and go to state 10
    StringLen                      shift and go to state 12
    VarValue                       shift and go to state 13
    Alph                           shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36

state 54

    (10) Alph -> OpenStruct StringList . CloseStruct
    (18) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 77
    Splitter        shift and go to state 78


state 55

    (11) Alph -> OpenStruct StringExpression . CloseStruct
    (19) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 79
    Splitter        shift and go to state 80


state 56

    (12) StringPrefix -> Prefix StringExpression .

    Term            reduce using rule 12 (StringPrefix -> Prefix StringExpression .)
    Splitter        reduce using rule 12 (StringPrefix -> Prefix StringExpression .)


state 57

    (17) StringSuffix -> Suffix StringExpression .

    Term            reduce using rule 17 (StringSuffix -> Suffix StringExpression .)
    Splitter        reduce using rule 17 (StringSuffix -> Suffix StringExpression .)


state 58

    (44) StringDeclare -> StringType VarName .
    (45) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 44 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 44 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 81


state 59

    (49) IntDeclare -> IntType VarName .
    (50) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 49 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 49 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 82


state 60

    (54) AlphDeclare -> AlphType VarName .
    (55) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 54 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 54 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 83


state 61

    (59) LangDeclare -> LangType VarName .
    (60) LangDeclare -> LangType VarName . Eq LangExpression

    Splitter        reduce using rule 59 (LangDeclare -> LangType VarName .)
    Term            reduce using rule 59 (LangDeclare -> LangType VarName .)
    Eq              shift and go to state 84


state 62

    (33) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 85


state 63

    (20) expressions -> expressions expression Term .

    Int             reduce using rule 20 (expressions -> expressions expression Term .)
    Show            reduce using rule 20 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 20 (expressions -> expressions expression Term .)
    VarName         reduce using rule 20 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 20 (expressions -> expressions expression Term .)
    Prefix          reduce using rule 20 (expressions -> expressions expression Term .)
    Suffix          reduce using rule 20 (expressions -> expressions expression Term .)
    StringType      reduce using rule 20 (expressions -> expressions expression Term .)
    IntType         reduce using rule 20 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 20 (expressions -> expressions expression Term .)
    LangType        reduce using rule 20 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 20 (expressions -> expressions expression Term .)
    String          reduce using rule 20 (expressions -> expressions expression Term .)
    $end            reduce using rule 20 (expressions -> expressions expression Term .)


state 64

    (15) StringConcat -> StringConcat Concat StringPow .
    (22) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 15 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 15 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 15 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 15 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 15 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 15 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 15 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 50


state 65

    (46) StringDeclare -> StringDeclare Splitter VarName .
    (47) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 46 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 46 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 86


state 66

    (51) IntDeclare -> IntDeclare Splitter VarName .
    (52) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 51 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 51 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 87


state 67

    (56) AlphDeclare -> AlphDeclare Splitter VarName .
    (57) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 56 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 56 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 88


state 68

    (61) LangDeclare -> LangDeclare Splitter VarName .
    (62) LangDeclare -> LangDeclare Splitter VarName . Eq LangExpression

    Splitter        reduce using rule 61 (LangDeclare -> LangDeclare Splitter VarName .)
    Term            reduce using rule 61 (LangDeclare -> LangDeclare Splitter VarName .)
    Eq              shift and go to state 89


state 69

    (22) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 22 (StringPow -> StringPow Pow IntExpression .)


state 70

    (7) IntExpression -> VarValue .

    Pow             reduce using rule 7 (IntExpression -> VarValue .)
    Concat          reduce using rule 7 (IntExpression -> VarValue .)
    Term            reduce using rule 7 (IntExpression -> VarValue .)
    LenOp           reduce using rule 7 (IntExpression -> VarValue .)
    On              reduce using rule 7 (IntExpression -> VarValue .)
    CloseStruct     reduce using rule 7 (IntExpression -> VarValue .)
    Splitter        reduce using rule 7 (IntExpression -> VarValue .)
    RGroup          reduce using rule 7 (IntExpression -> VarValue .)


state 71

    (13) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 13 (StringLen -> LenOp StringExpression LenOp .)


state 72

    (14) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (10) Alph -> . OpenStruct StringList CloseStruct
    (11) Alph -> . OpenStruct StringExpression CloseStruct
    (8) VarValue -> . VarName

    OpenStruct      shift and go to state 29
    VarName         shift and go to state 45

    AlphExpression                 shift and go to state 90
    Alph                           shift and go to state 14
    VarValue                       shift and go to state 91

state 73

    (48) StringAssign -> VarName Eq StringExpression .

    Term            reduce using rule 48 (StringAssign -> VarName Eq StringExpression .)


state 74

    (53) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 53 (IntAssign -> VarName Eq IntExpression .)


state 75

    (58) AlphAssign -> VarName Eq AlphExpression .

    Term            reduce using rule 58 (AlphAssign -> VarName Eq AlphExpression .)


state 76

    (63) LangAssign -> VarName Eq LangExpression .

    Term            reduce using rule 63 (LangAssign -> VarName Eq LangExpression .)


state 77

    (10) Alph -> OpenStruct StringList CloseStruct .

    Term            reduce using rule 10 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 10 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 10 (Alph -> OpenStruct StringList CloseStruct .)


state 78

    (18) StringList -> StringList Splitter . StringExpression
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 92
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 79

    (11) Alph -> OpenStruct StringExpression CloseStruct .

    Term            reduce using rule 11 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 11 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 11 (Alph -> OpenStruct StringExpression CloseStruct .)


state 80

    (19) StringList -> StringExpression Splitter . StringExpression
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 93
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 81

    (45) StringDeclare -> StringType VarName Eq . StringExpression
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 94
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 82

    (50) IntDeclare -> IntType VarName Eq . IntExpression
    (5) IntExpression -> . Int
    (6) IntExpression -> . StringLen
    (7) IntExpression -> . VarValue
    (13) StringLen -> . LenOp StringExpression LenOp
    (14) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (8) VarValue -> . VarName

    Int             shift and go to state 11
    LenOp           shift and go to state 27
    VarName         shift and go to state 45

    IntExpression                  shift and go to state 95
    StringLen                      shift and go to state 12
    VarValue                       shift and go to state 70

state 83

    (55) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (10) Alph -> . OpenStruct StringList CloseStruct
    (11) Alph -> . OpenStruct StringExpression CloseStruct
    (8) VarValue -> . VarName

    OpenStruct      shift and go to state 29
    VarName         shift and go to state 45

    AlphExpression                 shift and go to state 96
    Alph                           shift and go to state 14
    VarValue                       shift and go to state 91

state 84

    (60) LangDeclare -> LangType VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (12) StringPrefix -> . Prefix StringExpression
    (17) StringSuffix -> . Suffix StringExpression

    Prefix          shift and go to state 30
    Suffix          shift and go to state 31

    LangExpression                 shift and go to state 97
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16

state 85

    (33) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 33 (StringGroup -> LGroup StringExpression RGroup .)


state 86

    (47) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (9) StringExpression -> . StringConcat
    (15) StringConcat -> . StringConcat Concat StringPow
    (16) StringConcat -> . StringPow
    (22) StringPow -> . StringPow Pow IntExpression
    (23) StringPow -> . StringGroup
    (33) StringGroup -> . LGroup StringExpression RGroup
    (34) StringGroup -> . String
    (35) StringGroup -> . VarValue
    (8) VarValue -> . VarName

    LGroup          shift and go to state 37
    String          shift and go to state 38
    VarName         shift and go to state 45

    StringExpression               shift and go to state 98
    StringConcat                   shift and go to state 10
    StringPow                      shift and go to state 26
    StringGroup                    shift and go to state 36
    VarValue                       shift and go to state 52

state 87

    (52) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (5) IntExpression -> . Int
    (6) IntExpression -> . StringLen
    (7) IntExpression -> . VarValue
    (13) StringLen -> . LenOp StringExpression LenOp
    (14) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (8) VarValue -> . VarName

    Int             shift and go to state 11
    LenOp           shift and go to state 27
    VarName         shift and go to state 45

    IntExpression                  shift and go to state 99
    StringLen                      shift and go to state 12
    VarValue                       shift and go to state 70

state 88

    (57) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (1) AlphExpression -> . Alph
    (2) AlphExpression -> . VarValue
    (10) Alph -> . OpenStruct StringList CloseStruct
    (11) Alph -> . OpenStruct StringExpression CloseStruct
    (8) VarValue -> . VarName

    OpenStruct      shift and go to state 29
    VarName         shift and go to state 45

    AlphExpression                 shift and go to state 100
    Alph                           shift and go to state 14
    VarValue                       shift and go to state 91

state 89

    (62) LangDeclare -> LangDeclare Splitter VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (12) StringPrefix -> . Prefix StringExpression
    (17) StringSuffix -> . Suffix StringExpression

    Prefix          shift and go to state 30
    Suffix          shift and go to state 31

    LangExpression                 shift and go to state 101
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16

state 90

    (14) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 102


state 91

    (2) AlphExpression -> VarValue .

    LenOp           reduce using rule 2 (AlphExpression -> VarValue .)
    Splitter        reduce using rule 2 (AlphExpression -> VarValue .)
    Term            reduce using rule 2 (AlphExpression -> VarValue .)


state 92

    (18) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 18 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 18 (StringList -> StringList Splitter StringExpression .)


state 93

    (19) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 19 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 19 (StringList -> StringExpression Splitter StringExpression .)


state 94

    (45) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 45 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 45 (StringDeclare -> StringType VarName Eq StringExpression .)


state 95

    (50) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 50 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 50 (IntDeclare -> IntType VarName Eq IntExpression .)


state 96

    (55) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 55 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 55 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 97

    (60) LangDeclare -> LangType VarName Eq LangExpression .

    Splitter        reduce using rule 60 (LangDeclare -> LangType VarName Eq LangExpression .)
    Term            reduce using rule 60 (LangDeclare -> LangType VarName Eq LangExpression .)


state 98

    (47) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 47 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 47 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 99

    (52) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 52 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 52 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 100

    (57) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 57 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 57 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 101

    (62) LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .

    Splitter        reduce using rule 62 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    Term            reduce using rule 62 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)


state 102

    (14) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 14 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 13 resolved using rule (AlphExpression -> VarValue)
WARNING: rejected rule (IntExpression -> VarValue) in state 13
WARNING: reduce/reduce conflict in state 13 resolved using rule (AlphExpression -> VarValue)
WARNING: rejected rule (StringGroup -> VarValue) in state 13
WARNING: reduce/reduce conflict in state 44 resolved using rule (IntExpression -> VarValue)
WARNING: rejected rule (StringGroup -> VarValue) in state 44
