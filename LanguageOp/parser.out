Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NextLine
    SuchThat

Grammar

Rule 0     S' -> expressions
Rule 1     AlphExpression -> AlphConcat
Rule 2     BooleanExpression -> BooleanOr
Rule 3     LangExpression -> StringPrefix
Rule 4     LangExpression -> StringSuffix
Rule 5     LangExpression -> AlphKleeneC
Rule 6     LangExpression -> AlphPositiveC
Rule 7     LangExpression -> LangKleeneC
Rule 8     LangExpression -> LangPositiveC
Rule 9     LangExpression -> LangUnion
Rule 10    IntExpression -> StringLen
Rule 11    IntExpression -> AddSub
Rule 12    StringExpression -> StringConcat
Rule 13    BooleanOr -> BooleanOr Or BooleanAnd
Rule 14    BooleanOr -> BooleanAnd
Rule 15    AlphConcat -> AlphConcat Concat AlphPow
Rule 16    AlphConcat -> AlphPow
Rule 17    StringLen -> LenOp StringExpression LenOp
Rule 18    StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 19    StringConcat -> StringConcat Concat StringPow
Rule 20    StringConcat -> StringPow
Rule 21    expressions -> expressions expression Term
Rule 22    expressions -> expression Term
Rule 23    LangUnion -> LangUnion Add LangConcat
Rule 24    LangUnion -> LangConcat
Rule 25    BooleanAnd -> BooleanAnd And BooleanGroup
Rule 26    BooleanAnd -> BooleanGroup
Rule 27    StringPow -> StringPow Pow IntExpression
Rule 28    StringPow -> StringGroup
Rule 29    expression -> IntExpression
Rule 30    expression -> AlphExpression
Rule 31    expression -> StringExpression
Rule 32    expression -> LangExpression
Rule 33    expression -> BooleanExpression
Rule 34    expression -> ShowVal
Rule 35    expression -> Assigns
Rule 36    expression -> Declares
Rule 37    AlphPow -> AlphPow Pow IntExpression
Rule 38    AlphPow -> AlphGroup
Rule 39    AddSub -> MultDiv Add AddSub
Rule 40    AddSub -> MultDiv Sub AddSub
Rule 41    AddSub -> MultDiv
Rule 42    LangConcat -> LangConcat Concat LangGroup
Rule 43    LangConcat -> LangGroup
Rule 44    ShowVal -> Show expression
Rule 45    StringGroup -> LGroup StringExpression RGroup
Rule 46    StringGroup -> String
Rule 47    StringGroup -> VString
Rule 48    BooleanGroup -> LGroup BooleanExpression RGroup
Rule 49    BooleanGroup -> Boolean
Rule 50    BooleanGroup -> VBoolean
Rule 51    AlphGroup -> LGroup AlphExpression RGroup
Rule 52    AlphGroup -> Alph
Rule 53    AlphGroup -> VAlph
Rule 54    Declares -> StringDeclare
Rule 55    Declares -> IntDeclare
Rule 56    Declares -> AlphDeclare
Rule 57    Declares -> LangDeclare
Rule 58    Declares -> BooleanDeclare
Rule 59    MultDiv -> MultDiv Concat Unary
Rule 60    MultDiv -> MultDiv Div Unary
Rule 61    MultDiv -> Unary
Rule 62    LangGroup -> LGroup LangExpression RGroup
Rule 63    LangGroup -> VLang
Rule 64    Alph -> OpenStruct StringList CloseStruct
Rule 65    Alph -> OpenStruct StringExpression CloseStruct
Rule 66    Boolean -> True
Rule 67    Boolean -> False
Rule 68    Assigns -> StringAssign
Rule 69    Assigns -> IntAssign
Rule 70    Assigns -> AlphAssign
Rule 71    Assigns -> LangAssign
Rule 72    Assigns -> BooleanAssign
Rule 73    AlphKleeneC -> AlphExpression KleeneC IntExpression
Rule 74    StringList -> StringList Splitter StringExpression
Rule 75    StringList -> StringExpression Splitter StringExpression
Rule 76    StringDeclare -> StringType VarName
Rule 77    StringDeclare -> StringType VarName Eq StringExpression
Rule 78    StringDeclare -> StringDeclare Splitter VarName
Rule 79    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 80    Unary -> Sub Primary
Rule 81    Unary -> Primary
Rule 82    AlphPositiveC -> AlphExpression PositiveC IntExpression
Rule 83    LangKleeneC -> LangExpression KleeneC IntExpression
Rule 84    Primary -> LGroup IntExpression RGroup
Rule 85    Primary -> VInt
Rule 86    Primary -> Int
Rule 87    LangPositiveC -> LangExpression PositiveC IntExpression
Rule 88    StringPrefix -> Prefix StringExpression
Rule 89    StringAssign -> VString Eq StringExpression
Rule 90    StringSuffix -> Suffix StringExpression
Rule 91    IntDeclare -> IntType VarName
Rule 92    IntDeclare -> IntType VarName Eq IntExpression
Rule 93    IntDeclare -> IntDeclare Splitter VarName
Rule 94    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 95    IntAssign -> VarName Eq IntExpression
Rule 96    AlphDeclare -> AlphType VarName
Rule 97    AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 98    AlphDeclare -> AlphDeclare Splitter VarName
Rule 99    AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 100   AlphAssign -> VarName Eq AlphExpression
Rule 101   LangDeclare -> LangType VarName
Rule 102   LangDeclare -> LangType VarName Eq LangExpression
Rule 103   LangDeclare -> LangDeclare Splitter VarName
Rule 104   LangDeclare -> LangDeclare Splitter VarName Eq LangExpression
Rule 105   LangAssign -> VLang Eq LangExpression
Rule 106   BooleanDeclare -> BooleanType VarName
Rule 107   BooleanDeclare -> BooleanType VarName Eq BooleanExpression
Rule 108   BooleanDeclare -> BooleanDeclare Splitter VarName
Rule 109   BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression
Rule 110   BooleanAssign -> VBoolean Eq BooleanExpression

Terminals, with rules where they appear

Add                  : 23 39
AlphType             : 96 97
And                  : 25
BooleanType          : 106 107
CloseStruct          : 64 65
Concat               : 15 19 42 59
Div                  : 60
Eq                   : 77 79 89 92 94 95 97 99 100 102 104 105 107 109 110
False                : 67
Int                  : 86
IntType              : 91 92
KleeneC              : 73 83
LGroup               : 45 48 51 62 84
LangType             : 101 102
LenOp                : 17 17 18 18
NextLine             : 
On                   : 18
OpenStruct           : 64 65
Or                   : 13
PositiveC            : 82 87
Pow                  : 27 37
Prefix               : 88
RGroup               : 45 48 51 62 84
Show                 : 44
Splitter             : 74 75 78 79 93 94 98 99 103 104 108 109
String               : 46
StringType           : 76 77
Sub                  : 40 80
SuchThat             : 
Suffix               : 90
Term                 : 21 22
True                 : 66
VAlph                : 53
VBoolean             : 50 110
VInt                 : 85
VLang                : 63 105
VString              : 47 89
VarName              : 76 77 78 79 91 92 93 94 95 96 97 98 99 100 101 102 103 104 106 107 108 109
error                : 

Nonterminals, with rules where they appear

AddSub               : 11 39 40
Alph                 : 52
AlphAssign           : 70
AlphConcat           : 1 15
AlphDeclare          : 56 98 99
AlphExpression       : 18 30 51 73 82 97 99 100
AlphGroup            : 38
AlphKleeneC          : 5
AlphPositiveC        : 6
AlphPow              : 15 16 37
Assigns              : 35
Boolean              : 49
BooleanAnd           : 13 14 25
BooleanAssign        : 72
BooleanDeclare       : 58 108 109
BooleanExpression    : 33 48 107 109 110
BooleanGroup         : 25 26
BooleanOr            : 2 13
Declares             : 36
IntAssign            : 69
IntDeclare           : 55 93 94
IntExpression        : 27 29 37 73 82 83 84 87 92 94 95
LangAssign           : 71
LangConcat           : 23 24 42
LangDeclare          : 57 103 104
LangExpression       : 32 62 83 87 102 104 105
LangGroup            : 42 43
LangKleeneC          : 7
LangPositiveC        : 8
LangUnion            : 9 23
MultDiv              : 39 40 41 59 60
Primary              : 80 81
ShowVal              : 34
StringAssign         : 68
StringConcat         : 12 19
StringDeclare        : 54 78 79
StringExpression     : 17 18 31 45 65 74 75 75 77 79 88 89 90
StringGroup          : 28
StringLen            : 10
StringList           : 64 74
StringPow            : 19 20 27
StringPrefix         : 3
StringSuffix         : 4
Unary                : 59 60 61
expression           : 21 22 44
expressions          : 21 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (21) expressions -> . expressions expression Term
    (22) expressions -> . expression Term
    (29) expression -> . IntExpression
    (30) expression -> . AlphExpression
    (31) expression -> . StringExpression
    (32) expression -> . LangExpression
    (33) expression -> . BooleanExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (44) ShowVal -> . Show expression
    (68) Assigns -> . StringAssign
    (69) Assigns -> . IntAssign
    (70) Assigns -> . AlphAssign
    (71) Assigns -> . LangAssign
    (72) Assigns -> . BooleanAssign
    (54) Declares -> . StringDeclare
    (55) Declares -> . IntDeclare
    (56) Declares -> . AlphDeclare
    (57) Declares -> . LangDeclare
    (58) Declares -> . BooleanDeclare
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (89) StringAssign -> . VString Eq StringExpression
    (95) IntAssign -> . VarName Eq IntExpression
    (100) AlphAssign -> . VarName Eq AlphExpression
    (105) LangAssign -> . VLang Eq LangExpression
    (110) BooleanAssign -> . VBoolean Eq BooleanExpression
    (76) StringDeclare -> . StringType VarName
    (77) StringDeclare -> . StringType VarName Eq StringExpression
    (78) StringDeclare -> . StringDeclare Splitter VarName
    (79) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (91) IntDeclare -> . IntType VarName
    (92) IntDeclare -> . IntType VarName Eq IntExpression
    (93) IntDeclare -> . IntDeclare Splitter VarName
    (94) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (96) AlphDeclare -> . AlphType VarName
    (97) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (98) AlphDeclare -> . AlphDeclare Splitter VarName
    (99) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (101) LangDeclare -> . LangType VarName
    (102) LangDeclare -> . LangType VarName Eq LangExpression
    (103) LangDeclare -> . LangDeclare Splitter VarName
    (104) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (106) BooleanDeclare -> . BooleanType VarName
    (107) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (108) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (109) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False

    Show            shift and go to state 23
    LenOp           shift and go to state 34
    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    VString         shift and go to state 43
    VarName         shift and go to state 44
    VLang           shift and go to state 45
    VBoolean        shift and go to state 46
    StringType      shift and go to state 47
    IntType         shift and go to state 48
    AlphType        shift and go to state 49
    LangType        shift and go to state 50
    BooleanType     shift and go to state 51
    Sub             shift and go to state 36
    LGroup          shift and go to state 58
    VAlph           shift and go to state 60
    String          shift and go to state 61
    VInt            shift and go to state 63
    Int             shift and go to state 64
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringAssign                   shift and go to state 24
    IntAssign                      shift and go to state 25
    AlphAssign                     shift and go to state 26
    LangAssign                     shift and go to state 27
    BooleanAssign                  shift and go to state 28
    StringDeclare                  shift and go to state 29
    IntDeclare                     shift and go to state 30
    AlphDeclare                    shift and go to state 31
    LangDeclare                    shift and go to state 32
    BooleanDeclare                 shift and go to state 33
    MultDiv                        shift and go to state 35
    AlphPow                        shift and go to state 37
    StringPow                      shift and go to state 38
    LangConcat                     shift and go to state 41
    BooleanAnd                     shift and go to state 42
    Unary                          shift and go to state 52
    AlphGroup                      shift and go to state 53
    StringGroup                    shift and go to state 54
    LangGroup                      shift and go to state 55
    BooleanGroup                   shift and go to state 56
    Primary                        shift and go to state 57
    Alph                           shift and go to state 59
    Boolean                        shift and go to state 62

state 1

    (0) S' -> expressions .
    (21) expressions -> expressions . expression Term
    (29) expression -> . IntExpression
    (30) expression -> . AlphExpression
    (31) expression -> . StringExpression
    (32) expression -> . LangExpression
    (33) expression -> . BooleanExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (44) ShowVal -> . Show expression
    (68) Assigns -> . StringAssign
    (69) Assigns -> . IntAssign
    (70) Assigns -> . AlphAssign
    (71) Assigns -> . LangAssign
    (72) Assigns -> . BooleanAssign
    (54) Declares -> . StringDeclare
    (55) Declares -> . IntDeclare
    (56) Declares -> . AlphDeclare
    (57) Declares -> . LangDeclare
    (58) Declares -> . BooleanDeclare
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (89) StringAssign -> . VString Eq StringExpression
    (95) IntAssign -> . VarName Eq IntExpression
    (100) AlphAssign -> . VarName Eq AlphExpression
    (105) LangAssign -> . VLang Eq LangExpression
    (110) BooleanAssign -> . VBoolean Eq BooleanExpression
    (76) StringDeclare -> . StringType VarName
    (77) StringDeclare -> . StringType VarName Eq StringExpression
    (78) StringDeclare -> . StringDeclare Splitter VarName
    (79) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (91) IntDeclare -> . IntType VarName
    (92) IntDeclare -> . IntType VarName Eq IntExpression
    (93) IntDeclare -> . IntDeclare Splitter VarName
    (94) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (96) AlphDeclare -> . AlphType VarName
    (97) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (98) AlphDeclare -> . AlphDeclare Splitter VarName
    (99) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (101) LangDeclare -> . LangType VarName
    (102) LangDeclare -> . LangType VarName Eq LangExpression
    (103) LangDeclare -> . LangDeclare Splitter VarName
    (104) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (106) BooleanDeclare -> . BooleanType VarName
    (107) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (108) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (109) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False

    Show            shift and go to state 23
    LenOp           shift and go to state 34
    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    VString         shift and go to state 43
    VarName         shift and go to state 44
    VLang           shift and go to state 45
    VBoolean        shift and go to state 46
    StringType      shift and go to state 47
    IntType         shift and go to state 48
    AlphType        shift and go to state 49
    LangType        shift and go to state 50
    BooleanType     shift and go to state 51
    Sub             shift and go to state 36
    LGroup          shift and go to state 58
    VAlph           shift and go to state 60
    String          shift and go to state 61
    VInt            shift and go to state 63
    Int             shift and go to state 64
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67

    expression                     shift and go to state 68
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringAssign                   shift and go to state 24
    IntAssign                      shift and go to state 25
    AlphAssign                     shift and go to state 26
    LangAssign                     shift and go to state 27
    BooleanAssign                  shift and go to state 28
    StringDeclare                  shift and go to state 29
    IntDeclare                     shift and go to state 30
    AlphDeclare                    shift and go to state 31
    LangDeclare                    shift and go to state 32
    BooleanDeclare                 shift and go to state 33
    MultDiv                        shift and go to state 35
    AlphPow                        shift and go to state 37
    StringPow                      shift and go to state 38
    LangConcat                     shift and go to state 41
    BooleanAnd                     shift and go to state 42
    Unary                          shift and go to state 52
    AlphGroup                      shift and go to state 53
    StringGroup                    shift and go to state 54
    LangGroup                      shift and go to state 55
    BooleanGroup                   shift and go to state 56
    Primary                        shift and go to state 57
    Alph                           shift and go to state 59
    Boolean                        shift and go to state 62

state 2

    (22) expressions -> expression . Term

    Term            shift and go to state 69


state 3

    (29) expression -> IntExpression .

    Term            reduce using rule 29 (expression -> IntExpression .)


state 4

    (30) expression -> AlphExpression .
    (73) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (82) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    Term            reduce using rule 30 (expression -> AlphExpression .)
    KleeneC         shift and go to state 70
    PositiveC       shift and go to state 71


state 5

    (31) expression -> StringExpression .

    Term            reduce using rule 31 (expression -> StringExpression .)


state 6

    (32) expression -> LangExpression .
    (83) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 32 (expression -> LangExpression .)
    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 7

    (33) expression -> BooleanExpression .

    Term            reduce using rule 33 (expression -> BooleanExpression .)


state 8

    (34) expression -> ShowVal .

    Term            reduce using rule 34 (expression -> ShowVal .)


state 9

    (35) expression -> Assigns .

    Term            reduce using rule 35 (expression -> Assigns .)


state 10

    (36) expression -> Declares .

    Term            reduce using rule 36 (expression -> Declares .)


state 11

    (10) IntExpression -> StringLen .

    Term            reduce using rule 10 (IntExpression -> StringLen .)
    RGroup          reduce using rule 10 (IntExpression -> StringLen .)
    KleeneC         reduce using rule 10 (IntExpression -> StringLen .)
    PositiveC       reduce using rule 10 (IntExpression -> StringLen .)
    Splitter        reduce using rule 10 (IntExpression -> StringLen .)
    Pow             reduce using rule 10 (IntExpression -> StringLen .)
    Concat          reduce using rule 10 (IntExpression -> StringLen .)
    LenOp           reduce using rule 10 (IntExpression -> StringLen .)
    On              reduce using rule 10 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 10 (IntExpression -> StringLen .)


state 12

    (11) IntExpression -> AddSub .

    Term            reduce using rule 11 (IntExpression -> AddSub .)
    RGroup          reduce using rule 11 (IntExpression -> AddSub .)
    KleeneC         reduce using rule 11 (IntExpression -> AddSub .)
    PositiveC       reduce using rule 11 (IntExpression -> AddSub .)
    Splitter        reduce using rule 11 (IntExpression -> AddSub .)
    Pow             reduce using rule 11 (IntExpression -> AddSub .)
    Concat          reduce using rule 11 (IntExpression -> AddSub .)
    LenOp           reduce using rule 11 (IntExpression -> AddSub .)
    On              reduce using rule 11 (IntExpression -> AddSub .)
    CloseStruct     reduce using rule 11 (IntExpression -> AddSub .)


state 13

    (1) AlphExpression -> AlphConcat .
    (15) AlphConcat -> AlphConcat . Concat AlphPow

    KleeneC         reduce using rule 1 (AlphExpression -> AlphConcat .)
    PositiveC       reduce using rule 1 (AlphExpression -> AlphConcat .)
    Term            reduce using rule 1 (AlphExpression -> AlphConcat .)
    RGroup          reduce using rule 1 (AlphExpression -> AlphConcat .)
    LenOp           reduce using rule 1 (AlphExpression -> AlphConcat .)
    Splitter        reduce using rule 1 (AlphExpression -> AlphConcat .)
    Concat          shift and go to state 74


state 14

    (12) StringExpression -> StringConcat .
    (19) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 12 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 12 (StringExpression -> StringConcat .)
    On              reduce using rule 12 (StringExpression -> StringConcat .)
    KleeneC         reduce using rule 12 (StringExpression -> StringConcat .)
    PositiveC       reduce using rule 12 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 12 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 12 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 12 (StringExpression -> StringConcat .)
    Concat          shift and go to state 75


state 15

    (3) LangExpression -> StringPrefix .

    KleeneC         reduce using rule 3 (LangExpression -> StringPrefix .)
    PositiveC       reduce using rule 3 (LangExpression -> StringPrefix .)
    Term            reduce using rule 3 (LangExpression -> StringPrefix .)
    RGroup          reduce using rule 3 (LangExpression -> StringPrefix .)
    Splitter        reduce using rule 3 (LangExpression -> StringPrefix .)


state 16

    (4) LangExpression -> StringSuffix .

    KleeneC         reduce using rule 4 (LangExpression -> StringSuffix .)
    PositiveC       reduce using rule 4 (LangExpression -> StringSuffix .)
    Term            reduce using rule 4 (LangExpression -> StringSuffix .)
    RGroup          reduce using rule 4 (LangExpression -> StringSuffix .)
    Splitter        reduce using rule 4 (LangExpression -> StringSuffix .)


state 17

    (5) LangExpression -> AlphKleeneC .

    KleeneC         reduce using rule 5 (LangExpression -> AlphKleeneC .)
    PositiveC       reduce using rule 5 (LangExpression -> AlphKleeneC .)
    Term            reduce using rule 5 (LangExpression -> AlphKleeneC .)
    RGroup          reduce using rule 5 (LangExpression -> AlphKleeneC .)
    Splitter        reduce using rule 5 (LangExpression -> AlphKleeneC .)


state 18

    (6) LangExpression -> AlphPositiveC .

    KleeneC         reduce using rule 6 (LangExpression -> AlphPositiveC .)
    PositiveC       reduce using rule 6 (LangExpression -> AlphPositiveC .)
    Term            reduce using rule 6 (LangExpression -> AlphPositiveC .)
    RGroup          reduce using rule 6 (LangExpression -> AlphPositiveC .)
    Splitter        reduce using rule 6 (LangExpression -> AlphPositiveC .)


state 19

    (7) LangExpression -> LangKleeneC .

    KleeneC         reduce using rule 7 (LangExpression -> LangKleeneC .)
    PositiveC       reduce using rule 7 (LangExpression -> LangKleeneC .)
    Term            reduce using rule 7 (LangExpression -> LangKleeneC .)
    RGroup          reduce using rule 7 (LangExpression -> LangKleeneC .)
    Splitter        reduce using rule 7 (LangExpression -> LangKleeneC .)


state 20

    (8) LangExpression -> LangPositiveC .

    KleeneC         reduce using rule 8 (LangExpression -> LangPositiveC .)
    PositiveC       reduce using rule 8 (LangExpression -> LangPositiveC .)
    Term            reduce using rule 8 (LangExpression -> LangPositiveC .)
    RGroup          reduce using rule 8 (LangExpression -> LangPositiveC .)
    Splitter        reduce using rule 8 (LangExpression -> LangPositiveC .)


state 21

    (9) LangExpression -> LangUnion .
    (23) LangUnion -> LangUnion . Add LangConcat

    KleeneC         reduce using rule 9 (LangExpression -> LangUnion .)
    PositiveC       reduce using rule 9 (LangExpression -> LangUnion .)
    Term            reduce using rule 9 (LangExpression -> LangUnion .)
    RGroup          reduce using rule 9 (LangExpression -> LangUnion .)
    Splitter        reduce using rule 9 (LangExpression -> LangUnion .)
    Add             shift and go to state 76


state 22

    (2) BooleanExpression -> BooleanOr .
    (13) BooleanOr -> BooleanOr . Or BooleanAnd

    Term            reduce using rule 2 (BooleanExpression -> BooleanOr .)
    RGroup          reduce using rule 2 (BooleanExpression -> BooleanOr .)
    Splitter        reduce using rule 2 (BooleanExpression -> BooleanOr .)
    Or              shift and go to state 77


state 23

    (44) ShowVal -> Show . expression
    (29) expression -> . IntExpression
    (30) expression -> . AlphExpression
    (31) expression -> . StringExpression
    (32) expression -> . LangExpression
    (33) expression -> . BooleanExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (44) ShowVal -> . Show expression
    (68) Assigns -> . StringAssign
    (69) Assigns -> . IntAssign
    (70) Assigns -> . AlphAssign
    (71) Assigns -> . LangAssign
    (72) Assigns -> . BooleanAssign
    (54) Declares -> . StringDeclare
    (55) Declares -> . IntDeclare
    (56) Declares -> . AlphDeclare
    (57) Declares -> . LangDeclare
    (58) Declares -> . BooleanDeclare
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (89) StringAssign -> . VString Eq StringExpression
    (95) IntAssign -> . VarName Eq IntExpression
    (100) AlphAssign -> . VarName Eq AlphExpression
    (105) LangAssign -> . VLang Eq LangExpression
    (110) BooleanAssign -> . VBoolean Eq BooleanExpression
    (76) StringDeclare -> . StringType VarName
    (77) StringDeclare -> . StringType VarName Eq StringExpression
    (78) StringDeclare -> . StringDeclare Splitter VarName
    (79) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (91) IntDeclare -> . IntType VarName
    (92) IntDeclare -> . IntType VarName Eq IntExpression
    (93) IntDeclare -> . IntDeclare Splitter VarName
    (94) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (96) AlphDeclare -> . AlphType VarName
    (97) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (98) AlphDeclare -> . AlphDeclare Splitter VarName
    (99) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (101) LangDeclare -> . LangType VarName
    (102) LangDeclare -> . LangType VarName Eq LangExpression
    (103) LangDeclare -> . LangDeclare Splitter VarName
    (104) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (106) BooleanDeclare -> . BooleanType VarName
    (107) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (108) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (109) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False

    Show            shift and go to state 23
    LenOp           shift and go to state 34
    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    VString         shift and go to state 43
    VarName         shift and go to state 44
    VLang           shift and go to state 45
    VBoolean        shift and go to state 46
    StringType      shift and go to state 47
    IntType         shift and go to state 48
    AlphType        shift and go to state 49
    LangType        shift and go to state 50
    BooleanType     shift and go to state 51
    Sub             shift and go to state 36
    LGroup          shift and go to state 58
    VAlph           shift and go to state 60
    String          shift and go to state 61
    VInt            shift and go to state 63
    Int             shift and go to state 64
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67

    expression                     shift and go to state 78
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringAssign                   shift and go to state 24
    IntAssign                      shift and go to state 25
    AlphAssign                     shift and go to state 26
    LangAssign                     shift and go to state 27
    BooleanAssign                  shift and go to state 28
    StringDeclare                  shift and go to state 29
    IntDeclare                     shift and go to state 30
    AlphDeclare                    shift and go to state 31
    LangDeclare                    shift and go to state 32
    BooleanDeclare                 shift and go to state 33
    MultDiv                        shift and go to state 35
    AlphPow                        shift and go to state 37
    StringPow                      shift and go to state 38
    LangConcat                     shift and go to state 41
    BooleanAnd                     shift and go to state 42
    Unary                          shift and go to state 52
    AlphGroup                      shift and go to state 53
    StringGroup                    shift and go to state 54
    LangGroup                      shift and go to state 55
    BooleanGroup                   shift and go to state 56
    Primary                        shift and go to state 57
    Alph                           shift and go to state 59
    Boolean                        shift and go to state 62

state 24

    (68) Assigns -> StringAssign .

    Term            reduce using rule 68 (Assigns -> StringAssign .)


state 25

    (69) Assigns -> IntAssign .

    Term            reduce using rule 69 (Assigns -> IntAssign .)


state 26

    (70) Assigns -> AlphAssign .

    Term            reduce using rule 70 (Assigns -> AlphAssign .)


state 27

    (71) Assigns -> LangAssign .

    Term            reduce using rule 71 (Assigns -> LangAssign .)


state 28

    (72) Assigns -> BooleanAssign .

    Term            reduce using rule 72 (Assigns -> BooleanAssign .)


state 29

    (54) Declares -> StringDeclare .
    (78) StringDeclare -> StringDeclare . Splitter VarName
    (79) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 54 (Declares -> StringDeclare .)
    Splitter        shift and go to state 79


state 30

    (55) Declares -> IntDeclare .
    (93) IntDeclare -> IntDeclare . Splitter VarName
    (94) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 55 (Declares -> IntDeclare .)
    Splitter        shift and go to state 80


state 31

    (56) Declares -> AlphDeclare .
    (98) AlphDeclare -> AlphDeclare . Splitter VarName
    (99) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 56 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 81


state 32

    (57) Declares -> LangDeclare .
    (103) LangDeclare -> LangDeclare . Splitter VarName
    (104) LangDeclare -> LangDeclare . Splitter VarName Eq LangExpression

    Term            reduce using rule 57 (Declares -> LangDeclare .)
    Splitter        shift and go to state 82


state 33

    (58) Declares -> BooleanDeclare .
    (108) BooleanDeclare -> BooleanDeclare . Splitter VarName
    (109) BooleanDeclare -> BooleanDeclare . Splitter VarName Eq BooleanExpression

    Term            reduce using rule 58 (Declares -> BooleanDeclare .)
    Splitter        shift and go to state 83


state 34

    (17) StringLen -> LenOp . StringExpression LenOp
    (18) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 84
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 35

    (39) AddSub -> MultDiv . Add AddSub
    (40) AddSub -> MultDiv . Sub AddSub
    (41) AddSub -> MultDiv .
    (59) MultDiv -> MultDiv . Concat Unary
    (60) MultDiv -> MultDiv . Div Unary

  ! shift/reduce conflict for Concat resolved as shift
    Add             shift and go to state 87
    Sub             shift and go to state 88
    Term            reduce using rule 41 (AddSub -> MultDiv .)
    RGroup          reduce using rule 41 (AddSub -> MultDiv .)
    KleeneC         reduce using rule 41 (AddSub -> MultDiv .)
    PositiveC       reduce using rule 41 (AddSub -> MultDiv .)
    Splitter        reduce using rule 41 (AddSub -> MultDiv .)
    Pow             reduce using rule 41 (AddSub -> MultDiv .)
    LenOp           reduce using rule 41 (AddSub -> MultDiv .)
    On              reduce using rule 41 (AddSub -> MultDiv .)
    CloseStruct     reduce using rule 41 (AddSub -> MultDiv .)
    Concat          shift and go to state 89
    Div             shift and go to state 90

  ! Concat          [ reduce using rule 41 (AddSub -> MultDiv .) ]


state 36

    (80) Unary -> Sub . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    Primary                        shift and go to state 91

state 37

    (16) AlphConcat -> AlphPow .
    (37) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 16 (AlphConcat -> AlphPow .)
    KleeneC         reduce using rule 16 (AlphConcat -> AlphPow .)
    PositiveC       reduce using rule 16 (AlphConcat -> AlphPow .)
    Term            reduce using rule 16 (AlphConcat -> AlphPow .)
    RGroup          reduce using rule 16 (AlphConcat -> AlphPow .)
    LenOp           reduce using rule 16 (AlphConcat -> AlphPow .)
    Splitter        reduce using rule 16 (AlphConcat -> AlphPow .)
    Pow             shift and go to state 93


state 38

    (20) StringConcat -> StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 20 (StringConcat -> StringPow .)
    Term            reduce using rule 20 (StringConcat -> StringPow .)
    LenOp           reduce using rule 20 (StringConcat -> StringPow .)
    On              reduce using rule 20 (StringConcat -> StringPow .)
    KleeneC         reduce using rule 20 (StringConcat -> StringPow .)
    PositiveC       reduce using rule 20 (StringConcat -> StringPow .)
    RGroup          reduce using rule 20 (StringConcat -> StringPow .)
    Splitter        reduce using rule 20 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 20 (StringConcat -> StringPow .)
    Pow             shift and go to state 94


state 39

    (88) StringPrefix -> Prefix . StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 95
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 40

    (90) StringSuffix -> Suffix . StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 96
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 41

    (24) LangUnion -> LangConcat .
    (42) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 24 (LangUnion -> LangConcat .)
    KleeneC         reduce using rule 24 (LangUnion -> LangConcat .)
    PositiveC       reduce using rule 24 (LangUnion -> LangConcat .)
    Term            reduce using rule 24 (LangUnion -> LangConcat .)
    RGroup          reduce using rule 24 (LangUnion -> LangConcat .)
    Splitter        reduce using rule 24 (LangUnion -> LangConcat .)
    Concat          shift and go to state 97


state 42

    (14) BooleanOr -> BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 14 (BooleanOr -> BooleanAnd .)
    Term            reduce using rule 14 (BooleanOr -> BooleanAnd .)
    RGroup          reduce using rule 14 (BooleanOr -> BooleanAnd .)
    Splitter        reduce using rule 14 (BooleanOr -> BooleanAnd .)
    And             shift and go to state 98


state 43

    (89) StringAssign -> VString . Eq StringExpression
    (47) StringGroup -> VString .

    Eq              shift and go to state 99
    Pow             reduce using rule 47 (StringGroup -> VString .)
    Concat          reduce using rule 47 (StringGroup -> VString .)
    Term            reduce using rule 47 (StringGroup -> VString .)


state 44

    (95) IntAssign -> VarName . Eq IntExpression
    (100) AlphAssign -> VarName . Eq AlphExpression

    Eq              shift and go to state 100


state 45

    (105) LangAssign -> VLang . Eq LangExpression
    (63) LangGroup -> VLang .

    Eq              shift and go to state 101
    Concat          reduce using rule 63 (LangGroup -> VLang .)
    Add             reduce using rule 63 (LangGroup -> VLang .)
    KleeneC         reduce using rule 63 (LangGroup -> VLang .)
    PositiveC       reduce using rule 63 (LangGroup -> VLang .)
    Term            reduce using rule 63 (LangGroup -> VLang .)


state 46

    (110) BooleanAssign -> VBoolean . Eq BooleanExpression
    (50) BooleanGroup -> VBoolean .

    Eq              shift and go to state 102
    And             reduce using rule 50 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 50 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 50 (BooleanGroup -> VBoolean .)


state 47

    (76) StringDeclare -> StringType . VarName
    (77) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 103


state 48

    (91) IntDeclare -> IntType . VarName
    (92) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 104


state 49

    (96) AlphDeclare -> AlphType . VarName
    (97) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 105


state 50

    (101) LangDeclare -> LangType . VarName
    (102) LangDeclare -> LangType . VarName Eq LangExpression

    VarName         shift and go to state 106


state 51

    (106) BooleanDeclare -> BooleanType . VarName
    (107) BooleanDeclare -> BooleanType . VarName Eq BooleanExpression

    VarName         shift and go to state 107


state 52

    (61) MultDiv -> Unary .

    Add             reduce using rule 61 (MultDiv -> Unary .)
    Sub             reduce using rule 61 (MultDiv -> Unary .)
    Concat          reduce using rule 61 (MultDiv -> Unary .)
    Div             reduce using rule 61 (MultDiv -> Unary .)
    Term            reduce using rule 61 (MultDiv -> Unary .)
    RGroup          reduce using rule 61 (MultDiv -> Unary .)
    KleeneC         reduce using rule 61 (MultDiv -> Unary .)
    PositiveC       reduce using rule 61 (MultDiv -> Unary .)
    Splitter        reduce using rule 61 (MultDiv -> Unary .)
    Pow             reduce using rule 61 (MultDiv -> Unary .)
    LenOp           reduce using rule 61 (MultDiv -> Unary .)
    On              reduce using rule 61 (MultDiv -> Unary .)
    CloseStruct     reduce using rule 61 (MultDiv -> Unary .)


state 53

    (38) AlphPow -> AlphGroup .

    Pow             reduce using rule 38 (AlphPow -> AlphGroup .)
    Concat          reduce using rule 38 (AlphPow -> AlphGroup .)
    KleeneC         reduce using rule 38 (AlphPow -> AlphGroup .)
    PositiveC       reduce using rule 38 (AlphPow -> AlphGroup .)
    Term            reduce using rule 38 (AlphPow -> AlphGroup .)
    RGroup          reduce using rule 38 (AlphPow -> AlphGroup .)
    LenOp           reduce using rule 38 (AlphPow -> AlphGroup .)
    Splitter        reduce using rule 38 (AlphPow -> AlphGroup .)


state 54

    (28) StringPow -> StringGroup .

    Pow             reduce using rule 28 (StringPow -> StringGroup .)
    Concat          reduce using rule 28 (StringPow -> StringGroup .)
    Term            reduce using rule 28 (StringPow -> StringGroup .)
    LenOp           reduce using rule 28 (StringPow -> StringGroup .)
    On              reduce using rule 28 (StringPow -> StringGroup .)
    KleeneC         reduce using rule 28 (StringPow -> StringGroup .)
    PositiveC       reduce using rule 28 (StringPow -> StringGroup .)
    RGroup          reduce using rule 28 (StringPow -> StringGroup .)
    Splitter        reduce using rule 28 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 28 (StringPow -> StringGroup .)


state 55

    (43) LangConcat -> LangGroup .

    Concat          reduce using rule 43 (LangConcat -> LangGroup .)
    Add             reduce using rule 43 (LangConcat -> LangGroup .)
    KleeneC         reduce using rule 43 (LangConcat -> LangGroup .)
    PositiveC       reduce using rule 43 (LangConcat -> LangGroup .)
    Term            reduce using rule 43 (LangConcat -> LangGroup .)
    RGroup          reduce using rule 43 (LangConcat -> LangGroup .)
    Splitter        reduce using rule 43 (LangConcat -> LangGroup .)


state 56

    (26) BooleanAnd -> BooleanGroup .

    And             reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Or              reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Term            reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    RGroup          reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Splitter        reduce using rule 26 (BooleanAnd -> BooleanGroup .)


state 57

    (81) Unary -> Primary .

    Add             reduce using rule 81 (Unary -> Primary .)
    Sub             reduce using rule 81 (Unary -> Primary .)
    Concat          reduce using rule 81 (Unary -> Primary .)
    Div             reduce using rule 81 (Unary -> Primary .)
    Term            reduce using rule 81 (Unary -> Primary .)
    RGroup          reduce using rule 81 (Unary -> Primary .)
    KleeneC         reduce using rule 81 (Unary -> Primary .)
    PositiveC       reduce using rule 81 (Unary -> Primary .)
    Splitter        reduce using rule 81 (Unary -> Primary .)
    Pow             reduce using rule 81 (Unary -> Primary .)
    LenOp           reduce using rule 81 (Unary -> Primary .)
    On              reduce using rule 81 (Unary -> Primary .)
    CloseStruct     reduce using rule 81 (Unary -> Primary .)


state 58

    (51) AlphGroup -> LGroup . AlphExpression RGroup
    (45) StringGroup -> LGroup . StringExpression RGroup
    (62) LangGroup -> LGroup . LangExpression RGroup
    (48) BooleanGroup -> LGroup . BooleanExpression RGroup
    (84) Primary -> LGroup . IntExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    LenOp           shift and go to state 34
    LGroup          shift and go to state 58
    VAlph           shift and go to state 60
    String          shift and go to state 61
    VString         shift and go to state 86
    VLang           shift and go to state 113
    VBoolean        shift and go to state 114
    Sub             shift and go to state 36
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67
    VInt            shift and go to state 63
    Int             shift and go to state 64

    AlphExpression                 shift and go to state 108
    StringExpression               shift and go to state 109
    LangExpression                 shift and go to state 110
    BooleanExpression              shift and go to state 111
    IntExpression                  shift and go to state 112
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 37
    StringPow                      shift and go to state 38
    LangConcat                     shift and go to state 41
    BooleanAnd                     shift and go to state 42
    MultDiv                        shift and go to state 35
    AlphGroup                      shift and go to state 53
    StringGroup                    shift and go to state 54
    LangGroup                      shift and go to state 55
    BooleanGroup                   shift and go to state 56
    Unary                          shift and go to state 52
    Alph                           shift and go to state 59
    Boolean                        shift and go to state 62
    Primary                        shift and go to state 57

state 59

    (52) AlphGroup -> Alph .

    Pow             reduce using rule 52 (AlphGroup -> Alph .)
    Concat          reduce using rule 52 (AlphGroup -> Alph .)
    KleeneC         reduce using rule 52 (AlphGroup -> Alph .)
    PositiveC       reduce using rule 52 (AlphGroup -> Alph .)
    Term            reduce using rule 52 (AlphGroup -> Alph .)
    RGroup          reduce using rule 52 (AlphGroup -> Alph .)
    LenOp           reduce using rule 52 (AlphGroup -> Alph .)
    Splitter        reduce using rule 52 (AlphGroup -> Alph .)


state 60

    (53) AlphGroup -> VAlph .

    Pow             reduce using rule 53 (AlphGroup -> VAlph .)
    Concat          reduce using rule 53 (AlphGroup -> VAlph .)
    KleeneC         reduce using rule 53 (AlphGroup -> VAlph .)
    PositiveC       reduce using rule 53 (AlphGroup -> VAlph .)
    Term            reduce using rule 53 (AlphGroup -> VAlph .)
    RGroup          reduce using rule 53 (AlphGroup -> VAlph .)
    LenOp           reduce using rule 53 (AlphGroup -> VAlph .)
    Splitter        reduce using rule 53 (AlphGroup -> VAlph .)


state 61

    (46) StringGroup -> String .

    Pow             reduce using rule 46 (StringGroup -> String .)
    Concat          reduce using rule 46 (StringGroup -> String .)
    Term            reduce using rule 46 (StringGroup -> String .)
    LenOp           reduce using rule 46 (StringGroup -> String .)
    On              reduce using rule 46 (StringGroup -> String .)
    KleeneC         reduce using rule 46 (StringGroup -> String .)
    PositiveC       reduce using rule 46 (StringGroup -> String .)
    RGroup          reduce using rule 46 (StringGroup -> String .)
    Splitter        reduce using rule 46 (StringGroup -> String .)
    CloseStruct     reduce using rule 46 (StringGroup -> String .)


state 62

    (49) BooleanGroup -> Boolean .

    And             reduce using rule 49 (BooleanGroup -> Boolean .)
    Or              reduce using rule 49 (BooleanGroup -> Boolean .)
    Term            reduce using rule 49 (BooleanGroup -> Boolean .)
    RGroup          reduce using rule 49 (BooleanGroup -> Boolean .)
    Splitter        reduce using rule 49 (BooleanGroup -> Boolean .)


state 63

    (85) Primary -> VInt .

    Add             reduce using rule 85 (Primary -> VInt .)
    Sub             reduce using rule 85 (Primary -> VInt .)
    Concat          reduce using rule 85 (Primary -> VInt .)
    Div             reduce using rule 85 (Primary -> VInt .)
    Term            reduce using rule 85 (Primary -> VInt .)
    RGroup          reduce using rule 85 (Primary -> VInt .)
    KleeneC         reduce using rule 85 (Primary -> VInt .)
    PositiveC       reduce using rule 85 (Primary -> VInt .)
    Splitter        reduce using rule 85 (Primary -> VInt .)
    Pow             reduce using rule 85 (Primary -> VInt .)
    LenOp           reduce using rule 85 (Primary -> VInt .)
    On              reduce using rule 85 (Primary -> VInt .)
    CloseStruct     reduce using rule 85 (Primary -> VInt .)


state 64

    (86) Primary -> Int .

    Add             reduce using rule 86 (Primary -> Int .)
    Sub             reduce using rule 86 (Primary -> Int .)
    Concat          reduce using rule 86 (Primary -> Int .)
    Div             reduce using rule 86 (Primary -> Int .)
    Term            reduce using rule 86 (Primary -> Int .)
    RGroup          reduce using rule 86 (Primary -> Int .)
    KleeneC         reduce using rule 86 (Primary -> Int .)
    PositiveC       reduce using rule 86 (Primary -> Int .)
    Splitter        reduce using rule 86 (Primary -> Int .)
    Pow             reduce using rule 86 (Primary -> Int .)
    LenOp           reduce using rule 86 (Primary -> Int .)
    On              reduce using rule 86 (Primary -> Int .)
    CloseStruct     reduce using rule 86 (Primary -> Int .)


state 65

    (64) Alph -> OpenStruct . StringList CloseStruct
    (65) Alph -> OpenStruct . StringExpression CloseStruct
    (74) StringList -> . StringList Splitter StringExpression
    (75) StringList -> . StringExpression Splitter StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringList                     shift and go to state 115
    StringExpression               shift and go to state 116
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 66

    (66) Boolean -> True .

    And             reduce using rule 66 (Boolean -> True .)
    Or              reduce using rule 66 (Boolean -> True .)
    Term            reduce using rule 66 (Boolean -> True .)
    RGroup          reduce using rule 66 (Boolean -> True .)
    Splitter        reduce using rule 66 (Boolean -> True .)


state 67

    (67) Boolean -> False .

    And             reduce using rule 67 (Boolean -> False .)
    Or              reduce using rule 67 (Boolean -> False .)
    Term            reduce using rule 67 (Boolean -> False .)
    RGroup          reduce using rule 67 (Boolean -> False .)
    Splitter        reduce using rule 67 (Boolean -> False .)


state 68

    (21) expressions -> expressions expression . Term

    Term            shift and go to state 117


state 69

    (22) expressions -> expression Term .

    Show            reduce using rule 22 (expressions -> expression Term .)
    LenOp           reduce using rule 22 (expressions -> expression Term .)
    Prefix          reduce using rule 22 (expressions -> expression Term .)
    Suffix          reduce using rule 22 (expressions -> expression Term .)
    VString         reduce using rule 22 (expressions -> expression Term .)
    VarName         reduce using rule 22 (expressions -> expression Term .)
    VLang           reduce using rule 22 (expressions -> expression Term .)
    VBoolean        reduce using rule 22 (expressions -> expression Term .)
    StringType      reduce using rule 22 (expressions -> expression Term .)
    IntType         reduce using rule 22 (expressions -> expression Term .)
    AlphType        reduce using rule 22 (expressions -> expression Term .)
    LangType        reduce using rule 22 (expressions -> expression Term .)
    BooleanType     reduce using rule 22 (expressions -> expression Term .)
    Sub             reduce using rule 22 (expressions -> expression Term .)
    LGroup          reduce using rule 22 (expressions -> expression Term .)
    VAlph           reduce using rule 22 (expressions -> expression Term .)
    String          reduce using rule 22 (expressions -> expression Term .)
    VInt            reduce using rule 22 (expressions -> expression Term .)
    Int             reduce using rule 22 (expressions -> expression Term .)
    OpenStruct      reduce using rule 22 (expressions -> expression Term .)
    True            reduce using rule 22 (expressions -> expression Term .)
    False           reduce using rule 22 (expressions -> expression Term .)
    $end            reduce using rule 22 (expressions -> expression Term .)


state 70

    (73) AlphKleeneC -> AlphExpression KleeneC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 118
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 71

    (82) AlphPositiveC -> AlphExpression PositiveC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 119
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 72

    (83) LangKleeneC -> LangExpression KleeneC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 120
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 73

    (87) LangPositiveC -> LangExpression PositiveC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 121
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 74

    (15) AlphConcat -> AlphConcat Concat . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 123
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    AlphPow                        shift and go to state 122
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 75

    (19) StringConcat -> StringConcat Concat . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringPow                      shift and go to state 124
    StringGroup                    shift and go to state 54

state 76

    (23) LangUnion -> LangUnion Add . LangConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang

    LGroup          shift and go to state 126
    VLang           shift and go to state 113

    LangConcat                     shift and go to state 125
    LangGroup                      shift and go to state 55

state 77

    (13) BooleanOr -> BooleanOr Or . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 128
    VBoolean        shift and go to state 114
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanAnd                     shift and go to state 127
    BooleanGroup                   shift and go to state 56
    Boolean                        shift and go to state 62

state 78

    (44) ShowVal -> Show expression .

    Term            reduce using rule 44 (ShowVal -> Show expression .)


state 79

    (78) StringDeclare -> StringDeclare Splitter . VarName
    (79) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 129


state 80

    (93) IntDeclare -> IntDeclare Splitter . VarName
    (94) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 130


state 81

    (98) AlphDeclare -> AlphDeclare Splitter . VarName
    (99) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 131


state 82

    (103) LangDeclare -> LangDeclare Splitter . VarName
    (104) LangDeclare -> LangDeclare Splitter . VarName Eq LangExpression

    VarName         shift and go to state 132


state 83

    (108) BooleanDeclare -> BooleanDeclare Splitter . VarName
    (109) BooleanDeclare -> BooleanDeclare Splitter . VarName Eq BooleanExpression

    VarName         shift and go to state 133


state 84

    (17) StringLen -> LenOp StringExpression . LenOp
    (18) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 134
    On              shift and go to state 135


state 85

    (45) StringGroup -> LGroup . StringExpression RGroup
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 109
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 86

    (47) StringGroup -> VString .

    Pow             reduce using rule 47 (StringGroup -> VString .)
    Concat          reduce using rule 47 (StringGroup -> VString .)
    LenOp           reduce using rule 47 (StringGroup -> VString .)
    On              reduce using rule 47 (StringGroup -> VString .)
    KleeneC         reduce using rule 47 (StringGroup -> VString .)
    PositiveC       reduce using rule 47 (StringGroup -> VString .)
    Term            reduce using rule 47 (StringGroup -> VString .)
    RGroup          reduce using rule 47 (StringGroup -> VString .)
    Splitter        reduce using rule 47 (StringGroup -> VString .)
    CloseStruct     reduce using rule 47 (StringGroup -> VString .)


state 87

    (39) AddSub -> MultDiv Add . AddSub
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    MultDiv                        shift and go to state 35
    AddSub                         shift and go to state 136
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 88

    (40) AddSub -> MultDiv Sub . AddSub
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    MultDiv                        shift and go to state 35
    AddSub                         shift and go to state 137
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 89

    (59) MultDiv -> MultDiv Concat . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    Unary                          shift and go to state 138
    Primary                        shift and go to state 57

state 90

    (60) MultDiv -> MultDiv Div . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    Unary                          shift and go to state 139
    Primary                        shift and go to state 57

state 91

    (80) Unary -> Sub Primary .

    Add             reduce using rule 80 (Unary -> Sub Primary .)
    Sub             reduce using rule 80 (Unary -> Sub Primary .)
    Concat          reduce using rule 80 (Unary -> Sub Primary .)
    Div             reduce using rule 80 (Unary -> Sub Primary .)
    Term            reduce using rule 80 (Unary -> Sub Primary .)
    RGroup          reduce using rule 80 (Unary -> Sub Primary .)
    KleeneC         reduce using rule 80 (Unary -> Sub Primary .)
    PositiveC       reduce using rule 80 (Unary -> Sub Primary .)
    Splitter        reduce using rule 80 (Unary -> Sub Primary .)
    Pow             reduce using rule 80 (Unary -> Sub Primary .)
    LenOp           reduce using rule 80 (Unary -> Sub Primary .)
    On              reduce using rule 80 (Unary -> Sub Primary .)
    CloseStruct     reduce using rule 80 (Unary -> Sub Primary .)


state 92

    (84) Primary -> LGroup . IntExpression RGroup
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 112
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 93

    (37) AlphPow -> AlphPow Pow . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 140
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 94

    (27) StringPow -> StringPow Pow . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 141
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 95

    (88) StringPrefix -> Prefix StringExpression .

    KleeneC         reduce using rule 88 (StringPrefix -> Prefix StringExpression .)
    PositiveC       reduce using rule 88 (StringPrefix -> Prefix StringExpression .)
    Term            reduce using rule 88 (StringPrefix -> Prefix StringExpression .)
    RGroup          reduce using rule 88 (StringPrefix -> Prefix StringExpression .)
    Splitter        reduce using rule 88 (StringPrefix -> Prefix StringExpression .)


state 96

    (90) StringSuffix -> Suffix StringExpression .

    KleeneC         reduce using rule 90 (StringSuffix -> Suffix StringExpression .)
    PositiveC       reduce using rule 90 (StringSuffix -> Suffix StringExpression .)
    Term            reduce using rule 90 (StringSuffix -> Suffix StringExpression .)
    RGroup          reduce using rule 90 (StringSuffix -> Suffix StringExpression .)
    Splitter        reduce using rule 90 (StringSuffix -> Suffix StringExpression .)


state 97

    (42) LangConcat -> LangConcat Concat . LangGroup
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang

    LGroup          shift and go to state 126
    VLang           shift and go to state 113

    LangGroup                      shift and go to state 142

state 98

    (25) BooleanAnd -> BooleanAnd And . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 128
    VBoolean        shift and go to state 114
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanGroup                   shift and go to state 143
    Boolean                        shift and go to state 62

state 99

    (89) StringAssign -> VString Eq . StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 144
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 100

    (95) IntAssign -> VarName Eq . IntExpression
    (100) AlphAssign -> VarName Eq . AlphExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 147
    VAlph           shift and go to state 60
    VInt            shift and go to state 63
    Int             shift and go to state 64
    OpenStruct      shift and go to state 65

    IntExpression                  shift and go to state 145
    AlphExpression                 shift and go to state 146
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    MultDiv                        shift and go to state 35
    AlphPow                        shift and go to state 37
    Unary                          shift and go to state 52
    AlphGroup                      shift and go to state 53
    Primary                        shift and go to state 57
    Alph                           shift and go to state 59

state 101

    (105) LangAssign -> VLang Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    LGroup          shift and go to state 150
    VLang           shift and go to state 113
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 148
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 149
    LangConcat                     shift and go to state 41
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 55
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 102

    (110) BooleanAssign -> VBoolean Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 128
    VBoolean        shift and go to state 114
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 151
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 42
    BooleanGroup                   shift and go to state 56
    Boolean                        shift and go to state 62

state 103

    (76) StringDeclare -> StringType VarName .
    (77) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 76 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 76 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 152


state 104

    (91) IntDeclare -> IntType VarName .
    (92) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 91 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 91 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 153


state 105

    (96) AlphDeclare -> AlphType VarName .
    (97) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 96 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 96 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 154


state 106

    (101) LangDeclare -> LangType VarName .
    (102) LangDeclare -> LangType VarName . Eq LangExpression

    Splitter        reduce using rule 101 (LangDeclare -> LangType VarName .)
    Term            reduce using rule 101 (LangDeclare -> LangType VarName .)
    Eq              shift and go to state 155


state 107

    (106) BooleanDeclare -> BooleanType VarName .
    (107) BooleanDeclare -> BooleanType VarName . Eq BooleanExpression

    Splitter        reduce using rule 106 (BooleanDeclare -> BooleanType VarName .)
    Term            reduce using rule 106 (BooleanDeclare -> BooleanType VarName .)
    Eq              shift and go to state 156


state 108

    (51) AlphGroup -> LGroup AlphExpression . RGroup
    (73) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (82) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    RGroup          shift and go to state 157
    KleeneC         shift and go to state 70
    PositiveC       shift and go to state 71


state 109

    (45) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 158


state 110

    (62) LangGroup -> LGroup LangExpression . RGroup
    (83) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    RGroup          shift and go to state 159
    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 111

    (48) BooleanGroup -> LGroup BooleanExpression . RGroup

    RGroup          shift and go to state 160


state 112

    (84) Primary -> LGroup IntExpression . RGroup

    RGroup          shift and go to state 161


state 113

    (63) LangGroup -> VLang .

    Concat          reduce using rule 63 (LangGroup -> VLang .)
    Add             reduce using rule 63 (LangGroup -> VLang .)
    RGroup          reduce using rule 63 (LangGroup -> VLang .)
    KleeneC         reduce using rule 63 (LangGroup -> VLang .)
    PositiveC       reduce using rule 63 (LangGroup -> VLang .)
    Term            reduce using rule 63 (LangGroup -> VLang .)
    Splitter        reduce using rule 63 (LangGroup -> VLang .)


state 114

    (50) BooleanGroup -> VBoolean .

    And             reduce using rule 50 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 50 (BooleanGroup -> VBoolean .)
    RGroup          reduce using rule 50 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 50 (BooleanGroup -> VBoolean .)
    Splitter        reduce using rule 50 (BooleanGroup -> VBoolean .)


state 115

    (64) Alph -> OpenStruct StringList . CloseStruct
    (74) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 162
    Splitter        shift and go to state 163


state 116

    (65) Alph -> OpenStruct StringExpression . CloseStruct
    (75) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 164
    Splitter        shift and go to state 165


state 117

    (21) expressions -> expressions expression Term .

    Show            reduce using rule 21 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 21 (expressions -> expressions expression Term .)
    Prefix          reduce using rule 21 (expressions -> expressions expression Term .)
    Suffix          reduce using rule 21 (expressions -> expressions expression Term .)
    VString         reduce using rule 21 (expressions -> expressions expression Term .)
    VarName         reduce using rule 21 (expressions -> expressions expression Term .)
    VLang           reduce using rule 21 (expressions -> expressions expression Term .)
    VBoolean        reduce using rule 21 (expressions -> expressions expression Term .)
    StringType      reduce using rule 21 (expressions -> expressions expression Term .)
    IntType         reduce using rule 21 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 21 (expressions -> expressions expression Term .)
    LangType        reduce using rule 21 (expressions -> expressions expression Term .)
    BooleanType     reduce using rule 21 (expressions -> expressions expression Term .)
    Sub             reduce using rule 21 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 21 (expressions -> expressions expression Term .)
    VAlph           reduce using rule 21 (expressions -> expressions expression Term .)
    String          reduce using rule 21 (expressions -> expressions expression Term .)
    VInt            reduce using rule 21 (expressions -> expressions expression Term .)
    Int             reduce using rule 21 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 21 (expressions -> expressions expression Term .)
    True            reduce using rule 21 (expressions -> expressions expression Term .)
    False           reduce using rule 21 (expressions -> expressions expression Term .)
    $end            reduce using rule 21 (expressions -> expressions expression Term .)


state 118

    (73) AlphKleeneC -> AlphExpression KleeneC IntExpression .

    KleeneC         reduce using rule 73 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 73 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Term            reduce using rule 73 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    RGroup          reduce using rule 73 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Splitter        reduce using rule 73 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)


state 119

    (82) AlphPositiveC -> AlphExpression PositiveC IntExpression .

    KleeneC         reduce using rule 82 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 82 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Term            reduce using rule 82 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    RGroup          reduce using rule 82 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Splitter        reduce using rule 82 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)


state 120

    (83) LangKleeneC -> LangExpression KleeneC IntExpression .

    KleeneC         reduce using rule 83 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 83 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Term            reduce using rule 83 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    RGroup          reduce using rule 83 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Splitter        reduce using rule 83 (LangKleeneC -> LangExpression KleeneC IntExpression .)


state 121

    (87) LangPositiveC -> LangExpression PositiveC IntExpression .

    KleeneC         reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Term            reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    RGroup          reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Splitter        reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)


state 122

    (15) AlphConcat -> AlphConcat Concat AlphPow .
    (37) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 15 (AlphConcat -> AlphConcat Concat AlphPow .)
    KleeneC         reduce using rule 15 (AlphConcat -> AlphConcat Concat AlphPow .)
    PositiveC       reduce using rule 15 (AlphConcat -> AlphConcat Concat AlphPow .)
    Term            reduce using rule 15 (AlphConcat -> AlphConcat Concat AlphPow .)
    RGroup          reduce using rule 15 (AlphConcat -> AlphConcat Concat AlphPow .)
    LenOp           reduce using rule 15 (AlphConcat -> AlphConcat Concat AlphPow .)
    Splitter        reduce using rule 15 (AlphConcat -> AlphConcat Concat AlphPow .)
    Pow             shift and go to state 93


state 123

    (51) AlphGroup -> LGroup . AlphExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 123
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 166
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 124

    (19) StringConcat -> StringConcat Concat StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    KleeneC         reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    PositiveC       reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 19 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 94


state 125

    (23) LangUnion -> LangUnion Add LangConcat .
    (42) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    KleeneC         reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    PositiveC       reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    Term            reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    RGroup          reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    Splitter        reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    Concat          shift and go to state 97


state 126

    (62) LangGroup -> LGroup . LangExpression RGroup
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    LGroup          shift and go to state 150
    VLang           shift and go to state 113
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 110
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 149
    LangConcat                     shift and go to state 41
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 55
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 127

    (13) BooleanOr -> BooleanOr Or BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Term            reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    RGroup          reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Splitter        reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    And             shift and go to state 98


state 128

    (48) BooleanGroup -> LGroup . BooleanExpression RGroup
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 128
    VBoolean        shift and go to state 114
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 111
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 42
    BooleanGroup                   shift and go to state 56
    Boolean                        shift and go to state 62

state 129

    (78) StringDeclare -> StringDeclare Splitter VarName .
    (79) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 78 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 78 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 167


state 130

    (93) IntDeclare -> IntDeclare Splitter VarName .
    (94) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 93 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 93 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 168


state 131

    (98) AlphDeclare -> AlphDeclare Splitter VarName .
    (99) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 98 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 98 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 169


state 132

    (103) LangDeclare -> LangDeclare Splitter VarName .
    (104) LangDeclare -> LangDeclare Splitter VarName . Eq LangExpression

    Splitter        reduce using rule 103 (LangDeclare -> LangDeclare Splitter VarName .)
    Term            reduce using rule 103 (LangDeclare -> LangDeclare Splitter VarName .)
    Eq              shift and go to state 170


state 133

    (108) BooleanDeclare -> BooleanDeclare Splitter VarName .
    (109) BooleanDeclare -> BooleanDeclare Splitter VarName . Eq BooleanExpression

    Splitter        reduce using rule 108 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Term            reduce using rule 108 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Eq              shift and go to state 171


state 134

    (17) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    KleeneC         reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    PositiveC       reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 17 (StringLen -> LenOp StringExpression LenOp .)


state 135

    (18) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (1) AlphExpression -> . AlphConcat
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 123
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 172
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 136

    (39) AddSub -> MultDiv Add AddSub .

    Term            reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    RGroup          reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    KleeneC         reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    PositiveC       reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    Splitter        reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    Pow             reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    Concat          reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    LenOp           reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    On              reduce using rule 39 (AddSub -> MultDiv Add AddSub .)
    CloseStruct     reduce using rule 39 (AddSub -> MultDiv Add AddSub .)


state 137

    (40) AddSub -> MultDiv Sub AddSub .

    Term            reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    RGroup          reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    KleeneC         reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    PositiveC       reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    Splitter        reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    Pow             reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    Concat          reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    LenOp           reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    On              reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)
    CloseStruct     reduce using rule 40 (AddSub -> MultDiv Sub AddSub .)


state 138

    (59) MultDiv -> MultDiv Concat Unary .

    Add             reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    Sub             reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    Concat          reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    Div             reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    Term            reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    RGroup          reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    KleeneC         reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    PositiveC       reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    Splitter        reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    Pow             reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    LenOp           reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    On              reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)
    CloseStruct     reduce using rule 59 (MultDiv -> MultDiv Concat Unary .)


state 139

    (60) MultDiv -> MultDiv Div Unary .

    Add             reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    Sub             reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    Concat          reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    Div             reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    Term            reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    RGroup          reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    KleeneC         reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    PositiveC       reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    Splitter        reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    Pow             reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    LenOp           reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    On              reduce using rule 60 (MultDiv -> MultDiv Div Unary .)
    CloseStruct     reduce using rule 60 (MultDiv -> MultDiv Div Unary .)


state 140

    (37) AlphPow -> AlphPow Pow IntExpression .

    Pow             reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Concat          reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    KleeneC         reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    PositiveC       reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Term            reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    RGroup          reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    LenOp           reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Splitter        reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)


state 141

    (27) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    KleeneC         reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    PositiveC       reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)


state 142

    (42) LangConcat -> LangConcat Concat LangGroup .

    Concat          reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    Add             reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    KleeneC         reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    PositiveC       reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    Term            reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    RGroup          reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    Splitter        reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)


state 143

    (25) BooleanAnd -> BooleanAnd And BooleanGroup .

    And             reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Or              reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Term            reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    RGroup          reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Splitter        reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)


state 144

    (89) StringAssign -> VString Eq StringExpression .

    Term            reduce using rule 89 (StringAssign -> VString Eq StringExpression .)


state 145

    (95) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 95 (IntAssign -> VarName Eq IntExpression .)


state 146

    (100) AlphAssign -> VarName Eq AlphExpression .

    Term            reduce using rule 100 (AlphAssign -> VarName Eq AlphExpression .)


state 147

    (51) AlphGroup -> LGroup . AlphExpression RGroup
    (84) Primary -> LGroup . IntExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    LGroup          shift and go to state 147
    VAlph           shift and go to state 60
    Sub             shift and go to state 36
    OpenStruct      shift and go to state 65
    VInt            shift and go to state 63
    Int             shift and go to state 64

    AlphExpression                 shift and go to state 166
    IntExpression                  shift and go to state 112
    AlphConcat                     shift and go to state 13
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 37
    MultDiv                        shift and go to state 35
    AlphGroup                      shift and go to state 53
    Unary                          shift and go to state 52
    Alph                           shift and go to state 59
    Primary                        shift and go to state 57

state 148

    (105) LangAssign -> VLang Eq LangExpression .
    (83) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 105 (LangAssign -> VLang Eq LangExpression .)
    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 149

    (73) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (82) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    KleeneC         shift and go to state 70
    PositiveC       shift and go to state 71


state 150

    (62) LangGroup -> LGroup . LangExpression RGroup
    (51) AlphGroup -> LGroup . AlphExpression RGroup
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (1) AlphExpression -> . AlphConcat
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    LGroup          shift and go to state 150
    VLang           shift and go to state 113
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 110
    AlphExpression                 shift and go to state 108
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphConcat                     shift and go to state 13
    LangConcat                     shift and go to state 41
    AlphPow                        shift and go to state 37
    LangGroup                      shift and go to state 55
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 151

    (110) BooleanAssign -> VBoolean Eq BooleanExpression .

    Term            reduce using rule 110 (BooleanAssign -> VBoolean Eq BooleanExpression .)


state 152

    (77) StringDeclare -> StringType VarName Eq . StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 173
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 153

    (92) IntDeclare -> IntType VarName Eq . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 174
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 154

    (97) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (1) AlphExpression -> . AlphConcat
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 123
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 175
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 155

    (102) LangDeclare -> LangType VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    LGroup          shift and go to state 150
    VLang           shift and go to state 113
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 176
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 149
    LangConcat                     shift and go to state 41
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 55
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 156

    (107) BooleanDeclare -> BooleanType VarName Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 128
    VBoolean        shift and go to state 114
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 177
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 42
    BooleanGroup                   shift and go to state 56
    Boolean                        shift and go to state 62

state 157

    (51) AlphGroup -> LGroup AlphExpression RGroup .

    Pow             reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)
    Concat          reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)
    KleeneC         reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)
    PositiveC       reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)
    Term            reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)
    RGroup          reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)
    LenOp           reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)
    Splitter        reduce using rule 51 (AlphGroup -> LGroup AlphExpression RGroup .)


state 158

    (45) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    KleeneC         reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    PositiveC       reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 45 (StringGroup -> LGroup StringExpression RGroup .)


state 159

    (62) LangGroup -> LGroup LangExpression RGroup .

    Concat          reduce using rule 62 (LangGroup -> LGroup LangExpression RGroup .)
    Add             reduce using rule 62 (LangGroup -> LGroup LangExpression RGroup .)
    KleeneC         reduce using rule 62 (LangGroup -> LGroup LangExpression RGroup .)
    PositiveC       reduce using rule 62 (LangGroup -> LGroup LangExpression RGroup .)
    Term            reduce using rule 62 (LangGroup -> LGroup LangExpression RGroup .)
    RGroup          reduce using rule 62 (LangGroup -> LGroup LangExpression RGroup .)
    Splitter        reduce using rule 62 (LangGroup -> LGroup LangExpression RGroup .)


state 160

    (48) BooleanGroup -> LGroup BooleanExpression RGroup .

    And             reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Or              reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Term            reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    RGroup          reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Splitter        reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)


state 161

    (84) Primary -> LGroup IntExpression RGroup .

    Add             reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    Sub             reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    Concat          reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    Div             reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    Term            reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    RGroup          reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    KleeneC         reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    PositiveC       reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    Splitter        reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    Pow             reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    LenOp           reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    On              reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)
    CloseStruct     reduce using rule 84 (Primary -> LGroup IntExpression RGroup .)


state 162

    (64) Alph -> OpenStruct StringList CloseStruct .

    Pow             reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    Concat          reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    KleeneC         reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    PositiveC       reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    Term            reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    RGroup          reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)


state 163

    (74) StringList -> StringList Splitter . StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 178
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 164

    (65) Alph -> OpenStruct StringExpression CloseStruct .

    Pow             reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    Concat          reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    KleeneC         reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    PositiveC       reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    Term            reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    RGroup          reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)


state 165

    (75) StringList -> StringExpression Splitter . StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 179
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 166

    (51) AlphGroup -> LGroup AlphExpression . RGroup

    RGroup          shift and go to state 157


state 167

    (79) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (12) StringExpression -> . StringConcat
    (19) StringConcat -> . StringConcat Concat StringPow
    (20) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (45) StringGroup -> . LGroup StringExpression RGroup
    (46) StringGroup -> . String
    (47) StringGroup -> . VString

    LGroup          shift and go to state 85
    String          shift and go to state 61
    VString         shift and go to state 86

    StringExpression               shift and go to state 180
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 38
    StringGroup                    shift and go to state 54

state 168

    (94) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (17) StringLen -> . LenOp StringExpression LenOp
    (18) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (39) AddSub -> . MultDiv Add AddSub
    (40) AddSub -> . MultDiv Sub AddSub
    (41) AddSub -> . MultDiv
    (59) MultDiv -> . MultDiv Concat Unary
    (60) MultDiv -> . MultDiv Div Unary
    (61) MultDiv -> . Unary
    (80) Unary -> . Sub Primary
    (81) Unary -> . Primary
    (84) Primary -> . LGroup IntExpression RGroup
    (85) Primary -> . VInt
    (86) Primary -> . Int

    LenOp           shift and go to state 34
    Sub             shift and go to state 36
    LGroup          shift and go to state 92
    VInt            shift and go to state 63
    Int             shift and go to state 64

    IntExpression                  shift and go to state 181
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 35
    Unary                          shift and go to state 52
    Primary                        shift and go to state 57

state 169

    (99) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (1) AlphExpression -> . AlphConcat
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 123
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 182
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 170

    (104) LangDeclare -> LangDeclare Splitter VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (88) StringPrefix -> . Prefix StringExpression
    (90) StringSuffix -> . Suffix StringExpression
    (73) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (82) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (83) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (15) AlphConcat -> . AlphConcat Concat AlphPow
    (16) AlphConcat -> . AlphPow
    (62) LangGroup -> . LGroup LangExpression RGroup
    (63) LangGroup -> . VLang
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (51) AlphGroup -> . LGroup AlphExpression RGroup
    (52) AlphGroup -> . Alph
    (53) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 39
    Suffix          shift and go to state 40
    LGroup          shift and go to state 150
    VLang           shift and go to state 113
    VAlph           shift and go to state 60
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 183
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 149
    LangConcat                     shift and go to state 41
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 55
    AlphPow                        shift and go to state 37
    AlphGroup                      shift and go to state 53
    Alph                           shift and go to state 59

state 171

    (109) BooleanDeclare -> BooleanDeclare Splitter VarName Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 128
    VBoolean        shift and go to state 114
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 184
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 42
    BooleanGroup                   shift and go to state 56
    Boolean                        shift and go to state 62

state 172

    (18) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 185


state 173

    (77) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 77 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 77 (StringDeclare -> StringType VarName Eq StringExpression .)


state 174

    (92) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 92 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 92 (IntDeclare -> IntType VarName Eq IntExpression .)


state 175

    (97) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 97 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 97 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 176

    (102) LangDeclare -> LangType VarName Eq LangExpression .
    (83) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 102 (LangDeclare -> LangType VarName Eq LangExpression .)
    Term            reduce using rule 102 (LangDeclare -> LangType VarName Eq LangExpression .)
    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 177

    (107) BooleanDeclare -> BooleanType VarName Eq BooleanExpression .

    Splitter        reduce using rule 107 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)
    Term            reduce using rule 107 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)


state 178

    (74) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 74 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 74 (StringList -> StringList Splitter StringExpression .)


state 179

    (75) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 75 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 75 (StringList -> StringExpression Splitter StringExpression .)


state 180

    (79) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 79 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 79 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 181

    (94) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 94 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 94 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 182

    (99) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 99 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 99 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 183

    (104) LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .
    (83) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 104 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    Term            reduce using rule 104 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 184

    (109) BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .

    Splitter        reduce using rule 109 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)
    Term            reduce using rule 109 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)


state 185

    (18) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    KleeneC         reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    PositiveC       reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 18 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Concat in state 35 resolved as shift
