Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CommentText
    EndComment
    InitComment
    NextLine
    SuchThat

Grammar

Rule 0     S' -> expressions
Rule 1     AlphExpression -> AlphConcat
Rule 2     BooleanExpression -> BooleanOr
Rule 3     LangExpression -> StringPrefix
Rule 4     LangExpression -> StringSuffix
Rule 5     LangExpression -> AlphKleeneC
Rule 6     LangExpression -> AlphPositiveC
Rule 7     LangExpression -> LangKleeneC
Rule 8     LangExpression -> LangPositiveC
Rule 9     LangExpression -> LangUnion
Rule 10    IntExpression -> StringLen
Rule 11    IntExpression -> AddSub
Rule 12    StringExpression -> StringConcat
Rule 13    BooleanOr -> BooleanOr Or BooleanAnd
Rule 14    BooleanOr -> BooleanAnd
Rule 15    StringLen -> LenOp StringExpression LenOp
Rule 16    StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 17    StringConcat -> StringConcat Concat StringPow
Rule 18    StringConcat -> StringPow
Rule 19    AlphConcat -> AlphConcat Concat AlphPow
Rule 20    AlphConcat -> AlphPow
Rule 21    expressions -> expressions expression Term
Rule 22    expressions -> expression Term
Rule 23    LangUnion -> LangUnion Add LangConcat
Rule 24    LangUnion -> LangConcat
Rule 25    BooleanAnd -> BooleanAnd And BooleanGroup
Rule 26    BooleanAnd -> BooleanGroup
Rule 27    StringPow -> StringPow Pow IntExpression
Rule 28    StringPow -> StringGroup
Rule 29    expression -> IntExpression
Rule 30    expression -> AlphExpression
Rule 31    expression -> StringExpression
Rule 32    expression -> LangExpression
Rule 33    expression -> BooleanExpression
Rule 34    expression -> ShowVal
Rule 35    expression -> Assigns
Rule 36    expression -> Declares
Rule 37    AddSub -> AddSub Add MultDiv
Rule 38    AddSub -> AddSub Sub MultDiv
Rule 39    AddSub -> MultDiv
Rule 40    AlphPow -> AlphPow Pow IntExpression
Rule 41    AlphPow -> AlphGroup
Rule 42    LangConcat -> LangConcat Concat LangGroup
Rule 43    LangConcat -> LangGroup
Rule 44    StringGroup -> LGroup StringExpression RGroup
Rule 45    StringGroup -> String
Rule 46    StringGroup -> VString
Rule 47    ShowVal -> Show expression
Rule 48    ShowVal -> ShowInLine expression
Rule 49    BooleanGroup -> LGroup BooleanExpression RGroup
Rule 50    BooleanGroup -> Boolean
Rule 51    BooleanGroup -> VBoolean
Rule 52    AlphGroup -> LGroup AlphExpression RGroup
Rule 53    AlphGroup -> Alph
Rule 54    AlphGroup -> VAlph
Rule 55    MultDiv -> MultDiv Concat IntPow
Rule 56    MultDiv -> MultDiv Div IntPow
Rule 57    MultDiv -> IntPow
Rule 58    Declares -> StringDeclare
Rule 59    Declares -> IntDeclare
Rule 60    Declares -> AlphDeclare
Rule 61    Declares -> LangDeclare
Rule 62    Declares -> BooleanDeclare
Rule 63    LangGroup -> LGroup LangExpression RGroup
Rule 64    LangGroup -> VLang
Rule 65    Boolean -> True
Rule 66    Boolean -> False
Rule 67    Alph -> OpenStruct StringList CloseStruct
Rule 68    Alph -> OpenStruct StringExpression CloseStruct
Rule 69    Assigns -> StringAssign
Rule 70    Assigns -> IntAssign
Rule 71    Assigns -> AlphAssign
Rule 72    Assigns -> LangAssign
Rule 73    Assigns -> BooleanAssign
Rule 74    AlphKleeneC -> AlphExpression KleeneC IntExpression
Rule 75    IntPow -> IntPow Pow Unary
Rule 76    IntPow -> Unary
Rule 77    StringList -> StringList Splitter StringExpression
Rule 78    StringList -> StringExpression Splitter StringExpression
Rule 79    AlphPositiveC -> AlphExpression PositiveC IntExpression
Rule 80    StringDeclare -> StringType VarName
Rule 81    StringDeclare -> StringType VarName Eq StringExpression
Rule 82    StringDeclare -> StringDeclare Splitter VarName
Rule 83    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 84    LangKleeneC -> LangExpression KleeneC IntExpression
Rule 85    Unary -> Sub Primary
Rule 86    Unary -> Primary
Rule 87    LangPositiveC -> LangExpression PositiveC IntExpression
Rule 88    Primary -> LGroup IntExpression RGroup
Rule 89    Primary -> VInt
Rule 90    Primary -> Int
Rule 91    StringPrefix -> Prefix StringExpression
Rule 92    StringAssign -> VString Eq StringExpression
Rule 93    StringSuffix -> Suffix StringExpression
Rule 94    IntDeclare -> IntType VarName
Rule 95    IntDeclare -> IntType VarName Eq IntExpression
Rule 96    IntDeclare -> IntDeclare Splitter VarName
Rule 97    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 98    IntAssign -> VarName Eq IntExpression
Rule 99    AlphDeclare -> AlphType VarName
Rule 100   AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 101   AlphDeclare -> AlphDeclare Splitter VarName
Rule 102   AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 103   AlphAssign -> VarName Eq AlphExpression
Rule 104   LangDeclare -> LangType VarName
Rule 105   LangDeclare -> LangType VarName Eq LangExpression
Rule 106   LangDeclare -> LangDeclare Splitter VarName
Rule 107   LangDeclare -> LangDeclare Splitter VarName Eq LangExpression
Rule 108   LangAssign -> VLang Eq LangExpression
Rule 109   BooleanDeclare -> BooleanType VarName
Rule 110   BooleanDeclare -> BooleanType VarName Eq BooleanExpression
Rule 111   BooleanDeclare -> BooleanDeclare Splitter VarName
Rule 112   BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression
Rule 113   BooleanAssign -> VBoolean Eq BooleanExpression

Terminals, with rules where they appear

Add                  : 23 37
AlphType             : 99 100
And                  : 25
BooleanType          : 109 110
CloseStruct          : 67 68
CommentText          : 
Concat               : 17 19 42 55
Div                  : 56
EndComment           : 
Eq                   : 81 83 92 95 97 98 100 102 103 105 107 108 110 112 113
False                : 66
InitComment          : 
Int                  : 90
IntType              : 94 95
KleeneC              : 74 84
LGroup               : 44 49 52 63 88
LangType             : 104 105
LenOp                : 15 15 16 16
NextLine             : 
On                   : 16
OpenStruct           : 67 68
Or                   : 13
PositiveC            : 79 87
Pow                  : 27 40 75
Prefix               : 91
RGroup               : 44 49 52 63 88
Show                 : 47
ShowInLine           : 48
Splitter             : 77 78 82 83 96 97 101 102 106 107 111 112
String               : 45
StringType           : 80 81
Sub                  : 38 85
SuchThat             : 
Suffix               : 93
Term                 : 21 22
True                 : 65
VAlph                : 54
VBoolean             : 51 113
VInt                 : 89
VLang                : 64 108
VString              : 46 92
VarName              : 80 81 82 83 94 95 96 97 98 99 100 101 102 103 104 105 106 107 109 110 111 112
error                : 

Nonterminals, with rules where they appear

AddSub               : 11 37 38
Alph                 : 53
AlphAssign           : 71
AlphConcat           : 1 19
AlphDeclare          : 60 101 102
AlphExpression       : 16 30 52 74 79 100 102 103
AlphGroup            : 41
AlphKleeneC          : 5
AlphPositiveC        : 6
AlphPow              : 19 20 40
Assigns              : 35
Boolean              : 50
BooleanAnd           : 13 14 25
BooleanAssign        : 73
BooleanDeclare       : 62 111 112
BooleanExpression    : 33 49 110 112 113
BooleanGroup         : 25 26
BooleanOr            : 2 13
Declares             : 36
IntAssign            : 70
IntDeclare           : 59 96 97
IntExpression        : 27 29 40 74 79 84 87 88 95 97 98
IntPow               : 55 56 57 75
LangAssign           : 72
LangConcat           : 23 24 42
LangDeclare          : 61 106 107
LangExpression       : 32 63 84 87 105 107 108
LangGroup            : 42 43
LangKleeneC          : 7
LangPositiveC        : 8
LangUnion            : 9 23
MultDiv              : 37 38 39 55 56
Primary              : 85 86
ShowVal              : 34
StringAssign         : 69
StringConcat         : 12 17
StringDeclare        : 58 82 83
StringExpression     : 15 16 31 44 68 77 78 78 81 83 91 92 93
StringGroup          : 28
StringLen            : 10
StringList           : 67 77
StringPow            : 17 18 27
StringPrefix         : 3
StringSuffix         : 4
Unary                : 75 76
expression           : 21 22 47 48
expressions          : 21 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (21) expressions -> . expressions expression Term
    (22) expressions -> . expression Term
    (29) expression -> . IntExpression
    (30) expression -> . AlphExpression
    (31) expression -> . StringExpression
    (32) expression -> . LangExpression
    (33) expression -> . BooleanExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (69) Assigns -> . StringAssign
    (70) Assigns -> . IntAssign
    (71) Assigns -> . AlphAssign
    (72) Assigns -> . LangAssign
    (73) Assigns -> . BooleanAssign
    (58) Declares -> . StringDeclare
    (59) Declares -> . IntDeclare
    (60) Declares -> . AlphDeclare
    (61) Declares -> . LangDeclare
    (62) Declares -> . BooleanDeclare
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (92) StringAssign -> . VString Eq StringExpression
    (98) IntAssign -> . VarName Eq IntExpression
    (103) AlphAssign -> . VarName Eq AlphExpression
    (108) LangAssign -> . VLang Eq LangExpression
    (113) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (94) IntDeclare -> . IntType VarName
    (95) IntDeclare -> . IntType VarName Eq IntExpression
    (96) IntDeclare -> . IntDeclare Splitter VarName
    (97) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (99) AlphDeclare -> . AlphType VarName
    (100) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (101) AlphDeclare -> . AlphDeclare Splitter VarName
    (102) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (104) LangDeclare -> . LangType VarName
    (105) LangDeclare -> . LangType VarName Eq LangExpression
    (106) LangDeclare -> . LangDeclare Splitter VarName
    (107) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (109) BooleanDeclare -> . BooleanType VarName
    (110) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (111) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (112) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Show            shift and go to state 23
    ShowInLine      shift and go to state 24
    LenOp           shift and go to state 35
    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    VString         shift and go to state 44
    VarName         shift and go to state 45
    VLang           shift and go to state 46
    VBoolean        shift and go to state 47
    StringType      shift and go to state 48
    IntType         shift and go to state 49
    AlphType        shift and go to state 50
    LangType        shift and go to state 51
    BooleanType     shift and go to state 52
    LGroup          shift and go to state 59
    VAlph           shift and go to state 61
    String          shift and go to state 62
    Sub             shift and go to state 37
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67
    VInt            shift and go to state 68
    Int             shift and go to state 69

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringAssign                   shift and go to state 25
    IntAssign                      shift and go to state 26
    AlphAssign                     shift and go to state 27
    LangAssign                     shift and go to state 28
    BooleanAssign                  shift and go to state 29
    StringDeclare                  shift and go to state 30
    IntDeclare                     shift and go to state 31
    AlphDeclare                    shift and go to state 32
    LangDeclare                    shift and go to state 33
    BooleanDeclare                 shift and go to state 34
    MultDiv                        shift and go to state 36
    AlphPow                        shift and go to state 38
    StringPow                      shift and go to state 39
    LangConcat                     shift and go to state 42
    BooleanAnd                     shift and go to state 43
    IntPow                         shift and go to state 53
    AlphGroup                      shift and go to state 54
    StringGroup                    shift and go to state 55
    LangGroup                      shift and go to state 56
    BooleanGroup                   shift and go to state 57
    Unary                          shift and go to state 58
    Alph                           shift and go to state 60
    Boolean                        shift and go to state 63
    Primary                        shift and go to state 64

state 1

    (0) S' -> expressions .
    (21) expressions -> expressions . expression Term
    (29) expression -> . IntExpression
    (30) expression -> . AlphExpression
    (31) expression -> . StringExpression
    (32) expression -> . LangExpression
    (33) expression -> . BooleanExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (69) Assigns -> . StringAssign
    (70) Assigns -> . IntAssign
    (71) Assigns -> . AlphAssign
    (72) Assigns -> . LangAssign
    (73) Assigns -> . BooleanAssign
    (58) Declares -> . StringDeclare
    (59) Declares -> . IntDeclare
    (60) Declares -> . AlphDeclare
    (61) Declares -> . LangDeclare
    (62) Declares -> . BooleanDeclare
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (92) StringAssign -> . VString Eq StringExpression
    (98) IntAssign -> . VarName Eq IntExpression
    (103) AlphAssign -> . VarName Eq AlphExpression
    (108) LangAssign -> . VLang Eq LangExpression
    (113) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (94) IntDeclare -> . IntType VarName
    (95) IntDeclare -> . IntType VarName Eq IntExpression
    (96) IntDeclare -> . IntDeclare Splitter VarName
    (97) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (99) AlphDeclare -> . AlphType VarName
    (100) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (101) AlphDeclare -> . AlphDeclare Splitter VarName
    (102) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (104) LangDeclare -> . LangType VarName
    (105) LangDeclare -> . LangType VarName Eq LangExpression
    (106) LangDeclare -> . LangDeclare Splitter VarName
    (107) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (109) BooleanDeclare -> . BooleanType VarName
    (110) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (111) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (112) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Show            shift and go to state 23
    ShowInLine      shift and go to state 24
    LenOp           shift and go to state 35
    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    VString         shift and go to state 44
    VarName         shift and go to state 45
    VLang           shift and go to state 46
    VBoolean        shift and go to state 47
    StringType      shift and go to state 48
    IntType         shift and go to state 49
    AlphType        shift and go to state 50
    LangType        shift and go to state 51
    BooleanType     shift and go to state 52
    LGroup          shift and go to state 59
    VAlph           shift and go to state 61
    String          shift and go to state 62
    Sub             shift and go to state 37
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67
    VInt            shift and go to state 68
    Int             shift and go to state 69

    expression                     shift and go to state 70
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringAssign                   shift and go to state 25
    IntAssign                      shift and go to state 26
    AlphAssign                     shift and go to state 27
    LangAssign                     shift and go to state 28
    BooleanAssign                  shift and go to state 29
    StringDeclare                  shift and go to state 30
    IntDeclare                     shift and go to state 31
    AlphDeclare                    shift and go to state 32
    LangDeclare                    shift and go to state 33
    BooleanDeclare                 shift and go to state 34
    MultDiv                        shift and go to state 36
    AlphPow                        shift and go to state 38
    StringPow                      shift and go to state 39
    LangConcat                     shift and go to state 42
    BooleanAnd                     shift and go to state 43
    IntPow                         shift and go to state 53
    AlphGroup                      shift and go to state 54
    StringGroup                    shift and go to state 55
    LangGroup                      shift and go to state 56
    BooleanGroup                   shift and go to state 57
    Unary                          shift and go to state 58
    Alph                           shift and go to state 60
    Boolean                        shift and go to state 63
    Primary                        shift and go to state 64

state 2

    (22) expressions -> expression . Term

    Term            shift and go to state 71


state 3

    (29) expression -> IntExpression .

    Term            reduce using rule 29 (expression -> IntExpression .)


state 4

    (30) expression -> AlphExpression .
    (74) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (79) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    Term            reduce using rule 30 (expression -> AlphExpression .)
    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 5

    (31) expression -> StringExpression .

    Term            reduce using rule 31 (expression -> StringExpression .)


state 6

    (32) expression -> LangExpression .
    (84) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 32 (expression -> LangExpression .)
    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 7

    (33) expression -> BooleanExpression .

    Term            reduce using rule 33 (expression -> BooleanExpression .)


state 8

    (34) expression -> ShowVal .

    Term            reduce using rule 34 (expression -> ShowVal .)


state 9

    (35) expression -> Assigns .

    Term            reduce using rule 35 (expression -> Assigns .)


state 10

    (36) expression -> Declares .

    Term            reduce using rule 36 (expression -> Declares .)


state 11

    (10) IntExpression -> StringLen .

    Term            reduce using rule 10 (IntExpression -> StringLen .)
    RGroup          reduce using rule 10 (IntExpression -> StringLen .)
    KleeneC         reduce using rule 10 (IntExpression -> StringLen .)
    PositiveC       reduce using rule 10 (IntExpression -> StringLen .)
    Splitter        reduce using rule 10 (IntExpression -> StringLen .)
    Pow             reduce using rule 10 (IntExpression -> StringLen .)
    Concat          reduce using rule 10 (IntExpression -> StringLen .)
    LenOp           reduce using rule 10 (IntExpression -> StringLen .)
    On              reduce using rule 10 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 10 (IntExpression -> StringLen .)


state 12

    (11) IntExpression -> AddSub .
    (37) AddSub -> AddSub . Add MultDiv
    (38) AddSub -> AddSub . Sub MultDiv

    Term            reduce using rule 11 (IntExpression -> AddSub .)
    RGroup          reduce using rule 11 (IntExpression -> AddSub .)
    KleeneC         reduce using rule 11 (IntExpression -> AddSub .)
    PositiveC       reduce using rule 11 (IntExpression -> AddSub .)
    Splitter        reduce using rule 11 (IntExpression -> AddSub .)
    Pow             reduce using rule 11 (IntExpression -> AddSub .)
    Concat          reduce using rule 11 (IntExpression -> AddSub .)
    LenOp           reduce using rule 11 (IntExpression -> AddSub .)
    On              reduce using rule 11 (IntExpression -> AddSub .)
    CloseStruct     reduce using rule 11 (IntExpression -> AddSub .)
    Add             shift and go to state 76
    Sub             shift and go to state 77


state 13

    (1) AlphExpression -> AlphConcat .
    (19) AlphConcat -> AlphConcat . Concat AlphPow

    KleeneC         reduce using rule 1 (AlphExpression -> AlphConcat .)
    PositiveC       reduce using rule 1 (AlphExpression -> AlphConcat .)
    Term            reduce using rule 1 (AlphExpression -> AlphConcat .)
    RGroup          reduce using rule 1 (AlphExpression -> AlphConcat .)
    LenOp           reduce using rule 1 (AlphExpression -> AlphConcat .)
    Splitter        reduce using rule 1 (AlphExpression -> AlphConcat .)
    Concat          shift and go to state 78


state 14

    (12) StringExpression -> StringConcat .
    (17) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 12 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 12 (StringExpression -> StringConcat .)
    On              reduce using rule 12 (StringExpression -> StringConcat .)
    KleeneC         reduce using rule 12 (StringExpression -> StringConcat .)
    PositiveC       reduce using rule 12 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 12 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 12 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 12 (StringExpression -> StringConcat .)
    Concat          shift and go to state 79


state 15

    (3) LangExpression -> StringPrefix .

    KleeneC         reduce using rule 3 (LangExpression -> StringPrefix .)
    PositiveC       reduce using rule 3 (LangExpression -> StringPrefix .)
    Term            reduce using rule 3 (LangExpression -> StringPrefix .)
    RGroup          reduce using rule 3 (LangExpression -> StringPrefix .)
    Splitter        reduce using rule 3 (LangExpression -> StringPrefix .)


state 16

    (4) LangExpression -> StringSuffix .

    KleeneC         reduce using rule 4 (LangExpression -> StringSuffix .)
    PositiveC       reduce using rule 4 (LangExpression -> StringSuffix .)
    Term            reduce using rule 4 (LangExpression -> StringSuffix .)
    RGroup          reduce using rule 4 (LangExpression -> StringSuffix .)
    Splitter        reduce using rule 4 (LangExpression -> StringSuffix .)


state 17

    (5) LangExpression -> AlphKleeneC .

    KleeneC         reduce using rule 5 (LangExpression -> AlphKleeneC .)
    PositiveC       reduce using rule 5 (LangExpression -> AlphKleeneC .)
    Term            reduce using rule 5 (LangExpression -> AlphKleeneC .)
    RGroup          reduce using rule 5 (LangExpression -> AlphKleeneC .)
    Splitter        reduce using rule 5 (LangExpression -> AlphKleeneC .)


state 18

    (6) LangExpression -> AlphPositiveC .

    KleeneC         reduce using rule 6 (LangExpression -> AlphPositiveC .)
    PositiveC       reduce using rule 6 (LangExpression -> AlphPositiveC .)
    Term            reduce using rule 6 (LangExpression -> AlphPositiveC .)
    RGroup          reduce using rule 6 (LangExpression -> AlphPositiveC .)
    Splitter        reduce using rule 6 (LangExpression -> AlphPositiveC .)


state 19

    (7) LangExpression -> LangKleeneC .

    KleeneC         reduce using rule 7 (LangExpression -> LangKleeneC .)
    PositiveC       reduce using rule 7 (LangExpression -> LangKleeneC .)
    Term            reduce using rule 7 (LangExpression -> LangKleeneC .)
    RGroup          reduce using rule 7 (LangExpression -> LangKleeneC .)
    Splitter        reduce using rule 7 (LangExpression -> LangKleeneC .)


state 20

    (8) LangExpression -> LangPositiveC .

    KleeneC         reduce using rule 8 (LangExpression -> LangPositiveC .)
    PositiveC       reduce using rule 8 (LangExpression -> LangPositiveC .)
    Term            reduce using rule 8 (LangExpression -> LangPositiveC .)
    RGroup          reduce using rule 8 (LangExpression -> LangPositiveC .)
    Splitter        reduce using rule 8 (LangExpression -> LangPositiveC .)


state 21

    (9) LangExpression -> LangUnion .
    (23) LangUnion -> LangUnion . Add LangConcat

    KleeneC         reduce using rule 9 (LangExpression -> LangUnion .)
    PositiveC       reduce using rule 9 (LangExpression -> LangUnion .)
    Term            reduce using rule 9 (LangExpression -> LangUnion .)
    RGroup          reduce using rule 9 (LangExpression -> LangUnion .)
    Splitter        reduce using rule 9 (LangExpression -> LangUnion .)
    Add             shift and go to state 80


state 22

    (2) BooleanExpression -> BooleanOr .
    (13) BooleanOr -> BooleanOr . Or BooleanAnd

    Term            reduce using rule 2 (BooleanExpression -> BooleanOr .)
    RGroup          reduce using rule 2 (BooleanExpression -> BooleanOr .)
    Splitter        reduce using rule 2 (BooleanExpression -> BooleanOr .)
    Or              shift and go to state 81


state 23

    (47) ShowVal -> Show . expression
    (29) expression -> . IntExpression
    (30) expression -> . AlphExpression
    (31) expression -> . StringExpression
    (32) expression -> . LangExpression
    (33) expression -> . BooleanExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (69) Assigns -> . StringAssign
    (70) Assigns -> . IntAssign
    (71) Assigns -> . AlphAssign
    (72) Assigns -> . LangAssign
    (73) Assigns -> . BooleanAssign
    (58) Declares -> . StringDeclare
    (59) Declares -> . IntDeclare
    (60) Declares -> . AlphDeclare
    (61) Declares -> . LangDeclare
    (62) Declares -> . BooleanDeclare
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (92) StringAssign -> . VString Eq StringExpression
    (98) IntAssign -> . VarName Eq IntExpression
    (103) AlphAssign -> . VarName Eq AlphExpression
    (108) LangAssign -> . VLang Eq LangExpression
    (113) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (94) IntDeclare -> . IntType VarName
    (95) IntDeclare -> . IntType VarName Eq IntExpression
    (96) IntDeclare -> . IntDeclare Splitter VarName
    (97) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (99) AlphDeclare -> . AlphType VarName
    (100) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (101) AlphDeclare -> . AlphDeclare Splitter VarName
    (102) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (104) LangDeclare -> . LangType VarName
    (105) LangDeclare -> . LangType VarName Eq LangExpression
    (106) LangDeclare -> . LangDeclare Splitter VarName
    (107) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (109) BooleanDeclare -> . BooleanType VarName
    (110) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (111) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (112) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Show            shift and go to state 23
    ShowInLine      shift and go to state 24
    LenOp           shift and go to state 35
    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    VString         shift and go to state 44
    VarName         shift and go to state 45
    VLang           shift and go to state 46
    VBoolean        shift and go to state 47
    StringType      shift and go to state 48
    IntType         shift and go to state 49
    AlphType        shift and go to state 50
    LangType        shift and go to state 51
    BooleanType     shift and go to state 52
    LGroup          shift and go to state 59
    VAlph           shift and go to state 61
    String          shift and go to state 62
    Sub             shift and go to state 37
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67
    VInt            shift and go to state 68
    Int             shift and go to state 69

    expression                     shift and go to state 82
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringAssign                   shift and go to state 25
    IntAssign                      shift and go to state 26
    AlphAssign                     shift and go to state 27
    LangAssign                     shift and go to state 28
    BooleanAssign                  shift and go to state 29
    StringDeclare                  shift and go to state 30
    IntDeclare                     shift and go to state 31
    AlphDeclare                    shift and go to state 32
    LangDeclare                    shift and go to state 33
    BooleanDeclare                 shift and go to state 34
    MultDiv                        shift and go to state 36
    AlphPow                        shift and go to state 38
    StringPow                      shift and go to state 39
    LangConcat                     shift and go to state 42
    BooleanAnd                     shift and go to state 43
    IntPow                         shift and go to state 53
    AlphGroup                      shift and go to state 54
    StringGroup                    shift and go to state 55
    LangGroup                      shift and go to state 56
    BooleanGroup                   shift and go to state 57
    Unary                          shift and go to state 58
    Alph                           shift and go to state 60
    Boolean                        shift and go to state 63
    Primary                        shift and go to state 64

state 24

    (48) ShowVal -> ShowInLine . expression
    (29) expression -> . IntExpression
    (30) expression -> . AlphExpression
    (31) expression -> . StringExpression
    (32) expression -> . LangExpression
    (33) expression -> . BooleanExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (47) ShowVal -> . Show expression
    (48) ShowVal -> . ShowInLine expression
    (69) Assigns -> . StringAssign
    (70) Assigns -> . IntAssign
    (71) Assigns -> . AlphAssign
    (72) Assigns -> . LangAssign
    (73) Assigns -> . BooleanAssign
    (58) Declares -> . StringDeclare
    (59) Declares -> . IntDeclare
    (60) Declares -> . AlphDeclare
    (61) Declares -> . LangDeclare
    (62) Declares -> . BooleanDeclare
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (92) StringAssign -> . VString Eq StringExpression
    (98) IntAssign -> . VarName Eq IntExpression
    (103) AlphAssign -> . VarName Eq AlphExpression
    (108) LangAssign -> . VLang Eq LangExpression
    (113) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (94) IntDeclare -> . IntType VarName
    (95) IntDeclare -> . IntType VarName Eq IntExpression
    (96) IntDeclare -> . IntDeclare Splitter VarName
    (97) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (99) AlphDeclare -> . AlphType VarName
    (100) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (101) AlphDeclare -> . AlphDeclare Splitter VarName
    (102) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (104) LangDeclare -> . LangType VarName
    (105) LangDeclare -> . LangType VarName Eq LangExpression
    (106) LangDeclare -> . LangDeclare Splitter VarName
    (107) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (109) BooleanDeclare -> . BooleanType VarName
    (110) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (111) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (112) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Show            shift and go to state 23
    ShowInLine      shift and go to state 24
    LenOp           shift and go to state 35
    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    VString         shift and go to state 44
    VarName         shift and go to state 45
    VLang           shift and go to state 46
    VBoolean        shift and go to state 47
    StringType      shift and go to state 48
    IntType         shift and go to state 49
    AlphType        shift and go to state 50
    LangType        shift and go to state 51
    BooleanType     shift and go to state 52
    LGroup          shift and go to state 59
    VAlph           shift and go to state 61
    String          shift and go to state 62
    Sub             shift and go to state 37
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67
    VInt            shift and go to state 68
    Int             shift and go to state 69

    expression                     shift and go to state 83
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringAssign                   shift and go to state 25
    IntAssign                      shift and go to state 26
    AlphAssign                     shift and go to state 27
    LangAssign                     shift and go to state 28
    BooleanAssign                  shift and go to state 29
    StringDeclare                  shift and go to state 30
    IntDeclare                     shift and go to state 31
    AlphDeclare                    shift and go to state 32
    LangDeclare                    shift and go to state 33
    BooleanDeclare                 shift and go to state 34
    MultDiv                        shift and go to state 36
    AlphPow                        shift and go to state 38
    StringPow                      shift and go to state 39
    LangConcat                     shift and go to state 42
    BooleanAnd                     shift and go to state 43
    IntPow                         shift and go to state 53
    AlphGroup                      shift and go to state 54
    StringGroup                    shift and go to state 55
    LangGroup                      shift and go to state 56
    BooleanGroup                   shift and go to state 57
    Unary                          shift and go to state 58
    Alph                           shift and go to state 60
    Boolean                        shift and go to state 63
    Primary                        shift and go to state 64

state 25

    (69) Assigns -> StringAssign .

    Term            reduce using rule 69 (Assigns -> StringAssign .)


state 26

    (70) Assigns -> IntAssign .

    Term            reduce using rule 70 (Assigns -> IntAssign .)


state 27

    (71) Assigns -> AlphAssign .

    Term            reduce using rule 71 (Assigns -> AlphAssign .)


state 28

    (72) Assigns -> LangAssign .

    Term            reduce using rule 72 (Assigns -> LangAssign .)


state 29

    (73) Assigns -> BooleanAssign .

    Term            reduce using rule 73 (Assigns -> BooleanAssign .)


state 30

    (58) Declares -> StringDeclare .
    (82) StringDeclare -> StringDeclare . Splitter VarName
    (83) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 58 (Declares -> StringDeclare .)
    Splitter        shift and go to state 84


state 31

    (59) Declares -> IntDeclare .
    (96) IntDeclare -> IntDeclare . Splitter VarName
    (97) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 59 (Declares -> IntDeclare .)
    Splitter        shift and go to state 85


state 32

    (60) Declares -> AlphDeclare .
    (101) AlphDeclare -> AlphDeclare . Splitter VarName
    (102) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 60 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 86


state 33

    (61) Declares -> LangDeclare .
    (106) LangDeclare -> LangDeclare . Splitter VarName
    (107) LangDeclare -> LangDeclare . Splitter VarName Eq LangExpression

    Term            reduce using rule 61 (Declares -> LangDeclare .)
    Splitter        shift and go to state 87


state 34

    (62) Declares -> BooleanDeclare .
    (111) BooleanDeclare -> BooleanDeclare . Splitter VarName
    (112) BooleanDeclare -> BooleanDeclare . Splitter VarName Eq BooleanExpression

    Term            reduce using rule 62 (Declares -> BooleanDeclare .)
    Splitter        shift and go to state 88


state 35

    (15) StringLen -> LenOp . StringExpression LenOp
    (16) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 89
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 36

    (39) AddSub -> MultDiv .
    (55) MultDiv -> MultDiv . Concat IntPow
    (56) MultDiv -> MultDiv . Div IntPow

  ! shift/reduce conflict for Concat resolved as shift
    Add             reduce using rule 39 (AddSub -> MultDiv .)
    Sub             reduce using rule 39 (AddSub -> MultDiv .)
    Term            reduce using rule 39 (AddSub -> MultDiv .)
    RGroup          reduce using rule 39 (AddSub -> MultDiv .)
    KleeneC         reduce using rule 39 (AddSub -> MultDiv .)
    PositiveC       reduce using rule 39 (AddSub -> MultDiv .)
    Splitter        reduce using rule 39 (AddSub -> MultDiv .)
    Pow             reduce using rule 39 (AddSub -> MultDiv .)
    LenOp           reduce using rule 39 (AddSub -> MultDiv .)
    On              reduce using rule 39 (AddSub -> MultDiv .)
    CloseStruct     reduce using rule 39 (AddSub -> MultDiv .)
    Concat          shift and go to state 92
    Div             shift and go to state 93

  ! Concat          [ reduce using rule 39 (AddSub -> MultDiv .) ]


state 37

    (85) Unary -> Sub . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    Primary                        shift and go to state 94

state 38

    (20) AlphConcat -> AlphPow .
    (40) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 20 (AlphConcat -> AlphPow .)
    KleeneC         reduce using rule 20 (AlphConcat -> AlphPow .)
    PositiveC       reduce using rule 20 (AlphConcat -> AlphPow .)
    Term            reduce using rule 20 (AlphConcat -> AlphPow .)
    RGroup          reduce using rule 20 (AlphConcat -> AlphPow .)
    LenOp           reduce using rule 20 (AlphConcat -> AlphPow .)
    Splitter        reduce using rule 20 (AlphConcat -> AlphPow .)
    Pow             shift and go to state 96


state 39

    (18) StringConcat -> StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 18 (StringConcat -> StringPow .)
    Term            reduce using rule 18 (StringConcat -> StringPow .)
    LenOp           reduce using rule 18 (StringConcat -> StringPow .)
    On              reduce using rule 18 (StringConcat -> StringPow .)
    KleeneC         reduce using rule 18 (StringConcat -> StringPow .)
    PositiveC       reduce using rule 18 (StringConcat -> StringPow .)
    RGroup          reduce using rule 18 (StringConcat -> StringPow .)
    Splitter        reduce using rule 18 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 18 (StringConcat -> StringPow .)
    Pow             shift and go to state 97


state 40

    (91) StringPrefix -> Prefix . StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 98
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 41

    (93) StringSuffix -> Suffix . StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 99
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 42

    (24) LangUnion -> LangConcat .
    (42) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 24 (LangUnion -> LangConcat .)
    KleeneC         reduce using rule 24 (LangUnion -> LangConcat .)
    PositiveC       reduce using rule 24 (LangUnion -> LangConcat .)
    Term            reduce using rule 24 (LangUnion -> LangConcat .)
    RGroup          reduce using rule 24 (LangUnion -> LangConcat .)
    Splitter        reduce using rule 24 (LangUnion -> LangConcat .)
    Concat          shift and go to state 100


state 43

    (14) BooleanOr -> BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 14 (BooleanOr -> BooleanAnd .)
    Term            reduce using rule 14 (BooleanOr -> BooleanAnd .)
    RGroup          reduce using rule 14 (BooleanOr -> BooleanAnd .)
    Splitter        reduce using rule 14 (BooleanOr -> BooleanAnd .)
    And             shift and go to state 101


state 44

    (92) StringAssign -> VString . Eq StringExpression
    (46) StringGroup -> VString .

    Eq              shift and go to state 102
    Pow             reduce using rule 46 (StringGroup -> VString .)
    Concat          reduce using rule 46 (StringGroup -> VString .)
    Term            reduce using rule 46 (StringGroup -> VString .)


state 45

    (98) IntAssign -> VarName . Eq IntExpression
    (103) AlphAssign -> VarName . Eq AlphExpression

    Eq              shift and go to state 103


state 46

    (108) LangAssign -> VLang . Eq LangExpression
    (64) LangGroup -> VLang .

    Eq              shift and go to state 104
    Concat          reduce using rule 64 (LangGroup -> VLang .)
    Add             reduce using rule 64 (LangGroup -> VLang .)
    KleeneC         reduce using rule 64 (LangGroup -> VLang .)
    PositiveC       reduce using rule 64 (LangGroup -> VLang .)
    Term            reduce using rule 64 (LangGroup -> VLang .)


state 47

    (113) BooleanAssign -> VBoolean . Eq BooleanExpression
    (51) BooleanGroup -> VBoolean .

    Eq              shift and go to state 105
    And             reduce using rule 51 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 51 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 51 (BooleanGroup -> VBoolean .)


state 48

    (80) StringDeclare -> StringType . VarName
    (81) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 106


state 49

    (94) IntDeclare -> IntType . VarName
    (95) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 107


state 50

    (99) AlphDeclare -> AlphType . VarName
    (100) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 108


state 51

    (104) LangDeclare -> LangType . VarName
    (105) LangDeclare -> LangType . VarName Eq LangExpression

    VarName         shift and go to state 109


state 52

    (109) BooleanDeclare -> BooleanType . VarName
    (110) BooleanDeclare -> BooleanType . VarName Eq BooleanExpression

    VarName         shift and go to state 110


state 53

    (57) MultDiv -> IntPow .
    (75) IntPow -> IntPow . Pow Unary

  ! shift/reduce conflict for Pow resolved as shift
    Concat          reduce using rule 57 (MultDiv -> IntPow .)
    Div             reduce using rule 57 (MultDiv -> IntPow .)
    Add             reduce using rule 57 (MultDiv -> IntPow .)
    Sub             reduce using rule 57 (MultDiv -> IntPow .)
    Term            reduce using rule 57 (MultDiv -> IntPow .)
    RGroup          reduce using rule 57 (MultDiv -> IntPow .)
    KleeneC         reduce using rule 57 (MultDiv -> IntPow .)
    PositiveC       reduce using rule 57 (MultDiv -> IntPow .)
    Splitter        reduce using rule 57 (MultDiv -> IntPow .)
    LenOp           reduce using rule 57 (MultDiv -> IntPow .)
    On              reduce using rule 57 (MultDiv -> IntPow .)
    CloseStruct     reduce using rule 57 (MultDiv -> IntPow .)
    Pow             shift and go to state 111

  ! Pow             [ reduce using rule 57 (MultDiv -> IntPow .) ]


state 54

    (41) AlphPow -> AlphGroup .

    Pow             reduce using rule 41 (AlphPow -> AlphGroup .)
    Concat          reduce using rule 41 (AlphPow -> AlphGroup .)
    KleeneC         reduce using rule 41 (AlphPow -> AlphGroup .)
    PositiveC       reduce using rule 41 (AlphPow -> AlphGroup .)
    Term            reduce using rule 41 (AlphPow -> AlphGroup .)
    RGroup          reduce using rule 41 (AlphPow -> AlphGroup .)
    LenOp           reduce using rule 41 (AlphPow -> AlphGroup .)
    Splitter        reduce using rule 41 (AlphPow -> AlphGroup .)


state 55

    (28) StringPow -> StringGroup .

    Pow             reduce using rule 28 (StringPow -> StringGroup .)
    Concat          reduce using rule 28 (StringPow -> StringGroup .)
    Term            reduce using rule 28 (StringPow -> StringGroup .)
    LenOp           reduce using rule 28 (StringPow -> StringGroup .)
    On              reduce using rule 28 (StringPow -> StringGroup .)
    KleeneC         reduce using rule 28 (StringPow -> StringGroup .)
    PositiveC       reduce using rule 28 (StringPow -> StringGroup .)
    RGroup          reduce using rule 28 (StringPow -> StringGroup .)
    Splitter        reduce using rule 28 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 28 (StringPow -> StringGroup .)


state 56

    (43) LangConcat -> LangGroup .

    Concat          reduce using rule 43 (LangConcat -> LangGroup .)
    Add             reduce using rule 43 (LangConcat -> LangGroup .)
    KleeneC         reduce using rule 43 (LangConcat -> LangGroup .)
    PositiveC       reduce using rule 43 (LangConcat -> LangGroup .)
    Term            reduce using rule 43 (LangConcat -> LangGroup .)
    RGroup          reduce using rule 43 (LangConcat -> LangGroup .)
    Splitter        reduce using rule 43 (LangConcat -> LangGroup .)


state 57

    (26) BooleanAnd -> BooleanGroup .

    And             reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Or              reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Term            reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    RGroup          reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Splitter        reduce using rule 26 (BooleanAnd -> BooleanGroup .)


state 58

    (76) IntPow -> Unary .

    Pow             reduce using rule 76 (IntPow -> Unary .)
    Concat          reduce using rule 76 (IntPow -> Unary .)
    Div             reduce using rule 76 (IntPow -> Unary .)
    Add             reduce using rule 76 (IntPow -> Unary .)
    Sub             reduce using rule 76 (IntPow -> Unary .)
    Term            reduce using rule 76 (IntPow -> Unary .)
    RGroup          reduce using rule 76 (IntPow -> Unary .)
    KleeneC         reduce using rule 76 (IntPow -> Unary .)
    PositiveC       reduce using rule 76 (IntPow -> Unary .)
    Splitter        reduce using rule 76 (IntPow -> Unary .)
    LenOp           reduce using rule 76 (IntPow -> Unary .)
    On              reduce using rule 76 (IntPow -> Unary .)
    CloseStruct     reduce using rule 76 (IntPow -> Unary .)


state 59

    (52) AlphGroup -> LGroup . AlphExpression RGroup
    (44) StringGroup -> LGroup . StringExpression RGroup
    (63) LangGroup -> LGroup . LangExpression RGroup
    (49) BooleanGroup -> LGroup . BooleanExpression RGroup
    (88) Primary -> LGroup . IntExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (12) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (2) BooleanExpression -> . BooleanOr
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct
    (65) Boolean -> . True
    (66) Boolean -> . False
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    LenOp           shift and go to state 35
    LGroup          shift and go to state 59
    VAlph           shift and go to state 61
    String          shift and go to state 62
    VString         shift and go to state 91
    VLang           shift and go to state 117
    VBoolean        shift and go to state 118
    OpenStruct      shift and go to state 65
    True            shift and go to state 66
    False           shift and go to state 67
    Sub             shift and go to state 37
    VInt            shift and go to state 68
    Int             shift and go to state 69

    AlphExpression                 shift and go to state 112
    StringExpression               shift and go to state 113
    LangExpression                 shift and go to state 114
    BooleanExpression              shift and go to state 115
    IntExpression                  shift and go to state 116
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    BooleanOr                      shift and go to state 22
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 38
    StringPow                      shift and go to state 39
    LangConcat                     shift and go to state 42
    BooleanAnd                     shift and go to state 43
    MultDiv                        shift and go to state 36
    AlphGroup                      shift and go to state 54
    StringGroup                    shift and go to state 55
    LangGroup                      shift and go to state 56
    BooleanGroup                   shift and go to state 57
    IntPow                         shift and go to state 53
    Alph                           shift and go to state 60
    Boolean                        shift and go to state 63
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 60

    (53) AlphGroup -> Alph .

    Pow             reduce using rule 53 (AlphGroup -> Alph .)
    Concat          reduce using rule 53 (AlphGroup -> Alph .)
    KleeneC         reduce using rule 53 (AlphGroup -> Alph .)
    PositiveC       reduce using rule 53 (AlphGroup -> Alph .)
    Term            reduce using rule 53 (AlphGroup -> Alph .)
    RGroup          reduce using rule 53 (AlphGroup -> Alph .)
    LenOp           reduce using rule 53 (AlphGroup -> Alph .)
    Splitter        reduce using rule 53 (AlphGroup -> Alph .)


state 61

    (54) AlphGroup -> VAlph .

    Pow             reduce using rule 54 (AlphGroup -> VAlph .)
    Concat          reduce using rule 54 (AlphGroup -> VAlph .)
    KleeneC         reduce using rule 54 (AlphGroup -> VAlph .)
    PositiveC       reduce using rule 54 (AlphGroup -> VAlph .)
    Term            reduce using rule 54 (AlphGroup -> VAlph .)
    RGroup          reduce using rule 54 (AlphGroup -> VAlph .)
    LenOp           reduce using rule 54 (AlphGroup -> VAlph .)
    Splitter        reduce using rule 54 (AlphGroup -> VAlph .)


state 62

    (45) StringGroup -> String .

    Pow             reduce using rule 45 (StringGroup -> String .)
    Concat          reduce using rule 45 (StringGroup -> String .)
    Term            reduce using rule 45 (StringGroup -> String .)
    LenOp           reduce using rule 45 (StringGroup -> String .)
    On              reduce using rule 45 (StringGroup -> String .)
    KleeneC         reduce using rule 45 (StringGroup -> String .)
    PositiveC       reduce using rule 45 (StringGroup -> String .)
    RGroup          reduce using rule 45 (StringGroup -> String .)
    Splitter        reduce using rule 45 (StringGroup -> String .)
    CloseStruct     reduce using rule 45 (StringGroup -> String .)


state 63

    (50) BooleanGroup -> Boolean .

    And             reduce using rule 50 (BooleanGroup -> Boolean .)
    Or              reduce using rule 50 (BooleanGroup -> Boolean .)
    Term            reduce using rule 50 (BooleanGroup -> Boolean .)
    RGroup          reduce using rule 50 (BooleanGroup -> Boolean .)
    Splitter        reduce using rule 50 (BooleanGroup -> Boolean .)


state 64

    (86) Unary -> Primary .

    Pow             reduce using rule 86 (Unary -> Primary .)
    Concat          reduce using rule 86 (Unary -> Primary .)
    Div             reduce using rule 86 (Unary -> Primary .)
    Add             reduce using rule 86 (Unary -> Primary .)
    Sub             reduce using rule 86 (Unary -> Primary .)
    Term            reduce using rule 86 (Unary -> Primary .)
    RGroup          reduce using rule 86 (Unary -> Primary .)
    KleeneC         reduce using rule 86 (Unary -> Primary .)
    PositiveC       reduce using rule 86 (Unary -> Primary .)
    Splitter        reduce using rule 86 (Unary -> Primary .)
    LenOp           reduce using rule 86 (Unary -> Primary .)
    On              reduce using rule 86 (Unary -> Primary .)
    CloseStruct     reduce using rule 86 (Unary -> Primary .)


state 65

    (67) Alph -> OpenStruct . StringList CloseStruct
    (68) Alph -> OpenStruct . StringExpression CloseStruct
    (77) StringList -> . StringList Splitter StringExpression
    (78) StringList -> . StringExpression Splitter StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringList                     shift and go to state 119
    StringExpression               shift and go to state 120
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 66

    (65) Boolean -> True .

    And             reduce using rule 65 (Boolean -> True .)
    Or              reduce using rule 65 (Boolean -> True .)
    Term            reduce using rule 65 (Boolean -> True .)
    RGroup          reduce using rule 65 (Boolean -> True .)
    Splitter        reduce using rule 65 (Boolean -> True .)


state 67

    (66) Boolean -> False .

    And             reduce using rule 66 (Boolean -> False .)
    Or              reduce using rule 66 (Boolean -> False .)
    Term            reduce using rule 66 (Boolean -> False .)
    RGroup          reduce using rule 66 (Boolean -> False .)
    Splitter        reduce using rule 66 (Boolean -> False .)


state 68

    (89) Primary -> VInt .

    Pow             reduce using rule 89 (Primary -> VInt .)
    Concat          reduce using rule 89 (Primary -> VInt .)
    Div             reduce using rule 89 (Primary -> VInt .)
    Add             reduce using rule 89 (Primary -> VInt .)
    Sub             reduce using rule 89 (Primary -> VInt .)
    Term            reduce using rule 89 (Primary -> VInt .)
    RGroup          reduce using rule 89 (Primary -> VInt .)
    KleeneC         reduce using rule 89 (Primary -> VInt .)
    PositiveC       reduce using rule 89 (Primary -> VInt .)
    Splitter        reduce using rule 89 (Primary -> VInt .)
    LenOp           reduce using rule 89 (Primary -> VInt .)
    On              reduce using rule 89 (Primary -> VInt .)
    CloseStruct     reduce using rule 89 (Primary -> VInt .)


state 69

    (90) Primary -> Int .

    Pow             reduce using rule 90 (Primary -> Int .)
    Concat          reduce using rule 90 (Primary -> Int .)
    Div             reduce using rule 90 (Primary -> Int .)
    Add             reduce using rule 90 (Primary -> Int .)
    Sub             reduce using rule 90 (Primary -> Int .)
    Term            reduce using rule 90 (Primary -> Int .)
    RGroup          reduce using rule 90 (Primary -> Int .)
    KleeneC         reduce using rule 90 (Primary -> Int .)
    PositiveC       reduce using rule 90 (Primary -> Int .)
    Splitter        reduce using rule 90 (Primary -> Int .)
    LenOp           reduce using rule 90 (Primary -> Int .)
    On              reduce using rule 90 (Primary -> Int .)
    CloseStruct     reduce using rule 90 (Primary -> Int .)


state 70

    (21) expressions -> expressions expression . Term

    Term            shift and go to state 121


state 71

    (22) expressions -> expression Term .

    Show            reduce using rule 22 (expressions -> expression Term .)
    ShowInLine      reduce using rule 22 (expressions -> expression Term .)
    LenOp           reduce using rule 22 (expressions -> expression Term .)
    Prefix          reduce using rule 22 (expressions -> expression Term .)
    Suffix          reduce using rule 22 (expressions -> expression Term .)
    VString         reduce using rule 22 (expressions -> expression Term .)
    VarName         reduce using rule 22 (expressions -> expression Term .)
    VLang           reduce using rule 22 (expressions -> expression Term .)
    VBoolean        reduce using rule 22 (expressions -> expression Term .)
    StringType      reduce using rule 22 (expressions -> expression Term .)
    IntType         reduce using rule 22 (expressions -> expression Term .)
    AlphType        reduce using rule 22 (expressions -> expression Term .)
    LangType        reduce using rule 22 (expressions -> expression Term .)
    BooleanType     reduce using rule 22 (expressions -> expression Term .)
    LGroup          reduce using rule 22 (expressions -> expression Term .)
    VAlph           reduce using rule 22 (expressions -> expression Term .)
    String          reduce using rule 22 (expressions -> expression Term .)
    Sub             reduce using rule 22 (expressions -> expression Term .)
    OpenStruct      reduce using rule 22 (expressions -> expression Term .)
    True            reduce using rule 22 (expressions -> expression Term .)
    False           reduce using rule 22 (expressions -> expression Term .)
    VInt            reduce using rule 22 (expressions -> expression Term .)
    Int             reduce using rule 22 (expressions -> expression Term .)
    $end            reduce using rule 22 (expressions -> expression Term .)


state 72

    (74) AlphKleeneC -> AlphExpression KleeneC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 122
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 73

    (79) AlphPositiveC -> AlphExpression PositiveC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 123
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 74

    (84) LangKleeneC -> LangExpression KleeneC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 124
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 75

    (87) LangPositiveC -> LangExpression PositiveC . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 125
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 76

    (37) AddSub -> AddSub Add . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    MultDiv                        shift and go to state 126
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 77

    (38) AddSub -> AddSub Sub . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    MultDiv                        shift and go to state 127
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 78

    (19) AlphConcat -> AlphConcat Concat . AlphPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 129
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    AlphPow                        shift and go to state 128
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 79

    (17) StringConcat -> StringConcat Concat . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringPow                      shift and go to state 130
    StringGroup                    shift and go to state 55

state 80

    (23) LangUnion -> LangUnion Add . LangConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang

    LGroup          shift and go to state 132
    VLang           shift and go to state 117

    LangConcat                     shift and go to state 131
    LangGroup                      shift and go to state 56

state 81

    (13) BooleanOr -> BooleanOr Or . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 134
    VBoolean        shift and go to state 118
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanAnd                     shift and go to state 133
    BooleanGroup                   shift and go to state 57
    Boolean                        shift and go to state 63

state 82

    (47) ShowVal -> Show expression .

    Term            reduce using rule 47 (ShowVal -> Show expression .)


state 83

    (48) ShowVal -> ShowInLine expression .

    Term            reduce using rule 48 (ShowVal -> ShowInLine expression .)


state 84

    (82) StringDeclare -> StringDeclare Splitter . VarName
    (83) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 135


state 85

    (96) IntDeclare -> IntDeclare Splitter . VarName
    (97) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 136


state 86

    (101) AlphDeclare -> AlphDeclare Splitter . VarName
    (102) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 137


state 87

    (106) LangDeclare -> LangDeclare Splitter . VarName
    (107) LangDeclare -> LangDeclare Splitter . VarName Eq LangExpression

    VarName         shift and go to state 138


state 88

    (111) BooleanDeclare -> BooleanDeclare Splitter . VarName
    (112) BooleanDeclare -> BooleanDeclare Splitter . VarName Eq BooleanExpression

    VarName         shift and go to state 139


state 89

    (15) StringLen -> LenOp StringExpression . LenOp
    (16) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 140
    On              shift and go to state 141


state 90

    (44) StringGroup -> LGroup . StringExpression RGroup
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 113
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 91

    (46) StringGroup -> VString .

    Pow             reduce using rule 46 (StringGroup -> VString .)
    Concat          reduce using rule 46 (StringGroup -> VString .)
    LenOp           reduce using rule 46 (StringGroup -> VString .)
    On              reduce using rule 46 (StringGroup -> VString .)
    KleeneC         reduce using rule 46 (StringGroup -> VString .)
    PositiveC       reduce using rule 46 (StringGroup -> VString .)
    Term            reduce using rule 46 (StringGroup -> VString .)
    RGroup          reduce using rule 46 (StringGroup -> VString .)
    Splitter        reduce using rule 46 (StringGroup -> VString .)
    CloseStruct     reduce using rule 46 (StringGroup -> VString .)


state 92

    (55) MultDiv -> MultDiv Concat . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntPow                         shift and go to state 142
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 93

    (56) MultDiv -> MultDiv Div . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntPow                         shift and go to state 143
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 94

    (85) Unary -> Sub Primary .

    Pow             reduce using rule 85 (Unary -> Sub Primary .)
    Concat          reduce using rule 85 (Unary -> Sub Primary .)
    Div             reduce using rule 85 (Unary -> Sub Primary .)
    Add             reduce using rule 85 (Unary -> Sub Primary .)
    Sub             reduce using rule 85 (Unary -> Sub Primary .)
    Term            reduce using rule 85 (Unary -> Sub Primary .)
    RGroup          reduce using rule 85 (Unary -> Sub Primary .)
    KleeneC         reduce using rule 85 (Unary -> Sub Primary .)
    PositiveC       reduce using rule 85 (Unary -> Sub Primary .)
    Splitter        reduce using rule 85 (Unary -> Sub Primary .)
    LenOp           reduce using rule 85 (Unary -> Sub Primary .)
    On              reduce using rule 85 (Unary -> Sub Primary .)
    CloseStruct     reduce using rule 85 (Unary -> Sub Primary .)


state 95

    (88) Primary -> LGroup . IntExpression RGroup
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 116
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 96

    (40) AlphPow -> AlphPow Pow . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 144
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 97

    (27) StringPow -> StringPow Pow . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 145
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 98

    (91) StringPrefix -> Prefix StringExpression .

    KleeneC         reduce using rule 91 (StringPrefix -> Prefix StringExpression .)
    PositiveC       reduce using rule 91 (StringPrefix -> Prefix StringExpression .)
    Term            reduce using rule 91 (StringPrefix -> Prefix StringExpression .)
    RGroup          reduce using rule 91 (StringPrefix -> Prefix StringExpression .)
    Splitter        reduce using rule 91 (StringPrefix -> Prefix StringExpression .)


state 99

    (93) StringSuffix -> Suffix StringExpression .

    KleeneC         reduce using rule 93 (StringSuffix -> Suffix StringExpression .)
    PositiveC       reduce using rule 93 (StringSuffix -> Suffix StringExpression .)
    Term            reduce using rule 93 (StringSuffix -> Suffix StringExpression .)
    RGroup          reduce using rule 93 (StringSuffix -> Suffix StringExpression .)
    Splitter        reduce using rule 93 (StringSuffix -> Suffix StringExpression .)


state 100

    (42) LangConcat -> LangConcat Concat . LangGroup
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang

    LGroup          shift and go to state 132
    VLang           shift and go to state 117

    LangGroup                      shift and go to state 146

state 101

    (25) BooleanAnd -> BooleanAnd And . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 134
    VBoolean        shift and go to state 118
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanGroup                   shift and go to state 147
    Boolean                        shift and go to state 63

state 102

    (92) StringAssign -> VString Eq . StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 148
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 103

    (98) IntAssign -> VarName Eq . IntExpression
    (103) AlphAssign -> VarName Eq . AlphExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    LGroup          shift and go to state 151
    VAlph           shift and go to state 61
    Sub             shift and go to state 37
    OpenStruct      shift and go to state 65
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 149
    AlphExpression                 shift and go to state 150
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    MultDiv                        shift and go to state 36
    AlphPow                        shift and go to state 38
    IntPow                         shift and go to state 53
    AlphGroup                      shift and go to state 54
    Unary                          shift and go to state 58
    Alph                           shift and go to state 60
    Primary                        shift and go to state 64

state 104

    (108) LangAssign -> VLang Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    LGroup          shift and go to state 154
    VLang           shift and go to state 117
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 152
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 153
    LangConcat                     shift and go to state 42
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 56
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 105

    (113) BooleanAssign -> VBoolean Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 134
    VBoolean        shift and go to state 118
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 155
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 43
    BooleanGroup                   shift and go to state 57
    Boolean                        shift and go to state 63

state 106

    (80) StringDeclare -> StringType VarName .
    (81) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 80 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 80 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 156


state 107

    (94) IntDeclare -> IntType VarName .
    (95) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 94 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 94 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 157


state 108

    (99) AlphDeclare -> AlphType VarName .
    (100) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 99 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 99 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 158


state 109

    (104) LangDeclare -> LangType VarName .
    (105) LangDeclare -> LangType VarName . Eq LangExpression

    Splitter        reduce using rule 104 (LangDeclare -> LangType VarName .)
    Term            reduce using rule 104 (LangDeclare -> LangType VarName .)
    Eq              shift and go to state 159


state 110

    (109) BooleanDeclare -> BooleanType VarName .
    (110) BooleanDeclare -> BooleanType VarName . Eq BooleanExpression

    Splitter        reduce using rule 109 (BooleanDeclare -> BooleanType VarName .)
    Term            reduce using rule 109 (BooleanDeclare -> BooleanType VarName .)
    Eq              shift and go to state 160


state 111

    (75) IntPow -> IntPow Pow . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    Unary                          shift and go to state 161
    Primary                        shift and go to state 64

state 112

    (52) AlphGroup -> LGroup AlphExpression . RGroup
    (74) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (79) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    RGroup          shift and go to state 162
    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 113

    (44) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 163


state 114

    (63) LangGroup -> LGroup LangExpression . RGroup
    (84) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    RGroup          shift and go to state 164
    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 115

    (49) BooleanGroup -> LGroup BooleanExpression . RGroup

    RGroup          shift and go to state 165


state 116

    (88) Primary -> LGroup IntExpression . RGroup

    RGroup          shift and go to state 166


state 117

    (64) LangGroup -> VLang .

    Concat          reduce using rule 64 (LangGroup -> VLang .)
    Add             reduce using rule 64 (LangGroup -> VLang .)
    RGroup          reduce using rule 64 (LangGroup -> VLang .)
    KleeneC         reduce using rule 64 (LangGroup -> VLang .)
    PositiveC       reduce using rule 64 (LangGroup -> VLang .)
    Term            reduce using rule 64 (LangGroup -> VLang .)
    Splitter        reduce using rule 64 (LangGroup -> VLang .)


state 118

    (51) BooleanGroup -> VBoolean .

    And             reduce using rule 51 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 51 (BooleanGroup -> VBoolean .)
    RGroup          reduce using rule 51 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 51 (BooleanGroup -> VBoolean .)
    Splitter        reduce using rule 51 (BooleanGroup -> VBoolean .)


state 119

    (67) Alph -> OpenStruct StringList . CloseStruct
    (77) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 167
    Splitter        shift and go to state 168


state 120

    (68) Alph -> OpenStruct StringExpression . CloseStruct
    (78) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 169
    Splitter        shift and go to state 170


state 121

    (21) expressions -> expressions expression Term .

    Show            reduce using rule 21 (expressions -> expressions expression Term .)
    ShowInLine      reduce using rule 21 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 21 (expressions -> expressions expression Term .)
    Prefix          reduce using rule 21 (expressions -> expressions expression Term .)
    Suffix          reduce using rule 21 (expressions -> expressions expression Term .)
    VString         reduce using rule 21 (expressions -> expressions expression Term .)
    VarName         reduce using rule 21 (expressions -> expressions expression Term .)
    VLang           reduce using rule 21 (expressions -> expressions expression Term .)
    VBoolean        reduce using rule 21 (expressions -> expressions expression Term .)
    StringType      reduce using rule 21 (expressions -> expressions expression Term .)
    IntType         reduce using rule 21 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 21 (expressions -> expressions expression Term .)
    LangType        reduce using rule 21 (expressions -> expressions expression Term .)
    BooleanType     reduce using rule 21 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 21 (expressions -> expressions expression Term .)
    VAlph           reduce using rule 21 (expressions -> expressions expression Term .)
    String          reduce using rule 21 (expressions -> expressions expression Term .)
    Sub             reduce using rule 21 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 21 (expressions -> expressions expression Term .)
    True            reduce using rule 21 (expressions -> expressions expression Term .)
    False           reduce using rule 21 (expressions -> expressions expression Term .)
    VInt            reduce using rule 21 (expressions -> expressions expression Term .)
    Int             reduce using rule 21 (expressions -> expressions expression Term .)
    $end            reduce using rule 21 (expressions -> expressions expression Term .)


state 122

    (74) AlphKleeneC -> AlphExpression KleeneC IntExpression .

    KleeneC         reduce using rule 74 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 74 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Term            reduce using rule 74 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    RGroup          reduce using rule 74 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Splitter        reduce using rule 74 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)


state 123

    (79) AlphPositiveC -> AlphExpression PositiveC IntExpression .

    KleeneC         reduce using rule 79 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 79 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Term            reduce using rule 79 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    RGroup          reduce using rule 79 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Splitter        reduce using rule 79 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)


state 124

    (84) LangKleeneC -> LangExpression KleeneC IntExpression .

    KleeneC         reduce using rule 84 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 84 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Term            reduce using rule 84 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    RGroup          reduce using rule 84 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Splitter        reduce using rule 84 (LangKleeneC -> LangExpression KleeneC IntExpression .)


state 125

    (87) LangPositiveC -> LangExpression PositiveC IntExpression .

    KleeneC         reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Term            reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    RGroup          reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Splitter        reduce using rule 87 (LangPositiveC -> LangExpression PositiveC IntExpression .)


state 126

    (37) AddSub -> AddSub Add MultDiv .
    (55) MultDiv -> MultDiv . Concat IntPow
    (56) MultDiv -> MultDiv . Div IntPow

    Add             reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    Sub             reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    Term            reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    RGroup          reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    KleeneC         reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    PositiveC       reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    Splitter        reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    Pow             reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    LenOp           reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    On              reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    CloseStruct     reduce using rule 37 (AddSub -> AddSub Add MultDiv .)
    Concat          shift and go to state 92
    Div             shift and go to state 93

  ! Concat          [ reduce using rule 37 (AddSub -> AddSub Add MultDiv .) ]


state 127

    (38) AddSub -> AddSub Sub MultDiv .
    (55) MultDiv -> MultDiv . Concat IntPow
    (56) MultDiv -> MultDiv . Div IntPow

    Add             reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    Sub             reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    Term            reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    RGroup          reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    KleeneC         reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    PositiveC       reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    Splitter        reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    Pow             reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    LenOp           reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    On              reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    CloseStruct     reduce using rule 38 (AddSub -> AddSub Sub MultDiv .)
    Concat          shift and go to state 92
    Div             shift and go to state 93

  ! Concat          [ reduce using rule 38 (AddSub -> AddSub Sub MultDiv .) ]


state 128

    (19) AlphConcat -> AlphConcat Concat AlphPow .
    (40) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 19 (AlphConcat -> AlphConcat Concat AlphPow .)
    KleeneC         reduce using rule 19 (AlphConcat -> AlphConcat Concat AlphPow .)
    PositiveC       reduce using rule 19 (AlphConcat -> AlphConcat Concat AlphPow .)
    Term            reduce using rule 19 (AlphConcat -> AlphConcat Concat AlphPow .)
    RGroup          reduce using rule 19 (AlphConcat -> AlphConcat Concat AlphPow .)
    LenOp           reduce using rule 19 (AlphConcat -> AlphConcat Concat AlphPow .)
    Splitter        reduce using rule 19 (AlphConcat -> AlphConcat Concat AlphPow .)
    Pow             shift and go to state 96


state 129

    (52) AlphGroup -> LGroup . AlphExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 129
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 171
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 130

    (17) StringConcat -> StringConcat Concat StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    KleeneC         reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    PositiveC       reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 17 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 97


state 131

    (23) LangUnion -> LangUnion Add LangConcat .
    (42) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    KleeneC         reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    PositiveC       reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    Term            reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    RGroup          reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    Splitter        reduce using rule 23 (LangUnion -> LangUnion Add LangConcat .)
    Concat          shift and go to state 100


state 132

    (63) LangGroup -> LGroup . LangExpression RGroup
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    LGroup          shift and go to state 154
    VLang           shift and go to state 117
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 114
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 153
    LangConcat                     shift and go to state 42
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 56
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 133

    (13) BooleanOr -> BooleanOr Or BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Term            reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    RGroup          reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Splitter        reduce using rule 13 (BooleanOr -> BooleanOr Or BooleanAnd .)
    And             shift and go to state 101


state 134

    (49) BooleanGroup -> LGroup . BooleanExpression RGroup
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 134
    VBoolean        shift and go to state 118
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 115
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 43
    BooleanGroup                   shift and go to state 57
    Boolean                        shift and go to state 63

state 135

    (82) StringDeclare -> StringDeclare Splitter VarName .
    (83) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 82 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 82 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 172


state 136

    (96) IntDeclare -> IntDeclare Splitter VarName .
    (97) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 96 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 96 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 173


state 137

    (101) AlphDeclare -> AlphDeclare Splitter VarName .
    (102) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 101 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 101 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 174


state 138

    (106) LangDeclare -> LangDeclare Splitter VarName .
    (107) LangDeclare -> LangDeclare Splitter VarName . Eq LangExpression

    Splitter        reduce using rule 106 (LangDeclare -> LangDeclare Splitter VarName .)
    Term            reduce using rule 106 (LangDeclare -> LangDeclare Splitter VarName .)
    Eq              shift and go to state 175


state 139

    (111) BooleanDeclare -> BooleanDeclare Splitter VarName .
    (112) BooleanDeclare -> BooleanDeclare Splitter VarName . Eq BooleanExpression

    Splitter        reduce using rule 111 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Term            reduce using rule 111 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Eq              shift and go to state 176


state 140

    (15) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    KleeneC         reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    PositiveC       reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 15 (StringLen -> LenOp StringExpression LenOp .)


state 141

    (16) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (1) AlphExpression -> . AlphConcat
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 129
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 177
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 142

    (55) MultDiv -> MultDiv Concat IntPow .
    (75) IntPow -> IntPow . Pow Unary

    Concat          reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    Div             reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    Add             reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    Sub             reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    Term            reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    RGroup          reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    KleeneC         reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    PositiveC       reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    Splitter        reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    LenOp           reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    On              reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    CloseStruct     reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .)
    Pow             shift and go to state 111

  ! Pow             [ reduce using rule 55 (MultDiv -> MultDiv Concat IntPow .) ]


state 143

    (56) MultDiv -> MultDiv Div IntPow .
    (75) IntPow -> IntPow . Pow Unary

    Concat          reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    Div             reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    Add             reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    Sub             reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    Term            reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    RGroup          reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    KleeneC         reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    PositiveC       reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    Splitter        reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    LenOp           reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    On              reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    CloseStruct     reduce using rule 56 (MultDiv -> MultDiv Div IntPow .)
    Pow             shift and go to state 111

  ! Pow             [ reduce using rule 56 (MultDiv -> MultDiv Div IntPow .) ]


state 144

    (40) AlphPow -> AlphPow Pow IntExpression .

    Pow             reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)
    Concat          reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)
    KleeneC         reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)
    PositiveC       reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)
    Term            reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)
    RGroup          reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)
    LenOp           reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)
    Splitter        reduce using rule 40 (AlphPow -> AlphPow Pow IntExpression .)


state 145

    (27) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    KleeneC         reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    PositiveC       reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)


state 146

    (42) LangConcat -> LangConcat Concat LangGroup .

    Concat          reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    Add             reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    KleeneC         reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    PositiveC       reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    Term            reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    RGroup          reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)
    Splitter        reduce using rule 42 (LangConcat -> LangConcat Concat LangGroup .)


state 147

    (25) BooleanAnd -> BooleanAnd And BooleanGroup .

    And             reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Or              reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Term            reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    RGroup          reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Splitter        reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanGroup .)


state 148

    (92) StringAssign -> VString Eq StringExpression .

    Term            reduce using rule 92 (StringAssign -> VString Eq StringExpression .)


state 149

    (98) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 98 (IntAssign -> VarName Eq IntExpression .)


state 150

    (103) AlphAssign -> VarName Eq AlphExpression .

    Term            reduce using rule 103 (AlphAssign -> VarName Eq AlphExpression .)


state 151

    (52) AlphGroup -> LGroup . AlphExpression RGroup
    (88) Primary -> LGroup . IntExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    LGroup          shift and go to state 151
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65
    Sub             shift and go to state 37
    VInt            shift and go to state 68
    Int             shift and go to state 69

    AlphExpression                 shift and go to state 171
    IntExpression                  shift and go to state 116
    AlphConcat                     shift and go to state 13
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 38
    MultDiv                        shift and go to state 36
    AlphGroup                      shift and go to state 54
    IntPow                         shift and go to state 53
    Alph                           shift and go to state 60
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 152

    (108) LangAssign -> VLang Eq LangExpression .
    (84) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 108 (LangAssign -> VLang Eq LangExpression .)
    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 153

    (74) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (79) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    KleeneC         shift and go to state 72
    PositiveC       shift and go to state 73


state 154

    (63) LangGroup -> LGroup . LangExpression RGroup
    (52) AlphGroup -> LGroup . AlphExpression RGroup
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (1) AlphExpression -> . AlphConcat
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    LGroup          shift and go to state 154
    VLang           shift and go to state 117
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 114
    AlphExpression                 shift and go to state 112
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphConcat                     shift and go to state 13
    LangConcat                     shift and go to state 42
    AlphPow                        shift and go to state 38
    LangGroup                      shift and go to state 56
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 155

    (113) BooleanAssign -> VBoolean Eq BooleanExpression .

    Term            reduce using rule 113 (BooleanAssign -> VBoolean Eq BooleanExpression .)


state 156

    (81) StringDeclare -> StringType VarName Eq . StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 178
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 157

    (95) IntDeclare -> IntType VarName Eq . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 179
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 158

    (100) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (1) AlphExpression -> . AlphConcat
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 129
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 180
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 159

    (105) LangDeclare -> LangType VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    LGroup          shift and go to state 154
    VLang           shift and go to state 117
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 181
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 153
    LangConcat                     shift and go to state 42
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 56
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 160

    (110) BooleanDeclare -> BooleanType VarName Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 134
    VBoolean        shift and go to state 118
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 182
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 43
    BooleanGroup                   shift and go to state 57
    Boolean                        shift and go to state 63

state 161

    (75) IntPow -> IntPow Pow Unary .

    Pow             reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    Concat          reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    Div             reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    Add             reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    Sub             reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    Term            reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    RGroup          reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    KleeneC         reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    PositiveC       reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    Splitter        reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    LenOp           reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    On              reduce using rule 75 (IntPow -> IntPow Pow Unary .)
    CloseStruct     reduce using rule 75 (IntPow -> IntPow Pow Unary .)


state 162

    (52) AlphGroup -> LGroup AlphExpression RGroup .

    Pow             reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)
    Concat          reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)
    KleeneC         reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)
    PositiveC       reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)
    Term            reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)
    RGroup          reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)
    LenOp           reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)
    Splitter        reduce using rule 52 (AlphGroup -> LGroup AlphExpression RGroup .)


state 163

    (44) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    KleeneC         reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    PositiveC       reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)


state 164

    (63) LangGroup -> LGroup LangExpression RGroup .

    Concat          reduce using rule 63 (LangGroup -> LGroup LangExpression RGroup .)
    Add             reduce using rule 63 (LangGroup -> LGroup LangExpression RGroup .)
    KleeneC         reduce using rule 63 (LangGroup -> LGroup LangExpression RGroup .)
    PositiveC       reduce using rule 63 (LangGroup -> LGroup LangExpression RGroup .)
    Term            reduce using rule 63 (LangGroup -> LGroup LangExpression RGroup .)
    RGroup          reduce using rule 63 (LangGroup -> LGroup LangExpression RGroup .)
    Splitter        reduce using rule 63 (LangGroup -> LGroup LangExpression RGroup .)


state 165

    (49) BooleanGroup -> LGroup BooleanExpression RGroup .

    And             reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Or              reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Term            reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    RGroup          reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Splitter        reduce using rule 49 (BooleanGroup -> LGroup BooleanExpression RGroup .)


state 166

    (88) Primary -> LGroup IntExpression RGroup .

    Pow             reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    Concat          reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    Div             reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    Add             reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    Sub             reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    Term            reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    RGroup          reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    KleeneC         reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    PositiveC       reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    Splitter        reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    LenOp           reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    On              reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)
    CloseStruct     reduce using rule 88 (Primary -> LGroup IntExpression RGroup .)


state 167

    (67) Alph -> OpenStruct StringList CloseStruct .

    Pow             reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)
    Concat          reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)
    KleeneC         reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)
    PositiveC       reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)
    Term            reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)
    RGroup          reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 67 (Alph -> OpenStruct StringList CloseStruct .)


state 168

    (77) StringList -> StringList Splitter . StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 183
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 169

    (68) Alph -> OpenStruct StringExpression CloseStruct .

    Pow             reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)
    Concat          reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)
    KleeneC         reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)
    PositiveC       reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)
    Term            reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)
    RGroup          reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 68 (Alph -> OpenStruct StringExpression CloseStruct .)


state 170

    (78) StringList -> StringExpression Splitter . StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 184
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 171

    (52) AlphGroup -> LGroup AlphExpression . RGroup

    RGroup          shift and go to state 162


state 172

    (83) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (12) StringExpression -> . StringConcat
    (17) StringConcat -> . StringConcat Concat StringPow
    (18) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 90
    String          shift and go to state 62
    VString         shift and go to state 91

    StringExpression               shift and go to state 185
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 39
    StringGroup                    shift and go to state 55

state 173

    (97) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (10) IntExpression -> . StringLen
    (11) IntExpression -> . AddSub
    (15) StringLen -> . LenOp StringExpression LenOp
    (16) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (37) AddSub -> . AddSub Add MultDiv
    (38) AddSub -> . AddSub Sub MultDiv
    (39) AddSub -> . MultDiv
    (55) MultDiv -> . MultDiv Concat IntPow
    (56) MultDiv -> . MultDiv Div IntPow
    (57) MultDiv -> . IntPow
    (75) IntPow -> . IntPow Pow Unary
    (76) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (88) Primary -> . LGroup IntExpression RGroup
    (89) Primary -> . VInt
    (90) Primary -> . Int

    LenOp           shift and go to state 35
    Sub             shift and go to state 37
    LGroup          shift and go to state 95
    VInt            shift and go to state 68
    Int             shift and go to state 69

    IntExpression                  shift and go to state 186
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 36
    IntPow                         shift and go to state 53
    Unary                          shift and go to state 58
    Primary                        shift and go to state 64

state 174

    (102) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (1) AlphExpression -> . AlphConcat
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 129
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    AlphExpression                 shift and go to state 187
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 175

    (107) LangDeclare -> LangDeclare Splitter VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . LangUnion
    (91) StringPrefix -> . Prefix StringExpression
    (93) StringSuffix -> . Suffix StringExpression
    (74) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (79) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (84) LangKleeneC -> . LangExpression KleeneC IntExpression
    (87) LangPositiveC -> . LangExpression PositiveC IntExpression
    (23) LangUnion -> . LangUnion Add LangConcat
    (24) LangUnion -> . LangConcat
    (1) AlphExpression -> . AlphConcat
    (42) LangConcat -> . LangConcat Concat LangGroup
    (43) LangConcat -> . LangGroup
    (19) AlphConcat -> . AlphConcat Concat AlphPow
    (20) AlphConcat -> . AlphPow
    (63) LangGroup -> . LGroup LangExpression RGroup
    (64) LangGroup -> . VLang
    (40) AlphPow -> . AlphPow Pow IntExpression
    (41) AlphPow -> . AlphGroup
    (52) AlphGroup -> . LGroup AlphExpression RGroup
    (53) AlphGroup -> . Alph
    (54) AlphGroup -> . VAlph
    (67) Alph -> . OpenStruct StringList CloseStruct
    (68) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 40
    Suffix          shift and go to state 41
    LGroup          shift and go to state 154
    VLang           shift and go to state 117
    VAlph           shift and go to state 61
    OpenStruct      shift and go to state 65

    LangExpression                 shift and go to state 188
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    AlphExpression                 shift and go to state 153
    LangConcat                     shift and go to state 42
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 56
    AlphPow                        shift and go to state 38
    AlphGroup                      shift and go to state 54
    Alph                           shift and go to state 60

state 176

    (112) BooleanDeclare -> BooleanDeclare Splitter VarName Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanOr Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanGroup
    (26) BooleanAnd -> . BooleanGroup
    (49) BooleanGroup -> . LGroup BooleanExpression RGroup
    (50) BooleanGroup -> . Boolean
    (51) BooleanGroup -> . VBoolean
    (65) Boolean -> . True
    (66) Boolean -> . False

    LGroup          shift and go to state 134
    VBoolean        shift and go to state 118
    True            shift and go to state 66
    False           shift and go to state 67

    BooleanExpression              shift and go to state 189
    BooleanOr                      shift and go to state 22
    BooleanAnd                     shift and go to state 43
    BooleanGroup                   shift and go to state 57
    Boolean                        shift and go to state 63

state 177

    (16) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 190


state 178

    (81) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 81 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 81 (StringDeclare -> StringType VarName Eq StringExpression .)


state 179

    (95) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 95 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 95 (IntDeclare -> IntType VarName Eq IntExpression .)


state 180

    (100) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 100 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 100 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 181

    (105) LangDeclare -> LangType VarName Eq LangExpression .
    (84) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 105 (LangDeclare -> LangType VarName Eq LangExpression .)
    Term            reduce using rule 105 (LangDeclare -> LangType VarName Eq LangExpression .)
    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 182

    (110) BooleanDeclare -> BooleanType VarName Eq BooleanExpression .

    Splitter        reduce using rule 110 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)
    Term            reduce using rule 110 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)


state 183

    (77) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 77 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 77 (StringList -> StringList Splitter StringExpression .)


state 184

    (78) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 78 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 78 (StringList -> StringExpression Splitter StringExpression .)


state 185

    (83) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 83 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 83 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 186

    (97) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 97 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 97 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 187

    (102) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 102 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 102 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 188

    (107) LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .
    (84) LangKleeneC -> LangExpression . KleeneC IntExpression
    (87) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 107 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    Term            reduce using rule 107 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 189

    (112) BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .

    Splitter        reduce using rule 112 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)
    Term            reduce using rule 112 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)


state 190

    (16) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    KleeneC         reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    PositiveC       reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 16 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Concat in state 36 resolved as shift
WARNING: shift/reduce conflict for Pow in state 53 resolved as shift
