Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LangType
    NextLine

Grammar

Rule 0     S' -> expressions
Rule 1     expressions -> expressions expression Term
Rule 2     expressions -> expression Term
Rule 3     expression -> VarAssign
Rule 4     expression -> ShowVal
Rule 5     ShowVal -> Show Integer
Rule 6     ShowVal -> Show StringConcat
Rule 7     ShowVal -> Show Alph
Rule 8     ShowVal -> Show VarName
Rule 9     VarAssign -> StringType VarName Eq StringConcat
Rule 10    VarAssign -> AlphType VarName Eq Alph
Rule 11    VarAssign -> IntType VarName Eq Integer
Rule 12    Alph -> OpenStruct StringList CloseStruct
Rule 13    Alph -> OpenStruct String CloseStruct
Rule 14    StringList -> StringList Splitter StringConcat
Rule 15    StringList -> StringConcat Splitter StringConcat
Rule 16    StringConcat -> StringConcat Concat StringPow
Rule 17    StringConcat -> StringPow
Rule 18    StringPow -> StringPow Pow Integer
Rule 19    StringPow -> StringPow Pow VarName
Rule 20    StringPow -> String
Rule 21    Integer -> Int
Rule 22    Integer -> StringLen
Rule 23    StringLen -> LenOp String LenOp
Rule 24    StringLen -> LenOp String On Alph LenOp
Rule 25    StringLen -> LenOp String On VarName LenOp

Terminals, with rules where they appear

AlphType             : 10
CloseStruct          : 12 13
Concat               : 16
Eq                   : 9 10 11
Int                  : 21
IntType              : 11
LangType             : 
LenOp                : 23 23 24 24 25 25
NextLine             : 
On                   : 24 25
OpenStruct           : 12 13
Pow                  : 18 19
Show                 : 5 6 7 8
Splitter             : 14 15
String               : 13 20 23 24 25
StringType           : 9
Term                 : 1 2
VarName              : 8 9 10 11 19 25
error                : 

Nonterminals, with rules where they appear

Alph                 : 7 10 24
Integer              : 5 11 18
ShowVal              : 4
StringConcat         : 6 9 14 15 15 16
StringLen            : 22
StringList           : 12 14
StringPow            : 16 17 18 19
VarAssign            : 3
expression           : 1 2
expressions          : 1 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (1) expressions -> . expressions expression Term
    (2) expressions -> . expression Term
    (3) expression -> . VarAssign
    (4) expression -> . ShowVal
    (9) VarAssign -> . StringType VarName Eq StringConcat
    (10) VarAssign -> . AlphType VarName Eq Alph
    (11) VarAssign -> . IntType VarName Eq Integer
    (5) ShowVal -> . Show Integer
    (6) ShowVal -> . Show StringConcat
    (7) ShowVal -> . Show Alph
    (8) ShowVal -> . Show VarName

    StringType      shift and go to state 5
    AlphType        shift and go to state 6
    IntType         shift and go to state 7
    Show            shift and go to state 8

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    VarAssign                      shift and go to state 3
    ShowVal                        shift and go to state 4

state 1

    (0) S' -> expressions .
    (1) expressions -> expressions . expression Term
    (3) expression -> . VarAssign
    (4) expression -> . ShowVal
    (9) VarAssign -> . StringType VarName Eq StringConcat
    (10) VarAssign -> . AlphType VarName Eq Alph
    (11) VarAssign -> . IntType VarName Eq Integer
    (5) ShowVal -> . Show Integer
    (6) ShowVal -> . Show StringConcat
    (7) ShowVal -> . Show Alph
    (8) ShowVal -> . Show VarName

    StringType      shift and go to state 5
    AlphType        shift and go to state 6
    IntType         shift and go to state 7
    Show            shift and go to state 8

    expression                     shift and go to state 9
    VarAssign                      shift and go to state 3
    ShowVal                        shift and go to state 4

state 2

    (2) expressions -> expression . Term

    Term            shift and go to state 10


state 3

    (3) expression -> VarAssign .

    Term            reduce using rule 3 (expression -> VarAssign .)


state 4

    (4) expression -> ShowVal .

    Term            reduce using rule 4 (expression -> ShowVal .)


state 5

    (9) VarAssign -> StringType . VarName Eq StringConcat

    VarName         shift and go to state 11


state 6

    (10) VarAssign -> AlphType . VarName Eq Alph

    VarName         shift and go to state 12


state 7

    (11) VarAssign -> IntType . VarName Eq Integer

    VarName         shift and go to state 13


state 8

    (5) ShowVal -> Show . Integer
    (6) ShowVal -> Show . StringConcat
    (7) ShowVal -> Show . Alph
    (8) ShowVal -> Show . VarName
    (21) Integer -> . Int
    (22) Integer -> . StringLen
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (12) Alph -> . OpenStruct StringList CloseStruct
    (13) Alph -> . OpenStruct String CloseStruct
    (23) StringLen -> . LenOp String LenOp
    (24) StringLen -> . LenOp String On Alph LenOp
    (25) StringLen -> . LenOp String On VarName LenOp
    (18) StringPow -> . StringPow Pow Integer
    (19) StringPow -> . StringPow Pow VarName
    (20) StringPow -> . String

    VarName         shift and go to state 17
    Int             shift and go to state 18
    OpenStruct      shift and go to state 21
    LenOp           shift and go to state 23
    String          shift and go to state 22

    Integer                        shift and go to state 14
    StringConcat                   shift and go to state 15
    Alph                           shift and go to state 16
    StringLen                      shift and go to state 19
    StringPow                      shift and go to state 20

state 9

    (1) expressions -> expressions expression . Term

    Term            shift and go to state 24


state 10

    (2) expressions -> expression Term .

    StringType      reduce using rule 2 (expressions -> expression Term .)
    AlphType        reduce using rule 2 (expressions -> expression Term .)
    IntType         reduce using rule 2 (expressions -> expression Term .)
    Show            reduce using rule 2 (expressions -> expression Term .)
    $end            reduce using rule 2 (expressions -> expression Term .)


state 11

    (9) VarAssign -> StringType VarName . Eq StringConcat

    Eq              shift and go to state 25


state 12

    (10) VarAssign -> AlphType VarName . Eq Alph

    Eq              shift and go to state 26


state 13

    (11) VarAssign -> IntType VarName . Eq Integer

    Eq              shift and go to state 27


state 14

    (5) ShowVal -> Show Integer .

    Term            reduce using rule 5 (ShowVal -> Show Integer .)


state 15

    (6) ShowVal -> Show StringConcat .
    (16) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 6 (ShowVal -> Show StringConcat .)
    Concat          shift and go to state 28


state 16

    (7) ShowVal -> Show Alph .

    Term            reduce using rule 7 (ShowVal -> Show Alph .)


state 17

    (8) ShowVal -> Show VarName .

    Term            reduce using rule 8 (ShowVal -> Show VarName .)


state 18

    (21) Integer -> Int .

    Term            reduce using rule 21 (Integer -> Int .)
    Pow             reduce using rule 21 (Integer -> Int .)
    Concat          reduce using rule 21 (Integer -> Int .)
    Splitter        reduce using rule 21 (Integer -> Int .)
    CloseStruct     reduce using rule 21 (Integer -> Int .)


state 19

    (22) Integer -> StringLen .

    Term            reduce using rule 22 (Integer -> StringLen .)
    Pow             reduce using rule 22 (Integer -> StringLen .)
    Concat          reduce using rule 22 (Integer -> StringLen .)
    Splitter        reduce using rule 22 (Integer -> StringLen .)
    CloseStruct     reduce using rule 22 (Integer -> StringLen .)


state 20

    (17) StringConcat -> StringPow .
    (18) StringPow -> StringPow . Pow Integer
    (19) StringPow -> StringPow . Pow VarName

    Concat          reduce using rule 17 (StringConcat -> StringPow .)
    Term            reduce using rule 17 (StringConcat -> StringPow .)
    Splitter        reduce using rule 17 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 17 (StringConcat -> StringPow .)
    Pow             shift and go to state 29


state 21

    (12) Alph -> OpenStruct . StringList CloseStruct
    (13) Alph -> OpenStruct . String CloseStruct
    (14) StringList -> . StringList Splitter StringConcat
    (15) StringList -> . StringConcat Splitter StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow Integer
    (19) StringPow -> . StringPow Pow VarName
    (20) StringPow -> . String

    String          shift and go to state 31

    StringList                     shift and go to state 30
    StringConcat                   shift and go to state 32
    StringPow                      shift and go to state 20

state 22

    (20) StringPow -> String .

    Pow             reduce using rule 20 (StringPow -> String .)
    Concat          reduce using rule 20 (StringPow -> String .)
    Term            reduce using rule 20 (StringPow -> String .)
    Splitter        reduce using rule 20 (StringPow -> String .)
    CloseStruct     reduce using rule 20 (StringPow -> String .)


state 23

    (23) StringLen -> LenOp . String LenOp
    (24) StringLen -> LenOp . String On Alph LenOp
    (25) StringLen -> LenOp . String On VarName LenOp

    String          shift and go to state 33


state 24

    (1) expressions -> expressions expression Term .

    StringType      reduce using rule 1 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 1 (expressions -> expressions expression Term .)
    IntType         reduce using rule 1 (expressions -> expressions expression Term .)
    Show            reduce using rule 1 (expressions -> expressions expression Term .)
    $end            reduce using rule 1 (expressions -> expressions expression Term .)


state 25

    (9) VarAssign -> StringType VarName Eq . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow Integer
    (19) StringPow -> . StringPow Pow VarName
    (20) StringPow -> . String

    String          shift and go to state 22

    StringConcat                   shift and go to state 34
    StringPow                      shift and go to state 20

state 26

    (10) VarAssign -> AlphType VarName Eq . Alph
    (12) Alph -> . OpenStruct StringList CloseStruct
    (13) Alph -> . OpenStruct String CloseStruct

    OpenStruct      shift and go to state 21

    Alph                           shift and go to state 35

state 27

    (11) VarAssign -> IntType VarName Eq . Integer
    (21) Integer -> . Int
    (22) Integer -> . StringLen
    (23) StringLen -> . LenOp String LenOp
    (24) StringLen -> . LenOp String On Alph LenOp
    (25) StringLen -> . LenOp String On VarName LenOp

    Int             shift and go to state 18
    LenOp           shift and go to state 23

    Integer                        shift and go to state 36
    StringLen                      shift and go to state 19

state 28

    (16) StringConcat -> StringConcat Concat . StringPow
    (18) StringPow -> . StringPow Pow Integer
    (19) StringPow -> . StringPow Pow VarName
    (20) StringPow -> . String

    String          shift and go to state 22

    StringPow                      shift and go to state 37

state 29

    (18) StringPow -> StringPow Pow . Integer
    (19) StringPow -> StringPow Pow . VarName
    (21) Integer -> . Int
    (22) Integer -> . StringLen
    (23) StringLen -> . LenOp String LenOp
    (24) StringLen -> . LenOp String On Alph LenOp
    (25) StringLen -> . LenOp String On VarName LenOp

    VarName         shift and go to state 39
    Int             shift and go to state 18
    LenOp           shift and go to state 23

    Integer                        shift and go to state 38
    StringLen                      shift and go to state 19

state 30

    (12) Alph -> OpenStruct StringList . CloseStruct
    (14) StringList -> StringList . Splitter StringConcat

    CloseStruct     shift and go to state 40
    Splitter        shift and go to state 41


state 31

    (13) Alph -> OpenStruct String . CloseStruct
    (20) StringPow -> String .

    CloseStruct     shift and go to state 42
    Pow             reduce using rule 20 (StringPow -> String .)
    Splitter        reduce using rule 20 (StringPow -> String .)
    Concat          reduce using rule 20 (StringPow -> String .)


state 32

    (15) StringList -> StringConcat . Splitter StringConcat
    (16) StringConcat -> StringConcat . Concat StringPow

    Splitter        shift and go to state 43
    Concat          shift and go to state 28


state 33

    (23) StringLen -> LenOp String . LenOp
    (24) StringLen -> LenOp String . On Alph LenOp
    (25) StringLen -> LenOp String . On VarName LenOp

    LenOp           shift and go to state 44
    On              shift and go to state 45


state 34

    (9) VarAssign -> StringType VarName Eq StringConcat .
    (16) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 9 (VarAssign -> StringType VarName Eq StringConcat .)
    Concat          shift and go to state 28


state 35

    (10) VarAssign -> AlphType VarName Eq Alph .

    Term            reduce using rule 10 (VarAssign -> AlphType VarName Eq Alph .)


state 36

    (11) VarAssign -> IntType VarName Eq Integer .

    Term            reduce using rule 11 (VarAssign -> IntType VarName Eq Integer .)


state 37

    (16) StringConcat -> StringConcat Concat StringPow .
    (18) StringPow -> StringPow . Pow Integer
    (19) StringPow -> StringPow . Pow VarName

    Concat          reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 29


state 38

    (18) StringPow -> StringPow Pow Integer .

    Pow             reduce using rule 18 (StringPow -> StringPow Pow Integer .)
    Concat          reduce using rule 18 (StringPow -> StringPow Pow Integer .)
    Term            reduce using rule 18 (StringPow -> StringPow Pow Integer .)
    Splitter        reduce using rule 18 (StringPow -> StringPow Pow Integer .)
    CloseStruct     reduce using rule 18 (StringPow -> StringPow Pow Integer .)


state 39

    (19) StringPow -> StringPow Pow VarName .

    Pow             reduce using rule 19 (StringPow -> StringPow Pow VarName .)
    Concat          reduce using rule 19 (StringPow -> StringPow Pow VarName .)
    Term            reduce using rule 19 (StringPow -> StringPow Pow VarName .)
    Splitter        reduce using rule 19 (StringPow -> StringPow Pow VarName .)
    CloseStruct     reduce using rule 19 (StringPow -> StringPow Pow VarName .)


state 40

    (12) Alph -> OpenStruct StringList CloseStruct .

    Term            reduce using rule 12 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 12 (Alph -> OpenStruct StringList CloseStruct .)


state 41

    (14) StringList -> StringList Splitter . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow Integer
    (19) StringPow -> . StringPow Pow VarName
    (20) StringPow -> . String

    String          shift and go to state 22

    StringConcat                   shift and go to state 46
    StringPow                      shift and go to state 20

state 42

    (13) Alph -> OpenStruct String CloseStruct .

    Term            reduce using rule 13 (Alph -> OpenStruct String CloseStruct .)
    LenOp           reduce using rule 13 (Alph -> OpenStruct String CloseStruct .)


state 43

    (15) StringList -> StringConcat Splitter . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (18) StringPow -> . StringPow Pow Integer
    (19) StringPow -> . StringPow Pow VarName
    (20) StringPow -> . String

    String          shift and go to state 22

    StringConcat                   shift and go to state 47
    StringPow                      shift and go to state 20

state 44

    (23) StringLen -> LenOp String LenOp .

    Term            reduce using rule 23 (StringLen -> LenOp String LenOp .)
    Pow             reduce using rule 23 (StringLen -> LenOp String LenOp .)
    Concat          reduce using rule 23 (StringLen -> LenOp String LenOp .)
    Splitter        reduce using rule 23 (StringLen -> LenOp String LenOp .)
    CloseStruct     reduce using rule 23 (StringLen -> LenOp String LenOp .)


state 45

    (24) StringLen -> LenOp String On . Alph LenOp
    (25) StringLen -> LenOp String On . VarName LenOp
    (12) Alph -> . OpenStruct StringList CloseStruct
    (13) Alph -> . OpenStruct String CloseStruct

    VarName         shift and go to state 49
    OpenStruct      shift and go to state 21

    Alph                           shift and go to state 48

state 46

    (14) StringList -> StringList Splitter StringConcat .
    (16) StringConcat -> StringConcat . Concat StringPow

    CloseStruct     reduce using rule 14 (StringList -> StringList Splitter StringConcat .)
    Splitter        reduce using rule 14 (StringList -> StringList Splitter StringConcat .)
    Concat          shift and go to state 28


state 47

    (15) StringList -> StringConcat Splitter StringConcat .
    (16) StringConcat -> StringConcat . Concat StringPow

    CloseStruct     reduce using rule 15 (StringList -> StringConcat Splitter StringConcat .)
    Splitter        reduce using rule 15 (StringList -> StringConcat Splitter StringConcat .)
    Concat          shift and go to state 28


state 48

    (24) StringLen -> LenOp String On Alph . LenOp

    LenOp           shift and go to state 50


state 49

    (25) StringLen -> LenOp String On VarName . LenOp

    LenOp           shift and go to state 51


state 50

    (24) StringLen -> LenOp String On Alph LenOp .

    Term            reduce using rule 24 (StringLen -> LenOp String On Alph LenOp .)
    Pow             reduce using rule 24 (StringLen -> LenOp String On Alph LenOp .)
    Concat          reduce using rule 24 (StringLen -> LenOp String On Alph LenOp .)
    Splitter        reduce using rule 24 (StringLen -> LenOp String On Alph LenOp .)
    CloseStruct     reduce using rule 24 (StringLen -> LenOp String On Alph LenOp .)


state 51

    (25) StringLen -> LenOp String On VarName LenOp .

    Term            reduce using rule 25 (StringLen -> LenOp String On VarName LenOp .)
    Pow             reduce using rule 25 (StringLen -> LenOp String On VarName LenOp .)
    Concat          reduce using rule 25 (StringLen -> LenOp String On VarName LenOp .)
    Splitter        reduce using rule 25 (StringLen -> LenOp String On VarName LenOp .)
    CloseStruct     reduce using rule 25 (StringLen -> LenOp String On VarName LenOp .)

