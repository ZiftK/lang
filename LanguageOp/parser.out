Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CommentText
    EndComment
    InitComment
    NextLine
    SubString
    SuchThat

Grammar

Rule 0     S' -> expressions
Rule 1     AlphExpression -> AlphConcat
Rule 2     BooleanExpression -> BooleanOr
Rule 3     IntExpression -> StringLen
Rule 4     IntExpression -> AddSub
Rule 5     LangExpression -> StringPrefix
Rule 6     LangExpression -> StringSuffix
Rule 7     LangExpression -> AlphKleeneC
Rule 8     LangExpression -> AlphPositiveC
Rule 9     LangExpression -> LangKleeneC
Rule 10    LangExpression -> LangPositiveC
Rule 11    LangExpression -> LangUnion
Rule 12    LangExpression -> StringSubSequence
Rule 13    StringExpression -> StringConcat
Rule 14    BooleanOr -> BooleanOr Or BooleanAnd
Rule 15    BooleanOr -> BooleanAnd
Rule 16    StringLen -> LenOp StringExpression LenOp
Rule 17    StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 18    StringConcat -> StringConcat Concat StringPow
Rule 19    StringConcat -> StringPow
Rule 20    AlphConcat -> AlphConcat Concat AlphPow
Rule 21    AlphConcat -> AlphPow
Rule 22    expressions -> expressions expression Term
Rule 23    expressions -> expression Term
Rule 24    BooleanAnd -> BooleanAnd And BooleanGroup
Rule 25    BooleanAnd -> BooleanGroup
Rule 26    LangUnion -> LangUnion Add LangConcat
Rule 27    LangUnion -> LangConcat
Rule 28    StringPow -> StringPow Pow IntExpression
Rule 29    StringPow -> StringGroup
Rule 30    expression -> IntExpression
Rule 31    expression -> AlphExpression
Rule 32    expression -> StringExpression
Rule 33    expression -> LangExpression
Rule 34    expression -> BooleanExpression
Rule 35    expression -> ShowVal
Rule 36    expression -> Assigns
Rule 37    expression -> Declares
Rule 38    AddSub -> AddSub Add MultDiv
Rule 39    AddSub -> AddSub Sub MultDiv
Rule 40    AddSub -> MultDiv
Rule 41    AlphPow -> AlphPow Pow IntExpression
Rule 42    AlphPow -> AlphGroup
Rule 43    StringGroup -> LGroup StringExpression RGroup
Rule 44    StringGroup -> String
Rule 45    StringGroup -> VString
Rule 46    ShowVal -> Show expression
Rule 47    ShowVal -> ShowInLine expression
Rule 48    BooleanGroup -> LGroup BooleanExpression RGroup
Rule 49    BooleanGroup -> Boolean
Rule 50    BooleanGroup -> VBoolean
Rule 51    LangConcat -> LangConcat Concat LangGroup
Rule 52    LangConcat -> LangGroup
Rule 53    AlphGroup -> LGroup AlphExpression RGroup
Rule 54    AlphGroup -> Alph
Rule 55    AlphGroup -> VAlph
Rule 56    MultDiv -> MultDiv Concat IntPow
Rule 57    MultDiv -> MultDiv Div IntPow
Rule 58    MultDiv -> IntPow
Rule 59    Declares -> StringDeclare
Rule 60    Declares -> IntDeclare
Rule 61    Declares -> AlphDeclare
Rule 62    Declares -> LangDeclare
Rule 63    Declares -> BooleanDeclare
Rule 64    LangGroup -> LGroup LangExpression RGroup
Rule 65    LangGroup -> VLang
Rule 66    Boolean -> True
Rule 67    Boolean -> False
Rule 68    Alph -> OpenStruct StringList CloseStruct
Rule 69    Alph -> OpenStruct StringExpression CloseStruct
Rule 70    Assigns -> StringAssign
Rule 71    Assigns -> IntAssign
Rule 72    Assigns -> AlphAssign
Rule 73    Assigns -> LangAssign
Rule 74    Assigns -> BooleanAssign
Rule 75    AlphKleeneC -> AlphExpression KleeneC IntExpression
Rule 76    IntPow -> IntPow Pow Unary
Rule 77    IntPow -> Unary
Rule 78    StringList -> StringList Splitter StringExpression
Rule 79    StringList -> StringExpression Splitter StringExpression
Rule 80    StringDeclare -> StringType VarName
Rule 81    StringDeclare -> StringType VarName Eq StringExpression
Rule 82    StringDeclare -> StringDeclare Splitter VarName
Rule 83    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 84    AlphPositiveC -> AlphExpression PositiveC IntExpression
Rule 85    Unary -> Sub Primary
Rule 86    Unary -> Primary
Rule 87    LangKleeneC -> LangExpression KleeneC IntExpression
Rule 88    LangPositiveC -> LangExpression PositiveC IntExpression
Rule 89    Primary -> LGroup IntExpression RGroup
Rule 90    Primary -> VInt
Rule 91    Primary -> Int
Rule 92    StringPrefix -> Prefix StringExpression
Rule 93    StringAssign -> VString Eq StringExpression
Rule 94    StringSuffix -> Suffix StringExpression
Rule 95    IntDeclare -> IntType VarName
Rule 96    IntDeclare -> IntType VarName Eq IntExpression
Rule 97    IntDeclare -> IntDeclare Splitter VarName
Rule 98    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 99    StringSubSequence -> SubSequence StringExpression
Rule 100   IntAssign -> VarName Eq IntExpression
Rule 101   AlphDeclare -> AlphType VarName
Rule 102   AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 103   AlphDeclare -> AlphDeclare Splitter VarName
Rule 104   AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 105   AlphAssign -> VarName Eq AlphExpression
Rule 106   LangDeclare -> LangType VarName
Rule 107   LangDeclare -> LangType VarName Eq LangExpression
Rule 108   LangDeclare -> LangDeclare Splitter VarName
Rule 109   LangDeclare -> LangDeclare Splitter VarName Eq LangExpression
Rule 110   LangAssign -> VLang Eq LangExpression
Rule 111   BooleanDeclare -> BooleanType VarName
Rule 112   BooleanDeclare -> BooleanType VarName Eq BooleanExpression
Rule 113   BooleanDeclare -> BooleanDeclare Splitter VarName
Rule 114   BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression
Rule 115   BooleanAssign -> VBoolean Eq BooleanExpression

Terminals, with rules where they appear

Add                  : 26 38
AlphType             : 101 102
And                  : 24
BooleanType          : 111 112
CloseStruct          : 68 69
CommentText          : 
Concat               : 18 20 51 56
Div                  : 57
EndComment           : 
Eq                   : 81 83 93 96 98 100 102 104 105 107 109 110 112 114 115
False                : 67
InitComment          : 
Int                  : 91
IntType              : 95 96
KleeneC              : 75 87
LGroup               : 43 48 53 64 89
LangType             : 106 107
LenOp                : 16 16 17 17
NextLine             : 
On                   : 17
OpenStruct           : 68 69
Or                   : 14
PositiveC            : 84 88
Pow                  : 28 41 76
Prefix               : 92
RGroup               : 43 48 53 64 89
Show                 : 46
ShowInLine           : 47
Splitter             : 78 79 82 83 97 98 103 104 108 109 113 114
String               : 44
StringType           : 80 81
Sub                  : 39 85
SubSequence          : 99
SubString            : 
SuchThat             : 
Suffix               : 94
Term                 : 22 23
True                 : 66
VAlph                : 55
VBoolean             : 50 115
VInt                 : 90
VLang                : 65 110
VString              : 45 93
VarName              : 80 81 82 83 95 96 97 98 100 101 102 103 104 105 106 107 108 109 111 112 113 114
error                : 

Nonterminals, with rules where they appear

AddSub               : 4 38 39
Alph                 : 54
AlphAssign           : 72
AlphConcat           : 1 20
AlphDeclare          : 61 103 104
AlphExpression       : 17 31 53 75 84 102 104 105
AlphGroup            : 42
AlphKleeneC          : 7
AlphPositiveC        : 8
AlphPow              : 20 21 41
Assigns              : 36
Boolean              : 49
BooleanAnd           : 14 15 24
BooleanAssign        : 74
BooleanDeclare       : 63 113 114
BooleanExpression    : 34 48 112 114 115
BooleanGroup         : 24 25
BooleanOr            : 2 14
Declares             : 37
IntAssign            : 71
IntDeclare           : 60 97 98
IntExpression        : 28 30 41 75 84 87 88 89 96 98 100
IntPow               : 56 57 58 76
LangAssign           : 73
LangConcat           : 26 27 51
LangDeclare          : 62 108 109
LangExpression       : 33 64 87 88 107 109 110
LangGroup            : 51 52
LangKleeneC          : 9
LangPositiveC        : 10
LangUnion            : 11 26
MultDiv              : 38 39 40 56 57
Primary              : 85 86
ShowVal              : 35
StringAssign         : 70
StringConcat         : 13 18
StringDeclare        : 59 82 83
StringExpression     : 16 17 32 43 69 78 79 79 81 83 92 93 94 99
StringGroup          : 29
StringLen            : 3
StringList           : 68 78
StringPow            : 18 19 28
StringPrefix         : 5
StringSubSequence    : 12
StringSuffix         : 6
Unary                : 76 77
expression           : 22 23 46 47
expressions          : 22 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (22) expressions -> . expressions expression Term
    (23) expressions -> . expression Term
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . BooleanExpression
    (35) expression -> . ShowVal
    (36) expression -> . Assigns
    (37) expression -> . Declares
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (13) StringExpression -> . StringConcat
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (2) BooleanExpression -> . BooleanOr
    (46) ShowVal -> . Show expression
    (47) ShowVal -> . ShowInLine expression
    (70) Assigns -> . StringAssign
    (71) Assigns -> . IntAssign
    (72) Assigns -> . AlphAssign
    (73) Assigns -> . LangAssign
    (74) Assigns -> . BooleanAssign
    (59) Declares -> . StringDeclare
    (60) Declares -> . IntDeclare
    (61) Declares -> . AlphDeclare
    (62) Declares -> . LangDeclare
    (63) Declares -> . BooleanDeclare
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (93) StringAssign -> . VString Eq StringExpression
    (100) IntAssign -> . VarName Eq IntExpression
    (105) AlphAssign -> . VarName Eq AlphExpression
    (110) LangAssign -> . VLang Eq LangExpression
    (115) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (95) IntDeclare -> . IntType VarName
    (96) IntDeclare -> . IntType VarName Eq IntExpression
    (97) IntDeclare -> . IntDeclare Splitter VarName
    (98) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (101) AlphDeclare -> . AlphType VarName
    (102) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (103) AlphDeclare -> . AlphDeclare Splitter VarName
    (104) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (106) LangDeclare -> . LangType VarName
    (107) LangDeclare -> . LangType VarName Eq LangExpression
    (108) LangDeclare -> . LangDeclare Splitter VarName
    (109) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (111) BooleanDeclare -> . BooleanType VarName
    (112) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (113) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (114) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 24
    ShowInLine      shift and go to state 25
    LenOp           shift and go to state 36
    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    VString         shift and go to state 46
    VarName         shift and go to state 47
    VLang           shift and go to state 48
    VBoolean        shift and go to state 49
    StringType      shift and go to state 50
    IntType         shift and go to state 51
    AlphType        shift and go to state 52
    LangType        shift and go to state 53
    BooleanType     shift and go to state 54
    LGroup          shift and go to state 61
    VAlph           shift and go to state 63
    String          shift and go to state 64
    Sub             shift and go to state 38
    OpenStruct      shift and go to state 67
    True            shift and go to state 68
    False           shift and go to state 69
    VInt            shift and go to state 70
    Int             shift and go to state 71

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    BooleanOr                      shift and go to state 23
    StringAssign                   shift and go to state 26
    IntAssign                      shift and go to state 27
    AlphAssign                     shift and go to state 28
    LangAssign                     shift and go to state 29
    BooleanAssign                  shift and go to state 30
    StringDeclare                  shift and go to state 31
    IntDeclare                     shift and go to state 32
    AlphDeclare                    shift and go to state 33
    LangDeclare                    shift and go to state 34
    BooleanDeclare                 shift and go to state 35
    MultDiv                        shift and go to state 37
    AlphPow                        shift and go to state 39
    StringPow                      shift and go to state 40
    LangConcat                     shift and go to state 43
    BooleanAnd                     shift and go to state 45
    IntPow                         shift and go to state 55
    AlphGroup                      shift and go to state 56
    StringGroup                    shift and go to state 57
    LangGroup                      shift and go to state 58
    BooleanGroup                   shift and go to state 59
    Unary                          shift and go to state 60
    Alph                           shift and go to state 62
    Boolean                        shift and go to state 65
    Primary                        shift and go to state 66

state 1

    (0) S' -> expressions .
    (22) expressions -> expressions . expression Term
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . BooleanExpression
    (35) expression -> . ShowVal
    (36) expression -> . Assigns
    (37) expression -> . Declares
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (13) StringExpression -> . StringConcat
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (2) BooleanExpression -> . BooleanOr
    (46) ShowVal -> . Show expression
    (47) ShowVal -> . ShowInLine expression
    (70) Assigns -> . StringAssign
    (71) Assigns -> . IntAssign
    (72) Assigns -> . AlphAssign
    (73) Assigns -> . LangAssign
    (74) Assigns -> . BooleanAssign
    (59) Declares -> . StringDeclare
    (60) Declares -> . IntDeclare
    (61) Declares -> . AlphDeclare
    (62) Declares -> . LangDeclare
    (63) Declares -> . BooleanDeclare
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (93) StringAssign -> . VString Eq StringExpression
    (100) IntAssign -> . VarName Eq IntExpression
    (105) AlphAssign -> . VarName Eq AlphExpression
    (110) LangAssign -> . VLang Eq LangExpression
    (115) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (95) IntDeclare -> . IntType VarName
    (96) IntDeclare -> . IntType VarName Eq IntExpression
    (97) IntDeclare -> . IntDeclare Splitter VarName
    (98) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (101) AlphDeclare -> . AlphType VarName
    (102) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (103) AlphDeclare -> . AlphDeclare Splitter VarName
    (104) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (106) LangDeclare -> . LangType VarName
    (107) LangDeclare -> . LangType VarName Eq LangExpression
    (108) LangDeclare -> . LangDeclare Splitter VarName
    (109) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (111) BooleanDeclare -> . BooleanType VarName
    (112) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (113) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (114) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 24
    ShowInLine      shift and go to state 25
    LenOp           shift and go to state 36
    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    VString         shift and go to state 46
    VarName         shift and go to state 47
    VLang           shift and go to state 48
    VBoolean        shift and go to state 49
    StringType      shift and go to state 50
    IntType         shift and go to state 51
    AlphType        shift and go to state 52
    LangType        shift and go to state 53
    BooleanType     shift and go to state 54
    LGroup          shift and go to state 61
    VAlph           shift and go to state 63
    String          shift and go to state 64
    Sub             shift and go to state 38
    OpenStruct      shift and go to state 67
    True            shift and go to state 68
    False           shift and go to state 69
    VInt            shift and go to state 70
    Int             shift and go to state 71

    expression                     shift and go to state 72
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    BooleanOr                      shift and go to state 23
    StringAssign                   shift and go to state 26
    IntAssign                      shift and go to state 27
    AlphAssign                     shift and go to state 28
    LangAssign                     shift and go to state 29
    BooleanAssign                  shift and go to state 30
    StringDeclare                  shift and go to state 31
    IntDeclare                     shift and go to state 32
    AlphDeclare                    shift and go to state 33
    LangDeclare                    shift and go to state 34
    BooleanDeclare                 shift and go to state 35
    MultDiv                        shift and go to state 37
    AlphPow                        shift and go to state 39
    StringPow                      shift and go to state 40
    LangConcat                     shift and go to state 43
    BooleanAnd                     shift and go to state 45
    IntPow                         shift and go to state 55
    AlphGroup                      shift and go to state 56
    StringGroup                    shift and go to state 57
    LangGroup                      shift and go to state 58
    BooleanGroup                   shift and go to state 59
    Unary                          shift and go to state 60
    Alph                           shift and go to state 62
    Boolean                        shift and go to state 65
    Primary                        shift and go to state 66

state 2

    (23) expressions -> expression . Term

    Term            shift and go to state 73


state 3

    (30) expression -> IntExpression .

    Term            reduce using rule 30 (expression -> IntExpression .)


state 4

    (31) expression -> AlphExpression .
    (75) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (84) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    Term            reduce using rule 31 (expression -> AlphExpression .)
    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 5

    (32) expression -> StringExpression .

    Term            reduce using rule 32 (expression -> StringExpression .)


state 6

    (33) expression -> LangExpression .
    (87) LangKleeneC -> LangExpression . KleeneC IntExpression
    (88) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 33 (expression -> LangExpression .)
    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 7

    (34) expression -> BooleanExpression .

    Term            reduce using rule 34 (expression -> BooleanExpression .)


state 8

    (35) expression -> ShowVal .

    Term            reduce using rule 35 (expression -> ShowVal .)


state 9

    (36) expression -> Assigns .

    Term            reduce using rule 36 (expression -> Assigns .)


state 10

    (37) expression -> Declares .

    Term            reduce using rule 37 (expression -> Declares .)


state 11

    (3) IntExpression -> StringLen .

    Term            reduce using rule 3 (IntExpression -> StringLen .)
    RGroup          reduce using rule 3 (IntExpression -> StringLen .)
    KleeneC         reduce using rule 3 (IntExpression -> StringLen .)
    PositiveC       reduce using rule 3 (IntExpression -> StringLen .)
    Splitter        reduce using rule 3 (IntExpression -> StringLen .)
    Pow             reduce using rule 3 (IntExpression -> StringLen .)
    Concat          reduce using rule 3 (IntExpression -> StringLen .)
    LenOp           reduce using rule 3 (IntExpression -> StringLen .)
    On              reduce using rule 3 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 3 (IntExpression -> StringLen .)


state 12

    (4) IntExpression -> AddSub .
    (38) AddSub -> AddSub . Add MultDiv
    (39) AddSub -> AddSub . Sub MultDiv

    Term            reduce using rule 4 (IntExpression -> AddSub .)
    RGroup          reduce using rule 4 (IntExpression -> AddSub .)
    KleeneC         reduce using rule 4 (IntExpression -> AddSub .)
    PositiveC       reduce using rule 4 (IntExpression -> AddSub .)
    Splitter        reduce using rule 4 (IntExpression -> AddSub .)
    Pow             reduce using rule 4 (IntExpression -> AddSub .)
    Concat          reduce using rule 4 (IntExpression -> AddSub .)
    LenOp           reduce using rule 4 (IntExpression -> AddSub .)
    On              reduce using rule 4 (IntExpression -> AddSub .)
    CloseStruct     reduce using rule 4 (IntExpression -> AddSub .)
    Add             shift and go to state 78
    Sub             shift and go to state 79


state 13

    (1) AlphExpression -> AlphConcat .
    (20) AlphConcat -> AlphConcat . Concat AlphPow

    KleeneC         reduce using rule 1 (AlphExpression -> AlphConcat .)
    PositiveC       reduce using rule 1 (AlphExpression -> AlphConcat .)
    Term            reduce using rule 1 (AlphExpression -> AlphConcat .)
    RGroup          reduce using rule 1 (AlphExpression -> AlphConcat .)
    LenOp           reduce using rule 1 (AlphExpression -> AlphConcat .)
    Splitter        reduce using rule 1 (AlphExpression -> AlphConcat .)
    Concat          shift and go to state 80


state 14

    (13) StringExpression -> StringConcat .
    (18) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 13 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 13 (StringExpression -> StringConcat .)
    On              reduce using rule 13 (StringExpression -> StringConcat .)
    KleeneC         reduce using rule 13 (StringExpression -> StringConcat .)
    PositiveC       reduce using rule 13 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 13 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 13 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 13 (StringExpression -> StringConcat .)
    Concat          shift and go to state 81


state 15

    (5) LangExpression -> StringPrefix .

    KleeneC         reduce using rule 5 (LangExpression -> StringPrefix .)
    PositiveC       reduce using rule 5 (LangExpression -> StringPrefix .)
    Term            reduce using rule 5 (LangExpression -> StringPrefix .)
    RGroup          reduce using rule 5 (LangExpression -> StringPrefix .)
    Splitter        reduce using rule 5 (LangExpression -> StringPrefix .)


state 16

    (6) LangExpression -> StringSuffix .

    KleeneC         reduce using rule 6 (LangExpression -> StringSuffix .)
    PositiveC       reduce using rule 6 (LangExpression -> StringSuffix .)
    Term            reduce using rule 6 (LangExpression -> StringSuffix .)
    RGroup          reduce using rule 6 (LangExpression -> StringSuffix .)
    Splitter        reduce using rule 6 (LangExpression -> StringSuffix .)


state 17

    (7) LangExpression -> AlphKleeneC .

    KleeneC         reduce using rule 7 (LangExpression -> AlphKleeneC .)
    PositiveC       reduce using rule 7 (LangExpression -> AlphKleeneC .)
    Term            reduce using rule 7 (LangExpression -> AlphKleeneC .)
    RGroup          reduce using rule 7 (LangExpression -> AlphKleeneC .)
    Splitter        reduce using rule 7 (LangExpression -> AlphKleeneC .)


state 18

    (8) LangExpression -> AlphPositiveC .

    KleeneC         reduce using rule 8 (LangExpression -> AlphPositiveC .)
    PositiveC       reduce using rule 8 (LangExpression -> AlphPositiveC .)
    Term            reduce using rule 8 (LangExpression -> AlphPositiveC .)
    RGroup          reduce using rule 8 (LangExpression -> AlphPositiveC .)
    Splitter        reduce using rule 8 (LangExpression -> AlphPositiveC .)


state 19

    (9) LangExpression -> LangKleeneC .

    KleeneC         reduce using rule 9 (LangExpression -> LangKleeneC .)
    PositiveC       reduce using rule 9 (LangExpression -> LangKleeneC .)
    Term            reduce using rule 9 (LangExpression -> LangKleeneC .)
    RGroup          reduce using rule 9 (LangExpression -> LangKleeneC .)
    Splitter        reduce using rule 9 (LangExpression -> LangKleeneC .)


state 20

    (10) LangExpression -> LangPositiveC .

    KleeneC         reduce using rule 10 (LangExpression -> LangPositiveC .)
    PositiveC       reduce using rule 10 (LangExpression -> LangPositiveC .)
    Term            reduce using rule 10 (LangExpression -> LangPositiveC .)
    RGroup          reduce using rule 10 (LangExpression -> LangPositiveC .)
    Splitter        reduce using rule 10 (LangExpression -> LangPositiveC .)


state 21

    (11) LangExpression -> LangUnion .
    (26) LangUnion -> LangUnion . Add LangConcat

    KleeneC         reduce using rule 11 (LangExpression -> LangUnion .)
    PositiveC       reduce using rule 11 (LangExpression -> LangUnion .)
    Term            reduce using rule 11 (LangExpression -> LangUnion .)
    RGroup          reduce using rule 11 (LangExpression -> LangUnion .)
    Splitter        reduce using rule 11 (LangExpression -> LangUnion .)
    Add             shift and go to state 82


state 22

    (12) LangExpression -> StringSubSequence .

    KleeneC         reduce using rule 12 (LangExpression -> StringSubSequence .)
    PositiveC       reduce using rule 12 (LangExpression -> StringSubSequence .)
    Term            reduce using rule 12 (LangExpression -> StringSubSequence .)
    RGroup          reduce using rule 12 (LangExpression -> StringSubSequence .)
    Splitter        reduce using rule 12 (LangExpression -> StringSubSequence .)


state 23

    (2) BooleanExpression -> BooleanOr .
    (14) BooleanOr -> BooleanOr . Or BooleanAnd

    Term            reduce using rule 2 (BooleanExpression -> BooleanOr .)
    RGroup          reduce using rule 2 (BooleanExpression -> BooleanOr .)
    Splitter        reduce using rule 2 (BooleanExpression -> BooleanOr .)
    Or              shift and go to state 83


state 24

    (46) ShowVal -> Show . expression
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . BooleanExpression
    (35) expression -> . ShowVal
    (36) expression -> . Assigns
    (37) expression -> . Declares
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (13) StringExpression -> . StringConcat
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (2) BooleanExpression -> . BooleanOr
    (46) ShowVal -> . Show expression
    (47) ShowVal -> . ShowInLine expression
    (70) Assigns -> . StringAssign
    (71) Assigns -> . IntAssign
    (72) Assigns -> . AlphAssign
    (73) Assigns -> . LangAssign
    (74) Assigns -> . BooleanAssign
    (59) Declares -> . StringDeclare
    (60) Declares -> . IntDeclare
    (61) Declares -> . AlphDeclare
    (62) Declares -> . LangDeclare
    (63) Declares -> . BooleanDeclare
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (93) StringAssign -> . VString Eq StringExpression
    (100) IntAssign -> . VarName Eq IntExpression
    (105) AlphAssign -> . VarName Eq AlphExpression
    (110) LangAssign -> . VLang Eq LangExpression
    (115) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (95) IntDeclare -> . IntType VarName
    (96) IntDeclare -> . IntType VarName Eq IntExpression
    (97) IntDeclare -> . IntDeclare Splitter VarName
    (98) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (101) AlphDeclare -> . AlphType VarName
    (102) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (103) AlphDeclare -> . AlphDeclare Splitter VarName
    (104) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (106) LangDeclare -> . LangType VarName
    (107) LangDeclare -> . LangType VarName Eq LangExpression
    (108) LangDeclare -> . LangDeclare Splitter VarName
    (109) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (111) BooleanDeclare -> . BooleanType VarName
    (112) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (113) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (114) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 24
    ShowInLine      shift and go to state 25
    LenOp           shift and go to state 36
    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    VString         shift and go to state 46
    VarName         shift and go to state 47
    VLang           shift and go to state 48
    VBoolean        shift and go to state 49
    StringType      shift and go to state 50
    IntType         shift and go to state 51
    AlphType        shift and go to state 52
    LangType        shift and go to state 53
    BooleanType     shift and go to state 54
    LGroup          shift and go to state 61
    VAlph           shift and go to state 63
    String          shift and go to state 64
    Sub             shift and go to state 38
    OpenStruct      shift and go to state 67
    True            shift and go to state 68
    False           shift and go to state 69
    VInt            shift and go to state 70
    Int             shift and go to state 71

    expression                     shift and go to state 84
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    BooleanOr                      shift and go to state 23
    StringAssign                   shift and go to state 26
    IntAssign                      shift and go to state 27
    AlphAssign                     shift and go to state 28
    LangAssign                     shift and go to state 29
    BooleanAssign                  shift and go to state 30
    StringDeclare                  shift and go to state 31
    IntDeclare                     shift and go to state 32
    AlphDeclare                    shift and go to state 33
    LangDeclare                    shift and go to state 34
    BooleanDeclare                 shift and go to state 35
    MultDiv                        shift and go to state 37
    AlphPow                        shift and go to state 39
    StringPow                      shift and go to state 40
    LangConcat                     shift and go to state 43
    BooleanAnd                     shift and go to state 45
    IntPow                         shift and go to state 55
    AlphGroup                      shift and go to state 56
    StringGroup                    shift and go to state 57
    LangGroup                      shift and go to state 58
    BooleanGroup                   shift and go to state 59
    Unary                          shift and go to state 60
    Alph                           shift and go to state 62
    Boolean                        shift and go to state 65
    Primary                        shift and go to state 66

state 25

    (47) ShowVal -> ShowInLine . expression
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . BooleanExpression
    (35) expression -> . ShowVal
    (36) expression -> . Assigns
    (37) expression -> . Declares
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (13) StringExpression -> . StringConcat
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (2) BooleanExpression -> . BooleanOr
    (46) ShowVal -> . Show expression
    (47) ShowVal -> . ShowInLine expression
    (70) Assigns -> . StringAssign
    (71) Assigns -> . IntAssign
    (72) Assigns -> . AlphAssign
    (73) Assigns -> . LangAssign
    (74) Assigns -> . BooleanAssign
    (59) Declares -> . StringDeclare
    (60) Declares -> . IntDeclare
    (61) Declares -> . AlphDeclare
    (62) Declares -> . LangDeclare
    (63) Declares -> . BooleanDeclare
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (93) StringAssign -> . VString Eq StringExpression
    (100) IntAssign -> . VarName Eq IntExpression
    (105) AlphAssign -> . VarName Eq AlphExpression
    (110) LangAssign -> . VLang Eq LangExpression
    (115) BooleanAssign -> . VBoolean Eq BooleanExpression
    (80) StringDeclare -> . StringType VarName
    (81) StringDeclare -> . StringType VarName Eq StringExpression
    (82) StringDeclare -> . StringDeclare Splitter VarName
    (83) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (95) IntDeclare -> . IntType VarName
    (96) IntDeclare -> . IntType VarName Eq IntExpression
    (97) IntDeclare -> . IntDeclare Splitter VarName
    (98) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (101) AlphDeclare -> . AlphType VarName
    (102) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (103) AlphDeclare -> . AlphDeclare Splitter VarName
    (104) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (106) LangDeclare -> . LangType VarName
    (107) LangDeclare -> . LangType VarName Eq LangExpression
    (108) LangDeclare -> . LangDeclare Splitter VarName
    (109) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (111) BooleanDeclare -> . BooleanType VarName
    (112) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (113) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (114) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Show            shift and go to state 24
    ShowInLine      shift and go to state 25
    LenOp           shift and go to state 36
    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    VString         shift and go to state 46
    VarName         shift and go to state 47
    VLang           shift and go to state 48
    VBoolean        shift and go to state 49
    StringType      shift and go to state 50
    IntType         shift and go to state 51
    AlphType        shift and go to state 52
    LangType        shift and go to state 53
    BooleanType     shift and go to state 54
    LGroup          shift and go to state 61
    VAlph           shift and go to state 63
    String          shift and go to state 64
    Sub             shift and go to state 38
    OpenStruct      shift and go to state 67
    True            shift and go to state 68
    False           shift and go to state 69
    VInt            shift and go to state 70
    Int             shift and go to state 71

    expression                     shift and go to state 85
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    BooleanExpression              shift and go to state 7
    ShowVal                        shift and go to state 8
    Assigns                        shift and go to state 9
    Declares                       shift and go to state 10
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    BooleanOr                      shift and go to state 23
    StringAssign                   shift and go to state 26
    IntAssign                      shift and go to state 27
    AlphAssign                     shift and go to state 28
    LangAssign                     shift and go to state 29
    BooleanAssign                  shift and go to state 30
    StringDeclare                  shift and go to state 31
    IntDeclare                     shift and go to state 32
    AlphDeclare                    shift and go to state 33
    LangDeclare                    shift and go to state 34
    BooleanDeclare                 shift and go to state 35
    MultDiv                        shift and go to state 37
    AlphPow                        shift and go to state 39
    StringPow                      shift and go to state 40
    LangConcat                     shift and go to state 43
    BooleanAnd                     shift and go to state 45
    IntPow                         shift and go to state 55
    AlphGroup                      shift and go to state 56
    StringGroup                    shift and go to state 57
    LangGroup                      shift and go to state 58
    BooleanGroup                   shift and go to state 59
    Unary                          shift and go to state 60
    Alph                           shift and go to state 62
    Boolean                        shift and go to state 65
    Primary                        shift and go to state 66

state 26

    (70) Assigns -> StringAssign .

    Term            reduce using rule 70 (Assigns -> StringAssign .)


state 27

    (71) Assigns -> IntAssign .

    Term            reduce using rule 71 (Assigns -> IntAssign .)


state 28

    (72) Assigns -> AlphAssign .

    Term            reduce using rule 72 (Assigns -> AlphAssign .)


state 29

    (73) Assigns -> LangAssign .

    Term            reduce using rule 73 (Assigns -> LangAssign .)


state 30

    (74) Assigns -> BooleanAssign .

    Term            reduce using rule 74 (Assigns -> BooleanAssign .)


state 31

    (59) Declares -> StringDeclare .
    (82) StringDeclare -> StringDeclare . Splitter VarName
    (83) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 59 (Declares -> StringDeclare .)
    Splitter        shift and go to state 86


state 32

    (60) Declares -> IntDeclare .
    (97) IntDeclare -> IntDeclare . Splitter VarName
    (98) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 60 (Declares -> IntDeclare .)
    Splitter        shift and go to state 87


state 33

    (61) Declares -> AlphDeclare .
    (103) AlphDeclare -> AlphDeclare . Splitter VarName
    (104) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 61 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 88


state 34

    (62) Declares -> LangDeclare .
    (108) LangDeclare -> LangDeclare . Splitter VarName
    (109) LangDeclare -> LangDeclare . Splitter VarName Eq LangExpression

    Term            reduce using rule 62 (Declares -> LangDeclare .)
    Splitter        shift and go to state 89


state 35

    (63) Declares -> BooleanDeclare .
    (113) BooleanDeclare -> BooleanDeclare . Splitter VarName
    (114) BooleanDeclare -> BooleanDeclare . Splitter VarName Eq BooleanExpression

    Term            reduce using rule 63 (Declares -> BooleanDeclare .)
    Splitter        shift and go to state 90


state 36

    (16) StringLen -> LenOp . StringExpression LenOp
    (17) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 91
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 37

    (40) AddSub -> MultDiv .
    (56) MultDiv -> MultDiv . Concat IntPow
    (57) MultDiv -> MultDiv . Div IntPow

  ! shift/reduce conflict for Concat resolved as shift
    Add             reduce using rule 40 (AddSub -> MultDiv .)
    Sub             reduce using rule 40 (AddSub -> MultDiv .)
    Term            reduce using rule 40 (AddSub -> MultDiv .)
    RGroup          reduce using rule 40 (AddSub -> MultDiv .)
    KleeneC         reduce using rule 40 (AddSub -> MultDiv .)
    PositiveC       reduce using rule 40 (AddSub -> MultDiv .)
    Splitter        reduce using rule 40 (AddSub -> MultDiv .)
    Pow             reduce using rule 40 (AddSub -> MultDiv .)
    LenOp           reduce using rule 40 (AddSub -> MultDiv .)
    On              reduce using rule 40 (AddSub -> MultDiv .)
    CloseStruct     reduce using rule 40 (AddSub -> MultDiv .)
    Concat          shift and go to state 94
    Div             shift and go to state 95

  ! Concat          [ reduce using rule 40 (AddSub -> MultDiv .) ]


state 38

    (85) Unary -> Sub . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    Primary                        shift and go to state 96

state 39

    (21) AlphConcat -> AlphPow .
    (41) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 21 (AlphConcat -> AlphPow .)
    KleeneC         reduce using rule 21 (AlphConcat -> AlphPow .)
    PositiveC       reduce using rule 21 (AlphConcat -> AlphPow .)
    Term            reduce using rule 21 (AlphConcat -> AlphPow .)
    RGroup          reduce using rule 21 (AlphConcat -> AlphPow .)
    LenOp           reduce using rule 21 (AlphConcat -> AlphPow .)
    Splitter        reduce using rule 21 (AlphConcat -> AlphPow .)
    Pow             shift and go to state 98


state 40

    (19) StringConcat -> StringPow .
    (28) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 19 (StringConcat -> StringPow .)
    Term            reduce using rule 19 (StringConcat -> StringPow .)
    LenOp           reduce using rule 19 (StringConcat -> StringPow .)
    On              reduce using rule 19 (StringConcat -> StringPow .)
    KleeneC         reduce using rule 19 (StringConcat -> StringPow .)
    PositiveC       reduce using rule 19 (StringConcat -> StringPow .)
    RGroup          reduce using rule 19 (StringConcat -> StringPow .)
    Splitter        reduce using rule 19 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 19 (StringConcat -> StringPow .)
    Pow             shift and go to state 99


state 41

    (92) StringPrefix -> Prefix . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 100
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 42

    (94) StringSuffix -> Suffix . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 101
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 43

    (27) LangUnion -> LangConcat .
    (51) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 27 (LangUnion -> LangConcat .)
    KleeneC         reduce using rule 27 (LangUnion -> LangConcat .)
    PositiveC       reduce using rule 27 (LangUnion -> LangConcat .)
    Term            reduce using rule 27 (LangUnion -> LangConcat .)
    RGroup          reduce using rule 27 (LangUnion -> LangConcat .)
    Splitter        reduce using rule 27 (LangUnion -> LangConcat .)
    Concat          shift and go to state 102


state 44

    (99) StringSubSequence -> SubSequence . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 103
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 45

    (15) BooleanOr -> BooleanAnd .
    (24) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 15 (BooleanOr -> BooleanAnd .)
    Term            reduce using rule 15 (BooleanOr -> BooleanAnd .)
    RGroup          reduce using rule 15 (BooleanOr -> BooleanAnd .)
    Splitter        reduce using rule 15 (BooleanOr -> BooleanAnd .)
    And             shift and go to state 104


state 46

    (93) StringAssign -> VString . Eq StringExpression
    (45) StringGroup -> VString .

    Eq              shift and go to state 105
    Pow             reduce using rule 45 (StringGroup -> VString .)
    Concat          reduce using rule 45 (StringGroup -> VString .)
    Term            reduce using rule 45 (StringGroup -> VString .)


state 47

    (100) IntAssign -> VarName . Eq IntExpression
    (105) AlphAssign -> VarName . Eq AlphExpression

    Eq              shift and go to state 106


state 48

    (110) LangAssign -> VLang . Eq LangExpression
    (65) LangGroup -> VLang .

    Eq              shift and go to state 107
    Concat          reduce using rule 65 (LangGroup -> VLang .)
    Add             reduce using rule 65 (LangGroup -> VLang .)
    KleeneC         reduce using rule 65 (LangGroup -> VLang .)
    PositiveC       reduce using rule 65 (LangGroup -> VLang .)
    Term            reduce using rule 65 (LangGroup -> VLang .)


state 49

    (115) BooleanAssign -> VBoolean . Eq BooleanExpression
    (50) BooleanGroup -> VBoolean .

    Eq              shift and go to state 108
    And             reduce using rule 50 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 50 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 50 (BooleanGroup -> VBoolean .)


state 50

    (80) StringDeclare -> StringType . VarName
    (81) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 109


state 51

    (95) IntDeclare -> IntType . VarName
    (96) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 110


state 52

    (101) AlphDeclare -> AlphType . VarName
    (102) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 111


state 53

    (106) LangDeclare -> LangType . VarName
    (107) LangDeclare -> LangType . VarName Eq LangExpression

    VarName         shift and go to state 112


state 54

    (111) BooleanDeclare -> BooleanType . VarName
    (112) BooleanDeclare -> BooleanType . VarName Eq BooleanExpression

    VarName         shift and go to state 113


state 55

    (58) MultDiv -> IntPow .
    (76) IntPow -> IntPow . Pow Unary

  ! shift/reduce conflict for Pow resolved as shift
    Concat          reduce using rule 58 (MultDiv -> IntPow .)
    Div             reduce using rule 58 (MultDiv -> IntPow .)
    Add             reduce using rule 58 (MultDiv -> IntPow .)
    Sub             reduce using rule 58 (MultDiv -> IntPow .)
    Term            reduce using rule 58 (MultDiv -> IntPow .)
    RGroup          reduce using rule 58 (MultDiv -> IntPow .)
    KleeneC         reduce using rule 58 (MultDiv -> IntPow .)
    PositiveC       reduce using rule 58 (MultDiv -> IntPow .)
    Splitter        reduce using rule 58 (MultDiv -> IntPow .)
    LenOp           reduce using rule 58 (MultDiv -> IntPow .)
    On              reduce using rule 58 (MultDiv -> IntPow .)
    CloseStruct     reduce using rule 58 (MultDiv -> IntPow .)
    Pow             shift and go to state 114

  ! Pow             [ reduce using rule 58 (MultDiv -> IntPow .) ]


state 56

    (42) AlphPow -> AlphGroup .

    Pow             reduce using rule 42 (AlphPow -> AlphGroup .)
    Concat          reduce using rule 42 (AlphPow -> AlphGroup .)
    KleeneC         reduce using rule 42 (AlphPow -> AlphGroup .)
    PositiveC       reduce using rule 42 (AlphPow -> AlphGroup .)
    Term            reduce using rule 42 (AlphPow -> AlphGroup .)
    RGroup          reduce using rule 42 (AlphPow -> AlphGroup .)
    LenOp           reduce using rule 42 (AlphPow -> AlphGroup .)
    Splitter        reduce using rule 42 (AlphPow -> AlphGroup .)


state 57

    (29) StringPow -> StringGroup .

    Pow             reduce using rule 29 (StringPow -> StringGroup .)
    Concat          reduce using rule 29 (StringPow -> StringGroup .)
    Term            reduce using rule 29 (StringPow -> StringGroup .)
    LenOp           reduce using rule 29 (StringPow -> StringGroup .)
    On              reduce using rule 29 (StringPow -> StringGroup .)
    KleeneC         reduce using rule 29 (StringPow -> StringGroup .)
    PositiveC       reduce using rule 29 (StringPow -> StringGroup .)
    RGroup          reduce using rule 29 (StringPow -> StringGroup .)
    Splitter        reduce using rule 29 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 29 (StringPow -> StringGroup .)


state 58

    (52) LangConcat -> LangGroup .

    Concat          reduce using rule 52 (LangConcat -> LangGroup .)
    Add             reduce using rule 52 (LangConcat -> LangGroup .)
    KleeneC         reduce using rule 52 (LangConcat -> LangGroup .)
    PositiveC       reduce using rule 52 (LangConcat -> LangGroup .)
    Term            reduce using rule 52 (LangConcat -> LangGroup .)
    RGroup          reduce using rule 52 (LangConcat -> LangGroup .)
    Splitter        reduce using rule 52 (LangConcat -> LangGroup .)


state 59

    (25) BooleanAnd -> BooleanGroup .

    And             reduce using rule 25 (BooleanAnd -> BooleanGroup .)
    Or              reduce using rule 25 (BooleanAnd -> BooleanGroup .)
    Term            reduce using rule 25 (BooleanAnd -> BooleanGroup .)
    RGroup          reduce using rule 25 (BooleanAnd -> BooleanGroup .)
    Splitter        reduce using rule 25 (BooleanAnd -> BooleanGroup .)


state 60

    (77) IntPow -> Unary .

    Pow             reduce using rule 77 (IntPow -> Unary .)
    Concat          reduce using rule 77 (IntPow -> Unary .)
    Div             reduce using rule 77 (IntPow -> Unary .)
    Add             reduce using rule 77 (IntPow -> Unary .)
    Sub             reduce using rule 77 (IntPow -> Unary .)
    Term            reduce using rule 77 (IntPow -> Unary .)
    RGroup          reduce using rule 77 (IntPow -> Unary .)
    KleeneC         reduce using rule 77 (IntPow -> Unary .)
    PositiveC       reduce using rule 77 (IntPow -> Unary .)
    Splitter        reduce using rule 77 (IntPow -> Unary .)
    LenOp           reduce using rule 77 (IntPow -> Unary .)
    On              reduce using rule 77 (IntPow -> Unary .)
    CloseStruct     reduce using rule 77 (IntPow -> Unary .)


state 61

    (53) AlphGroup -> LGroup . AlphExpression RGroup
    (43) StringGroup -> LGroup . StringExpression RGroup
    (64) LangGroup -> LGroup . LangExpression RGroup
    (48) BooleanGroup -> LGroup . BooleanExpression RGroup
    (89) Primary -> LGroup . IntExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (13) StringExpression -> . StringConcat
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (2) BooleanExpression -> . BooleanOr
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct
    (66) Boolean -> . True
    (67) Boolean -> . False
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    LenOp           shift and go to state 36
    LGroup          shift and go to state 61
    VAlph           shift and go to state 63
    String          shift and go to state 64
    VString         shift and go to state 93
    VLang           shift and go to state 120
    VBoolean        shift and go to state 121
    OpenStruct      shift and go to state 67
    True            shift and go to state 68
    False           shift and go to state 69
    Sub             shift and go to state 38
    VInt            shift and go to state 70
    Int             shift and go to state 71

    AlphExpression                 shift and go to state 115
    StringExpression               shift and go to state 116
    LangExpression                 shift and go to state 117
    BooleanExpression              shift and go to state 118
    IntExpression                  shift and go to state 119
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    BooleanOr                      shift and go to state 23
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 39
    StringPow                      shift and go to state 40
    LangConcat                     shift and go to state 43
    BooleanAnd                     shift and go to state 45
    MultDiv                        shift and go to state 37
    AlphGroup                      shift and go to state 56
    StringGroup                    shift and go to state 57
    LangGroup                      shift and go to state 58
    BooleanGroup                   shift and go to state 59
    IntPow                         shift and go to state 55
    Alph                           shift and go to state 62
    Boolean                        shift and go to state 65
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 62

    (54) AlphGroup -> Alph .

    Pow             reduce using rule 54 (AlphGroup -> Alph .)
    Concat          reduce using rule 54 (AlphGroup -> Alph .)
    KleeneC         reduce using rule 54 (AlphGroup -> Alph .)
    PositiveC       reduce using rule 54 (AlphGroup -> Alph .)
    Term            reduce using rule 54 (AlphGroup -> Alph .)
    RGroup          reduce using rule 54 (AlphGroup -> Alph .)
    LenOp           reduce using rule 54 (AlphGroup -> Alph .)
    Splitter        reduce using rule 54 (AlphGroup -> Alph .)


state 63

    (55) AlphGroup -> VAlph .

    Pow             reduce using rule 55 (AlphGroup -> VAlph .)
    Concat          reduce using rule 55 (AlphGroup -> VAlph .)
    KleeneC         reduce using rule 55 (AlphGroup -> VAlph .)
    PositiveC       reduce using rule 55 (AlphGroup -> VAlph .)
    Term            reduce using rule 55 (AlphGroup -> VAlph .)
    RGroup          reduce using rule 55 (AlphGroup -> VAlph .)
    LenOp           reduce using rule 55 (AlphGroup -> VAlph .)
    Splitter        reduce using rule 55 (AlphGroup -> VAlph .)


state 64

    (44) StringGroup -> String .

    Pow             reduce using rule 44 (StringGroup -> String .)
    Concat          reduce using rule 44 (StringGroup -> String .)
    Term            reduce using rule 44 (StringGroup -> String .)
    LenOp           reduce using rule 44 (StringGroup -> String .)
    On              reduce using rule 44 (StringGroup -> String .)
    KleeneC         reduce using rule 44 (StringGroup -> String .)
    PositiveC       reduce using rule 44 (StringGroup -> String .)
    RGroup          reduce using rule 44 (StringGroup -> String .)
    Splitter        reduce using rule 44 (StringGroup -> String .)
    CloseStruct     reduce using rule 44 (StringGroup -> String .)


state 65

    (49) BooleanGroup -> Boolean .

    And             reduce using rule 49 (BooleanGroup -> Boolean .)
    Or              reduce using rule 49 (BooleanGroup -> Boolean .)
    Term            reduce using rule 49 (BooleanGroup -> Boolean .)
    RGroup          reduce using rule 49 (BooleanGroup -> Boolean .)
    Splitter        reduce using rule 49 (BooleanGroup -> Boolean .)


state 66

    (86) Unary -> Primary .

    Pow             reduce using rule 86 (Unary -> Primary .)
    Concat          reduce using rule 86 (Unary -> Primary .)
    Div             reduce using rule 86 (Unary -> Primary .)
    Add             reduce using rule 86 (Unary -> Primary .)
    Sub             reduce using rule 86 (Unary -> Primary .)
    Term            reduce using rule 86 (Unary -> Primary .)
    RGroup          reduce using rule 86 (Unary -> Primary .)
    KleeneC         reduce using rule 86 (Unary -> Primary .)
    PositiveC       reduce using rule 86 (Unary -> Primary .)
    Splitter        reduce using rule 86 (Unary -> Primary .)
    LenOp           reduce using rule 86 (Unary -> Primary .)
    On              reduce using rule 86 (Unary -> Primary .)
    CloseStruct     reduce using rule 86 (Unary -> Primary .)


state 67

    (68) Alph -> OpenStruct . StringList CloseStruct
    (69) Alph -> OpenStruct . StringExpression CloseStruct
    (78) StringList -> . StringList Splitter StringExpression
    (79) StringList -> . StringExpression Splitter StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringList                     shift and go to state 122
    StringExpression               shift and go to state 123
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 68

    (66) Boolean -> True .

    And             reduce using rule 66 (Boolean -> True .)
    Or              reduce using rule 66 (Boolean -> True .)
    Term            reduce using rule 66 (Boolean -> True .)
    RGroup          reduce using rule 66 (Boolean -> True .)
    Splitter        reduce using rule 66 (Boolean -> True .)


state 69

    (67) Boolean -> False .

    And             reduce using rule 67 (Boolean -> False .)
    Or              reduce using rule 67 (Boolean -> False .)
    Term            reduce using rule 67 (Boolean -> False .)
    RGroup          reduce using rule 67 (Boolean -> False .)
    Splitter        reduce using rule 67 (Boolean -> False .)


state 70

    (90) Primary -> VInt .

    Pow             reduce using rule 90 (Primary -> VInt .)
    Concat          reduce using rule 90 (Primary -> VInt .)
    Div             reduce using rule 90 (Primary -> VInt .)
    Add             reduce using rule 90 (Primary -> VInt .)
    Sub             reduce using rule 90 (Primary -> VInt .)
    Term            reduce using rule 90 (Primary -> VInt .)
    RGroup          reduce using rule 90 (Primary -> VInt .)
    KleeneC         reduce using rule 90 (Primary -> VInt .)
    PositiveC       reduce using rule 90 (Primary -> VInt .)
    Splitter        reduce using rule 90 (Primary -> VInt .)
    LenOp           reduce using rule 90 (Primary -> VInt .)
    On              reduce using rule 90 (Primary -> VInt .)
    CloseStruct     reduce using rule 90 (Primary -> VInt .)


state 71

    (91) Primary -> Int .

    Pow             reduce using rule 91 (Primary -> Int .)
    Concat          reduce using rule 91 (Primary -> Int .)
    Div             reduce using rule 91 (Primary -> Int .)
    Add             reduce using rule 91 (Primary -> Int .)
    Sub             reduce using rule 91 (Primary -> Int .)
    Term            reduce using rule 91 (Primary -> Int .)
    RGroup          reduce using rule 91 (Primary -> Int .)
    KleeneC         reduce using rule 91 (Primary -> Int .)
    PositiveC       reduce using rule 91 (Primary -> Int .)
    Splitter        reduce using rule 91 (Primary -> Int .)
    LenOp           reduce using rule 91 (Primary -> Int .)
    On              reduce using rule 91 (Primary -> Int .)
    CloseStruct     reduce using rule 91 (Primary -> Int .)


state 72

    (22) expressions -> expressions expression . Term

    Term            shift and go to state 124


state 73

    (23) expressions -> expression Term .

    Show            reduce using rule 23 (expressions -> expression Term .)
    ShowInLine      reduce using rule 23 (expressions -> expression Term .)
    LenOp           reduce using rule 23 (expressions -> expression Term .)
    Prefix          reduce using rule 23 (expressions -> expression Term .)
    Suffix          reduce using rule 23 (expressions -> expression Term .)
    SubSequence     reduce using rule 23 (expressions -> expression Term .)
    VString         reduce using rule 23 (expressions -> expression Term .)
    VarName         reduce using rule 23 (expressions -> expression Term .)
    VLang           reduce using rule 23 (expressions -> expression Term .)
    VBoolean        reduce using rule 23 (expressions -> expression Term .)
    StringType      reduce using rule 23 (expressions -> expression Term .)
    IntType         reduce using rule 23 (expressions -> expression Term .)
    AlphType        reduce using rule 23 (expressions -> expression Term .)
    LangType        reduce using rule 23 (expressions -> expression Term .)
    BooleanType     reduce using rule 23 (expressions -> expression Term .)
    LGroup          reduce using rule 23 (expressions -> expression Term .)
    VAlph           reduce using rule 23 (expressions -> expression Term .)
    String          reduce using rule 23 (expressions -> expression Term .)
    Sub             reduce using rule 23 (expressions -> expression Term .)
    OpenStruct      reduce using rule 23 (expressions -> expression Term .)
    True            reduce using rule 23 (expressions -> expression Term .)
    False           reduce using rule 23 (expressions -> expression Term .)
    VInt            reduce using rule 23 (expressions -> expression Term .)
    Int             reduce using rule 23 (expressions -> expression Term .)
    $end            reduce using rule 23 (expressions -> expression Term .)


state 74

    (75) AlphKleeneC -> AlphExpression KleeneC . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 125
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 75

    (84) AlphPositiveC -> AlphExpression PositiveC . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 126
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 76

    (87) LangKleeneC -> LangExpression KleeneC . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 127
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 77

    (88) LangPositiveC -> LangExpression PositiveC . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 128
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 78

    (38) AddSub -> AddSub Add . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    MultDiv                        shift and go to state 129
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 79

    (39) AddSub -> AddSub Sub . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    MultDiv                        shift and go to state 130
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 80

    (20) AlphConcat -> AlphConcat Concat . AlphPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 132
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    AlphPow                        shift and go to state 131
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 81

    (18) StringConcat -> StringConcat Concat . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringPow                      shift and go to state 133
    StringGroup                    shift and go to state 57

state 82

    (26) LangUnion -> LangUnion Add . LangConcat
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang

    LGroup          shift and go to state 135
    VLang           shift and go to state 120

    LangConcat                     shift and go to state 134
    LangGroup                      shift and go to state 58

state 83

    (14) BooleanOr -> BooleanOr Or . BooleanAnd
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 137
    VBoolean        shift and go to state 121
    True            shift and go to state 68
    False           shift and go to state 69

    BooleanAnd                     shift and go to state 136
    BooleanGroup                   shift and go to state 59
    Boolean                        shift and go to state 65

state 84

    (46) ShowVal -> Show expression .

    Term            reduce using rule 46 (ShowVal -> Show expression .)


state 85

    (47) ShowVal -> ShowInLine expression .

    Term            reduce using rule 47 (ShowVal -> ShowInLine expression .)


state 86

    (82) StringDeclare -> StringDeclare Splitter . VarName
    (83) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 138


state 87

    (97) IntDeclare -> IntDeclare Splitter . VarName
    (98) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 139


state 88

    (103) AlphDeclare -> AlphDeclare Splitter . VarName
    (104) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 140


state 89

    (108) LangDeclare -> LangDeclare Splitter . VarName
    (109) LangDeclare -> LangDeclare Splitter . VarName Eq LangExpression

    VarName         shift and go to state 141


state 90

    (113) BooleanDeclare -> BooleanDeclare Splitter . VarName
    (114) BooleanDeclare -> BooleanDeclare Splitter . VarName Eq BooleanExpression

    VarName         shift and go to state 142


state 91

    (16) StringLen -> LenOp StringExpression . LenOp
    (17) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 143
    On              shift and go to state 144


state 92

    (43) StringGroup -> LGroup . StringExpression RGroup
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 116
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 93

    (45) StringGroup -> VString .

    Pow             reduce using rule 45 (StringGroup -> VString .)
    Concat          reduce using rule 45 (StringGroup -> VString .)
    LenOp           reduce using rule 45 (StringGroup -> VString .)
    On              reduce using rule 45 (StringGroup -> VString .)
    KleeneC         reduce using rule 45 (StringGroup -> VString .)
    PositiveC       reduce using rule 45 (StringGroup -> VString .)
    Term            reduce using rule 45 (StringGroup -> VString .)
    RGroup          reduce using rule 45 (StringGroup -> VString .)
    Splitter        reduce using rule 45 (StringGroup -> VString .)
    CloseStruct     reduce using rule 45 (StringGroup -> VString .)


state 94

    (56) MultDiv -> MultDiv Concat . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntPow                         shift and go to state 145
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 95

    (57) MultDiv -> MultDiv Div . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntPow                         shift and go to state 146
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 96

    (85) Unary -> Sub Primary .

    Pow             reduce using rule 85 (Unary -> Sub Primary .)
    Concat          reduce using rule 85 (Unary -> Sub Primary .)
    Div             reduce using rule 85 (Unary -> Sub Primary .)
    Add             reduce using rule 85 (Unary -> Sub Primary .)
    Sub             reduce using rule 85 (Unary -> Sub Primary .)
    Term            reduce using rule 85 (Unary -> Sub Primary .)
    RGroup          reduce using rule 85 (Unary -> Sub Primary .)
    KleeneC         reduce using rule 85 (Unary -> Sub Primary .)
    PositiveC       reduce using rule 85 (Unary -> Sub Primary .)
    Splitter        reduce using rule 85 (Unary -> Sub Primary .)
    LenOp           reduce using rule 85 (Unary -> Sub Primary .)
    On              reduce using rule 85 (Unary -> Sub Primary .)
    CloseStruct     reduce using rule 85 (Unary -> Sub Primary .)


state 97

    (89) Primary -> LGroup . IntExpression RGroup
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 119
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 98

    (41) AlphPow -> AlphPow Pow . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 147
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 99

    (28) StringPow -> StringPow Pow . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 148
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 100

    (92) StringPrefix -> Prefix StringExpression .

    KleeneC         reduce using rule 92 (StringPrefix -> Prefix StringExpression .)
    PositiveC       reduce using rule 92 (StringPrefix -> Prefix StringExpression .)
    Term            reduce using rule 92 (StringPrefix -> Prefix StringExpression .)
    RGroup          reduce using rule 92 (StringPrefix -> Prefix StringExpression .)
    Splitter        reduce using rule 92 (StringPrefix -> Prefix StringExpression .)


state 101

    (94) StringSuffix -> Suffix StringExpression .

    KleeneC         reduce using rule 94 (StringSuffix -> Suffix StringExpression .)
    PositiveC       reduce using rule 94 (StringSuffix -> Suffix StringExpression .)
    Term            reduce using rule 94 (StringSuffix -> Suffix StringExpression .)
    RGroup          reduce using rule 94 (StringSuffix -> Suffix StringExpression .)
    Splitter        reduce using rule 94 (StringSuffix -> Suffix StringExpression .)


state 102

    (51) LangConcat -> LangConcat Concat . LangGroup
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang

    LGroup          shift and go to state 135
    VLang           shift and go to state 120

    LangGroup                      shift and go to state 149

state 103

    (99) StringSubSequence -> SubSequence StringExpression .

    KleeneC         reduce using rule 99 (StringSubSequence -> SubSequence StringExpression .)
    PositiveC       reduce using rule 99 (StringSubSequence -> SubSequence StringExpression .)
    Term            reduce using rule 99 (StringSubSequence -> SubSequence StringExpression .)
    RGroup          reduce using rule 99 (StringSubSequence -> SubSequence StringExpression .)
    Splitter        reduce using rule 99 (StringSubSequence -> SubSequence StringExpression .)


state 104

    (24) BooleanAnd -> BooleanAnd And . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 137
    VBoolean        shift and go to state 121
    True            shift and go to state 68
    False           shift and go to state 69

    BooleanGroup                   shift and go to state 150
    Boolean                        shift and go to state 65

state 105

    (93) StringAssign -> VString Eq . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 151
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 106

    (100) IntAssign -> VarName Eq . IntExpression
    (105) AlphAssign -> VarName Eq . AlphExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (1) AlphExpression -> . AlphConcat
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    LGroup          shift and go to state 154
    VAlph           shift and go to state 63
    Sub             shift and go to state 38
    OpenStruct      shift and go to state 67
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 152
    AlphExpression                 shift and go to state 153
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphConcat                     shift and go to state 13
    MultDiv                        shift and go to state 37
    AlphPow                        shift and go to state 39
    IntPow                         shift and go to state 55
    AlphGroup                      shift and go to state 56
    Unary                          shift and go to state 60
    Alph                           shift and go to state 62
    Primary                        shift and go to state 66

state 107

    (110) LangAssign -> VLang Eq . LangExpression
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (1) AlphExpression -> . AlphConcat
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    LGroup          shift and go to state 157
    VLang           shift and go to state 120
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    LangExpression                 shift and go to state 155
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    AlphExpression                 shift and go to state 156
    LangConcat                     shift and go to state 43
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 58
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 108

    (115) BooleanAssign -> VBoolean Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 137
    VBoolean        shift and go to state 121
    True            shift and go to state 68
    False           shift and go to state 69

    BooleanExpression              shift and go to state 158
    BooleanOr                      shift and go to state 23
    BooleanAnd                     shift and go to state 45
    BooleanGroup                   shift and go to state 59
    Boolean                        shift and go to state 65

state 109

    (80) StringDeclare -> StringType VarName .
    (81) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 80 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 80 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 159


state 110

    (95) IntDeclare -> IntType VarName .
    (96) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 95 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 95 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 160


state 111

    (101) AlphDeclare -> AlphType VarName .
    (102) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 101 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 101 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 161


state 112

    (106) LangDeclare -> LangType VarName .
    (107) LangDeclare -> LangType VarName . Eq LangExpression

    Splitter        reduce using rule 106 (LangDeclare -> LangType VarName .)
    Term            reduce using rule 106 (LangDeclare -> LangType VarName .)
    Eq              shift and go to state 162


state 113

    (111) BooleanDeclare -> BooleanType VarName .
    (112) BooleanDeclare -> BooleanType VarName . Eq BooleanExpression

    Splitter        reduce using rule 111 (BooleanDeclare -> BooleanType VarName .)
    Term            reduce using rule 111 (BooleanDeclare -> BooleanType VarName .)
    Eq              shift and go to state 163


state 114

    (76) IntPow -> IntPow Pow . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    Unary                          shift and go to state 164
    Primary                        shift and go to state 66

state 115

    (53) AlphGroup -> LGroup AlphExpression . RGroup
    (75) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (84) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    RGroup          shift and go to state 165
    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 116

    (43) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 166


state 117

    (64) LangGroup -> LGroup LangExpression . RGroup
    (87) LangKleeneC -> LangExpression . KleeneC IntExpression
    (88) LangPositiveC -> LangExpression . PositiveC IntExpression

    RGroup          shift and go to state 167
    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 118

    (48) BooleanGroup -> LGroup BooleanExpression . RGroup

    RGroup          shift and go to state 168


state 119

    (89) Primary -> LGroup IntExpression . RGroup

    RGroup          shift and go to state 169


state 120

    (65) LangGroup -> VLang .

    Concat          reduce using rule 65 (LangGroup -> VLang .)
    Add             reduce using rule 65 (LangGroup -> VLang .)
    RGroup          reduce using rule 65 (LangGroup -> VLang .)
    KleeneC         reduce using rule 65 (LangGroup -> VLang .)
    PositiveC       reduce using rule 65 (LangGroup -> VLang .)
    Term            reduce using rule 65 (LangGroup -> VLang .)
    Splitter        reduce using rule 65 (LangGroup -> VLang .)


state 121

    (50) BooleanGroup -> VBoolean .

    And             reduce using rule 50 (BooleanGroup -> VBoolean .)
    Or              reduce using rule 50 (BooleanGroup -> VBoolean .)
    RGroup          reduce using rule 50 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 50 (BooleanGroup -> VBoolean .)
    Splitter        reduce using rule 50 (BooleanGroup -> VBoolean .)


state 122

    (68) Alph -> OpenStruct StringList . CloseStruct
    (78) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 170
    Splitter        shift and go to state 171


state 123

    (69) Alph -> OpenStruct StringExpression . CloseStruct
    (79) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 172
    Splitter        shift and go to state 173


state 124

    (22) expressions -> expressions expression Term .

    Show            reduce using rule 22 (expressions -> expressions expression Term .)
    ShowInLine      reduce using rule 22 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 22 (expressions -> expressions expression Term .)
    Prefix          reduce using rule 22 (expressions -> expressions expression Term .)
    Suffix          reduce using rule 22 (expressions -> expressions expression Term .)
    SubSequence     reduce using rule 22 (expressions -> expressions expression Term .)
    VString         reduce using rule 22 (expressions -> expressions expression Term .)
    VarName         reduce using rule 22 (expressions -> expressions expression Term .)
    VLang           reduce using rule 22 (expressions -> expressions expression Term .)
    VBoolean        reduce using rule 22 (expressions -> expressions expression Term .)
    StringType      reduce using rule 22 (expressions -> expressions expression Term .)
    IntType         reduce using rule 22 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 22 (expressions -> expressions expression Term .)
    LangType        reduce using rule 22 (expressions -> expressions expression Term .)
    BooleanType     reduce using rule 22 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 22 (expressions -> expressions expression Term .)
    VAlph           reduce using rule 22 (expressions -> expressions expression Term .)
    String          reduce using rule 22 (expressions -> expressions expression Term .)
    Sub             reduce using rule 22 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 22 (expressions -> expressions expression Term .)
    True            reduce using rule 22 (expressions -> expressions expression Term .)
    False           reduce using rule 22 (expressions -> expressions expression Term .)
    VInt            reduce using rule 22 (expressions -> expressions expression Term .)
    Int             reduce using rule 22 (expressions -> expressions expression Term .)
    $end            reduce using rule 22 (expressions -> expressions expression Term .)


state 125

    (75) AlphKleeneC -> AlphExpression KleeneC IntExpression .

    KleeneC         reduce using rule 75 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 75 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Term            reduce using rule 75 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    RGroup          reduce using rule 75 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Splitter        reduce using rule 75 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)


state 126

    (84) AlphPositiveC -> AlphExpression PositiveC IntExpression .

    KleeneC         reduce using rule 84 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 84 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Term            reduce using rule 84 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    RGroup          reduce using rule 84 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Splitter        reduce using rule 84 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)


state 127

    (87) LangKleeneC -> LangExpression KleeneC IntExpression .

    KleeneC         reduce using rule 87 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 87 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Term            reduce using rule 87 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    RGroup          reduce using rule 87 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Splitter        reduce using rule 87 (LangKleeneC -> LangExpression KleeneC IntExpression .)


state 128

    (88) LangPositiveC -> LangExpression PositiveC IntExpression .

    KleeneC         reduce using rule 88 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 88 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Term            reduce using rule 88 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    RGroup          reduce using rule 88 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Splitter        reduce using rule 88 (LangPositiveC -> LangExpression PositiveC IntExpression .)


state 129

    (38) AddSub -> AddSub Add MultDiv .
    (56) MultDiv -> MultDiv . Concat IntPow
    (57) MultDiv -> MultDiv . Div IntPow

    Add             reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    Sub             reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    Term            reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    RGroup          reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    KleeneC         reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    PositiveC       reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    Splitter        reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    Pow             reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    LenOp           reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    On              reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    CloseStruct     reduce using rule 38 (AddSub -> AddSub Add MultDiv .)
    Concat          shift and go to state 94
    Div             shift and go to state 95

  ! Concat          [ reduce using rule 38 (AddSub -> AddSub Add MultDiv .) ]


state 130

    (39) AddSub -> AddSub Sub MultDiv .
    (56) MultDiv -> MultDiv . Concat IntPow
    (57) MultDiv -> MultDiv . Div IntPow

    Add             reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    Sub             reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    Term            reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    RGroup          reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    KleeneC         reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    PositiveC       reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    Splitter        reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    Pow             reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    LenOp           reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    On              reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    CloseStruct     reduce using rule 39 (AddSub -> AddSub Sub MultDiv .)
    Concat          shift and go to state 94
    Div             shift and go to state 95

  ! Concat          [ reduce using rule 39 (AddSub -> AddSub Sub MultDiv .) ]


state 131

    (20) AlphConcat -> AlphConcat Concat AlphPow .
    (41) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    KleeneC         reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    PositiveC       reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    Term            reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    RGroup          reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    LenOp           reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    Splitter        reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    Pow             shift and go to state 98


state 132

    (53) AlphGroup -> LGroup . AlphExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 132
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    AlphExpression                 shift and go to state 174
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 133

    (18) StringConcat -> StringConcat Concat StringPow .
    (28) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    KleeneC         reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    PositiveC       reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 99


state 134

    (26) LangUnion -> LangUnion Add LangConcat .
    (51) LangConcat -> LangConcat . Concat LangGroup

    Add             reduce using rule 26 (LangUnion -> LangUnion Add LangConcat .)
    KleeneC         reduce using rule 26 (LangUnion -> LangUnion Add LangConcat .)
    PositiveC       reduce using rule 26 (LangUnion -> LangUnion Add LangConcat .)
    Term            reduce using rule 26 (LangUnion -> LangUnion Add LangConcat .)
    RGroup          reduce using rule 26 (LangUnion -> LangUnion Add LangConcat .)
    Splitter        reduce using rule 26 (LangUnion -> LangUnion Add LangConcat .)
    Concat          shift and go to state 102


state 135

    (64) LangGroup -> LGroup . LangExpression RGroup
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (1) AlphExpression -> . AlphConcat
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    LGroup          shift and go to state 157
    VLang           shift and go to state 120
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    LangExpression                 shift and go to state 117
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    AlphExpression                 shift and go to state 156
    LangConcat                     shift and go to state 43
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 58
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 136

    (14) BooleanOr -> BooleanOr Or BooleanAnd .
    (24) BooleanAnd -> BooleanAnd . And BooleanGroup

    Or              reduce using rule 14 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Term            reduce using rule 14 (BooleanOr -> BooleanOr Or BooleanAnd .)
    RGroup          reduce using rule 14 (BooleanOr -> BooleanOr Or BooleanAnd .)
    Splitter        reduce using rule 14 (BooleanOr -> BooleanOr Or BooleanAnd .)
    And             shift and go to state 104


state 137

    (48) BooleanGroup -> LGroup . BooleanExpression RGroup
    (2) BooleanExpression -> . BooleanOr
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 137
    VBoolean        shift and go to state 121
    True            shift and go to state 68
    False           shift and go to state 69

    BooleanExpression              shift and go to state 118
    BooleanOr                      shift and go to state 23
    BooleanAnd                     shift and go to state 45
    BooleanGroup                   shift and go to state 59
    Boolean                        shift and go to state 65

state 138

    (82) StringDeclare -> StringDeclare Splitter VarName .
    (83) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 82 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 82 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 175


state 139

    (97) IntDeclare -> IntDeclare Splitter VarName .
    (98) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 97 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 97 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 176


state 140

    (103) AlphDeclare -> AlphDeclare Splitter VarName .
    (104) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 103 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 103 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 177


state 141

    (108) LangDeclare -> LangDeclare Splitter VarName .
    (109) LangDeclare -> LangDeclare Splitter VarName . Eq LangExpression

    Splitter        reduce using rule 108 (LangDeclare -> LangDeclare Splitter VarName .)
    Term            reduce using rule 108 (LangDeclare -> LangDeclare Splitter VarName .)
    Eq              shift and go to state 178


state 142

    (113) BooleanDeclare -> BooleanDeclare Splitter VarName .
    (114) BooleanDeclare -> BooleanDeclare Splitter VarName . Eq BooleanExpression

    Splitter        reduce using rule 113 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Term            reduce using rule 113 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Eq              shift and go to state 179


state 143

    (16) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    KleeneC         reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    PositiveC       reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 16 (StringLen -> LenOp StringExpression LenOp .)


state 144

    (17) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (1) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 132
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    AlphExpression                 shift and go to state 180
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 145

    (56) MultDiv -> MultDiv Concat IntPow .
    (76) IntPow -> IntPow . Pow Unary

    Concat          reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    Div             reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    Add             reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    Sub             reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    Term            reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    RGroup          reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    KleeneC         reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    PositiveC       reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    Splitter        reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    LenOp           reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    On              reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    CloseStruct     reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .)
    Pow             shift and go to state 114

  ! Pow             [ reduce using rule 56 (MultDiv -> MultDiv Concat IntPow .) ]


state 146

    (57) MultDiv -> MultDiv Div IntPow .
    (76) IntPow -> IntPow . Pow Unary

    Concat          reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    Div             reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    Add             reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    Sub             reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    Term            reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    RGroup          reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    KleeneC         reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    PositiveC       reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    Splitter        reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    LenOp           reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    On              reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    CloseStruct     reduce using rule 57 (MultDiv -> MultDiv Div IntPow .)
    Pow             shift and go to state 114

  ! Pow             [ reduce using rule 57 (MultDiv -> MultDiv Div IntPow .) ]


state 147

    (41) AlphPow -> AlphPow Pow IntExpression .

    Pow             reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)
    Concat          reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)
    KleeneC         reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)
    PositiveC       reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)
    Term            reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)
    RGroup          reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)
    LenOp           reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)
    Splitter        reduce using rule 41 (AlphPow -> AlphPow Pow IntExpression .)


state 148

    (28) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    KleeneC         reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    PositiveC       reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)


state 149

    (51) LangConcat -> LangConcat Concat LangGroup .

    Concat          reduce using rule 51 (LangConcat -> LangConcat Concat LangGroup .)
    Add             reduce using rule 51 (LangConcat -> LangConcat Concat LangGroup .)
    KleeneC         reduce using rule 51 (LangConcat -> LangConcat Concat LangGroup .)
    PositiveC       reduce using rule 51 (LangConcat -> LangConcat Concat LangGroup .)
    Term            reduce using rule 51 (LangConcat -> LangConcat Concat LangGroup .)
    RGroup          reduce using rule 51 (LangConcat -> LangConcat Concat LangGroup .)
    Splitter        reduce using rule 51 (LangConcat -> LangConcat Concat LangGroup .)


state 150

    (24) BooleanAnd -> BooleanAnd And BooleanGroup .

    And             reduce using rule 24 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Or              reduce using rule 24 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Term            reduce using rule 24 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    RGroup          reduce using rule 24 (BooleanAnd -> BooleanAnd And BooleanGroup .)
    Splitter        reduce using rule 24 (BooleanAnd -> BooleanAnd And BooleanGroup .)


state 151

    (93) StringAssign -> VString Eq StringExpression .

    Term            reduce using rule 93 (StringAssign -> VString Eq StringExpression .)


state 152

    (100) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 100 (IntAssign -> VarName Eq IntExpression .)


state 153

    (105) AlphAssign -> VarName Eq AlphExpression .

    Term            reduce using rule 105 (AlphAssign -> VarName Eq AlphExpression .)


state 154

    (53) AlphGroup -> LGroup . AlphExpression RGroup
    (89) Primary -> LGroup . IntExpression RGroup
    (1) AlphExpression -> . AlphConcat
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    LGroup          shift and go to state 154
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67
    Sub             shift and go to state 38
    VInt            shift and go to state 70
    Int             shift and go to state 71

    AlphExpression                 shift and go to state 174
    IntExpression                  shift and go to state 119
    AlphConcat                     shift and go to state 13
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    AlphPow                        shift and go to state 39
    MultDiv                        shift and go to state 37
    AlphGroup                      shift and go to state 56
    IntPow                         shift and go to state 55
    Alph                           shift and go to state 62
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 155

    (110) LangAssign -> VLang Eq LangExpression .
    (87) LangKleeneC -> LangExpression . KleeneC IntExpression
    (88) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 110 (LangAssign -> VLang Eq LangExpression .)
    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 156

    (75) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (84) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    KleeneC         shift and go to state 74
    PositiveC       shift and go to state 75


state 157

    (64) LangGroup -> LGroup . LangExpression RGroup
    (53) AlphGroup -> LGroup . AlphExpression RGroup
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (1) AlphExpression -> . AlphConcat
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    LGroup          shift and go to state 157
    VLang           shift and go to state 120
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    LangExpression                 shift and go to state 117
    AlphExpression                 shift and go to state 115
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    AlphConcat                     shift and go to state 13
    LangConcat                     shift and go to state 43
    AlphPow                        shift and go to state 39
    LangGroup                      shift and go to state 58
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 158

    (115) BooleanAssign -> VBoolean Eq BooleanExpression .

    Term            reduce using rule 115 (BooleanAssign -> VBoolean Eq BooleanExpression .)


state 159

    (81) StringDeclare -> StringType VarName Eq . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 181
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 160

    (96) IntDeclare -> IntType VarName Eq . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 182
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 161

    (102) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (1) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 132
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    AlphExpression                 shift and go to state 183
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 162

    (107) LangDeclare -> LangType VarName Eq . LangExpression
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (1) AlphExpression -> . AlphConcat
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    LGroup          shift and go to state 157
    VLang           shift and go to state 120
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    LangExpression                 shift and go to state 184
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    AlphExpression                 shift and go to state 156
    LangConcat                     shift and go to state 43
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 58
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 163

    (112) BooleanDeclare -> BooleanType VarName Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 137
    VBoolean        shift and go to state 121
    True            shift and go to state 68
    False           shift and go to state 69

    BooleanExpression              shift and go to state 185
    BooleanOr                      shift and go to state 23
    BooleanAnd                     shift and go to state 45
    BooleanGroup                   shift and go to state 59
    Boolean                        shift and go to state 65

state 164

    (76) IntPow -> IntPow Pow Unary .

    Pow             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Concat          reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Div             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Add             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Sub             reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Term            reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    RGroup          reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    KleeneC         reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    PositiveC       reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    Splitter        reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    LenOp           reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    On              reduce using rule 76 (IntPow -> IntPow Pow Unary .)
    CloseStruct     reduce using rule 76 (IntPow -> IntPow Pow Unary .)


state 165

    (53) AlphGroup -> LGroup AlphExpression RGroup .

    Pow             reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    Concat          reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    KleeneC         reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    PositiveC       reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    Term            reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    RGroup          reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    LenOp           reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    Splitter        reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)


state 166

    (43) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    KleeneC         reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    PositiveC       reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)


state 167

    (64) LangGroup -> LGroup LangExpression RGroup .

    Concat          reduce using rule 64 (LangGroup -> LGroup LangExpression RGroup .)
    Add             reduce using rule 64 (LangGroup -> LGroup LangExpression RGroup .)
    KleeneC         reduce using rule 64 (LangGroup -> LGroup LangExpression RGroup .)
    PositiveC       reduce using rule 64 (LangGroup -> LGroup LangExpression RGroup .)
    Term            reduce using rule 64 (LangGroup -> LGroup LangExpression RGroup .)
    RGroup          reduce using rule 64 (LangGroup -> LGroup LangExpression RGroup .)
    Splitter        reduce using rule 64 (LangGroup -> LGroup LangExpression RGroup .)


state 168

    (48) BooleanGroup -> LGroup BooleanExpression RGroup .

    And             reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Or              reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Term            reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    RGroup          reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Splitter        reduce using rule 48 (BooleanGroup -> LGroup BooleanExpression RGroup .)


state 169

    (89) Primary -> LGroup IntExpression RGroup .

    Pow             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Concat          reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Div             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Add             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Sub             reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Term            reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    RGroup          reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    KleeneC         reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    PositiveC       reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    Splitter        reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    LenOp           reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    On              reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)
    CloseStruct     reduce using rule 89 (Primary -> LGroup IntExpression RGroup .)


state 170

    (68) Alph -> OpenStruct StringList CloseStruct .

    Pow             reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)
    Concat          reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)
    KleeneC         reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)
    PositiveC       reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)
    Term            reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)
    RGroup          reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 68 (Alph -> OpenStruct StringList CloseStruct .)


state 171

    (78) StringList -> StringList Splitter . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 186
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 172

    (69) Alph -> OpenStruct StringExpression CloseStruct .

    Pow             reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)
    Concat          reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)
    KleeneC         reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)
    PositiveC       reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)
    Term            reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)
    RGroup          reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 69 (Alph -> OpenStruct StringExpression CloseStruct .)


state 173

    (79) StringList -> StringExpression Splitter . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 187
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 174

    (53) AlphGroup -> LGroup AlphExpression . RGroup

    RGroup          shift and go to state 165


state 175

    (83) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (13) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 92
    String          shift and go to state 64
    VString         shift and go to state 93

    StringExpression               shift and go to state 188
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 40
    StringGroup                    shift and go to state 57

state 176

    (98) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (3) IntExpression -> . StringLen
    (4) IntExpression -> . AddSub
    (16) StringLen -> . LenOp StringExpression LenOp
    (17) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (38) AddSub -> . AddSub Add MultDiv
    (39) AddSub -> . AddSub Sub MultDiv
    (40) AddSub -> . MultDiv
    (56) MultDiv -> . MultDiv Concat IntPow
    (57) MultDiv -> . MultDiv Div IntPow
    (58) MultDiv -> . IntPow
    (76) IntPow -> . IntPow Pow Unary
    (77) IntPow -> . Unary
    (85) Unary -> . Sub Primary
    (86) Unary -> . Primary
    (89) Primary -> . LGroup IntExpression RGroup
    (90) Primary -> . VInt
    (91) Primary -> . Int

    LenOp           shift and go to state 36
    Sub             shift and go to state 38
    LGroup          shift and go to state 97
    VInt            shift and go to state 70
    Int             shift and go to state 71

    IntExpression                  shift and go to state 189
    StringLen                      shift and go to state 11
    AddSub                         shift and go to state 12
    MultDiv                        shift and go to state 37
    IntPow                         shift and go to state 55
    Unary                          shift and go to state 60
    Primary                        shift and go to state 66

state 177

    (104) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (1) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 132
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    AlphExpression                 shift and go to state 190
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 178

    (109) LangDeclare -> LangDeclare Splitter VarName Eq . LangExpression
    (5) LangExpression -> . StringPrefix
    (6) LangExpression -> . StringSuffix
    (7) LangExpression -> . AlphKleeneC
    (8) LangExpression -> . AlphPositiveC
    (9) LangExpression -> . LangKleeneC
    (10) LangExpression -> . LangPositiveC
    (11) LangExpression -> . LangUnion
    (12) LangExpression -> . StringSubSequence
    (92) StringPrefix -> . Prefix StringExpression
    (94) StringSuffix -> . Suffix StringExpression
    (75) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (84) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (87) LangKleeneC -> . LangExpression KleeneC IntExpression
    (88) LangPositiveC -> . LangExpression PositiveC IntExpression
    (26) LangUnion -> . LangUnion Add LangConcat
    (27) LangUnion -> . LangConcat
    (99) StringSubSequence -> . SubSequence StringExpression
    (1) AlphExpression -> . AlphConcat
    (51) LangConcat -> . LangConcat Concat LangGroup
    (52) LangConcat -> . LangGroup
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (64) LangGroup -> . LGroup LangExpression RGroup
    (65) LangGroup -> . VLang
    (41) AlphPow -> . AlphPow Pow IntExpression
    (42) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (68) Alph -> . OpenStruct StringList CloseStruct
    (69) Alph -> . OpenStruct StringExpression CloseStruct

    Prefix          shift and go to state 41
    Suffix          shift and go to state 42
    SubSequence     shift and go to state 44
    LGroup          shift and go to state 157
    VLang           shift and go to state 120
    VAlph           shift and go to state 63
    OpenStruct      shift and go to state 67

    LangExpression                 shift and go to state 191
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    LangUnion                      shift and go to state 21
    StringSubSequence              shift and go to state 22
    AlphExpression                 shift and go to state 156
    LangConcat                     shift and go to state 43
    AlphConcat                     shift and go to state 13
    LangGroup                      shift and go to state 58
    AlphPow                        shift and go to state 39
    AlphGroup                      shift and go to state 56
    Alph                           shift and go to state 62

state 179

    (114) BooleanDeclare -> BooleanDeclare Splitter VarName Eq . BooleanExpression
    (2) BooleanExpression -> . BooleanOr
    (14) BooleanOr -> . BooleanOr Or BooleanAnd
    (15) BooleanOr -> . BooleanAnd
    (24) BooleanAnd -> . BooleanAnd And BooleanGroup
    (25) BooleanAnd -> . BooleanGroup
    (48) BooleanGroup -> . LGroup BooleanExpression RGroup
    (49) BooleanGroup -> . Boolean
    (50) BooleanGroup -> . VBoolean
    (66) Boolean -> . True
    (67) Boolean -> . False

    LGroup          shift and go to state 137
    VBoolean        shift and go to state 121
    True            shift and go to state 68
    False           shift and go to state 69

    BooleanExpression              shift and go to state 192
    BooleanOr                      shift and go to state 23
    BooleanAnd                     shift and go to state 45
    BooleanGroup                   shift and go to state 59
    Boolean                        shift and go to state 65

state 180

    (17) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 193


state 181

    (81) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 81 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 81 (StringDeclare -> StringType VarName Eq StringExpression .)


state 182

    (96) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 96 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 96 (IntDeclare -> IntType VarName Eq IntExpression .)


state 183

    (102) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 102 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 102 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 184

    (107) LangDeclare -> LangType VarName Eq LangExpression .
    (87) LangKleeneC -> LangExpression . KleeneC IntExpression
    (88) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 107 (LangDeclare -> LangType VarName Eq LangExpression .)
    Term            reduce using rule 107 (LangDeclare -> LangType VarName Eq LangExpression .)
    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 185

    (112) BooleanDeclare -> BooleanType VarName Eq BooleanExpression .

    Splitter        reduce using rule 112 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)
    Term            reduce using rule 112 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)


state 186

    (78) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 78 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 78 (StringList -> StringList Splitter StringExpression .)


state 187

    (79) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 79 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 79 (StringList -> StringExpression Splitter StringExpression .)


state 188

    (83) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 83 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 83 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 189

    (98) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 98 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 98 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 190

    (104) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 104 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 104 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 191

    (109) LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .
    (87) LangKleeneC -> LangExpression . KleeneC IntExpression
    (88) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 109 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    Term            reduce using rule 109 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    KleeneC         shift and go to state 76
    PositiveC       shift and go to state 77


state 192

    (114) BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .

    Splitter        reduce using rule 114 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)
    Term            reduce using rule 114 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)


state 193

    (17) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    KleeneC         reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    PositiveC       reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 17 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for Concat in state 37 resolved as shift
WARNING: shift/reduce conflict for Pow in state 55 resolved as shift
