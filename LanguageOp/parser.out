Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NextLine
    SuchThat

Grammar

Rule 0     S' -> expressions
Rule 1     BooleanExpression -> BooleanOr
Rule 2     AlphExpression -> AlphConcat
Rule 3     LangExpression -> StringPrefix
Rule 4     LangExpression -> StringSuffix
Rule 5     LangExpression -> AlphKleeneC
Rule 6     LangExpression -> AlphPositiveC
Rule 7     LangExpression -> LangKleeneC
Rule 8     LangExpression -> LangPositiveC
Rule 9     LangExpression -> VLang
Rule 10    BooleanOr -> BooleanAnd Or BooleanAnd
Rule 11    BooleanOr -> BooleanAnd
Rule 12    IntExpression -> Int
Rule 13    IntExpression -> StringLen
Rule 14    IntExpression -> VInt
Rule 15    StringExpression -> StringConcat
Rule 16    AlphConcat -> AlphConcat Concat AlphPow
Rule 17    AlphConcat -> AlphPow
Rule 18    StringConcat -> StringConcat Concat StringPow
Rule 19    StringConcat -> StringPow
Rule 20    StringLen -> LenOp StringExpression LenOp
Rule 21    StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 22    AlphKleeneC -> AlphExpression KleeneC IntExpression
Rule 23    expressions -> expressions expression Term
Rule 24    expressions -> expression Term
Rule 25    BooleanAnd -> BooleanAnd And BooleanAnd
Rule 26    BooleanAnd -> BooleanGroup
Rule 27    AlphPositiveC -> AlphExpression PositiveC IntExpression
Rule 28    StringPow -> StringPow Pow IntExpression
Rule 29    StringPow -> StringGroup
Rule 30    expression -> IntExpression
Rule 31    expression -> AlphExpression
Rule 32    expression -> StringExpression
Rule 33    expression -> LangExpression
Rule 34    expression -> ShowVal
Rule 35    expression -> Assigns
Rule 36    expression -> Declares
Rule 37    AlphPow -> AlphPow Pow IntExpression
Rule 38    AlphPow -> AlphGroup
Rule 39    LangKleeneC -> LangExpression KleeneC IntExpression
Rule 40    BooleanGroup -> LGroup BooleanExpression RGroup
Rule 41    BooleanGroup -> Boolean
Rule 42    BooleanGroup -> VBoolean
Rule 43    StringGroup -> LGroup StringExpression RGroup
Rule 44    StringGroup -> String
Rule 45    StringGroup -> VString
Rule 46    ShowVal -> Show expression
Rule 47    LangPositiveC -> LangExpression PositiveC IntExpression
Rule 48    AlphGroup -> LGroup AlphExpression RGroup
Rule 49    AlphGroup -> Alph
Rule 50    AlphGroup -> VAlph
Rule 51    StringPrefix -> Prefix StringExpression
Rule 52    Declares -> StringDeclare
Rule 53    Declares -> IntDeclare
Rule 54    Declares -> AlphDeclare
Rule 55    Declares -> LangDeclare
Rule 56    Declares -> BooleanDeclare
Rule 57    Boolean -> True
Rule 58    Boolean -> False
Rule 59    Alph -> OpenStruct StringList CloseStruct
Rule 60    Alph -> OpenStruct StringExpression CloseStruct
Rule 61    StringSuffix -> Suffix StringExpression
Rule 62    Assigns -> StringAssign
Rule 63    Assigns -> IntAssign
Rule 64    Assigns -> AlphAssign
Rule 65    Assigns -> LangAssign
Rule 66    Assigns -> BooleanAssign
Rule 67    StringList -> StringList Splitter StringExpression
Rule 68    StringList -> StringExpression Splitter StringExpression
Rule 69    StringDeclare -> StringType VarName
Rule 70    StringDeclare -> StringType VarName Eq StringExpression
Rule 71    StringDeclare -> StringDeclare Splitter VarName
Rule 72    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 73    StringAssign -> VString Eq StringExpression
Rule 74    IntDeclare -> IntType VarName
Rule 75    IntDeclare -> IntType VarName Eq IntExpression
Rule 76    IntDeclare -> IntDeclare Splitter VarName
Rule 77    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 78    IntAssign -> VarName Eq IntExpression
Rule 79    AlphDeclare -> AlphType VarName
Rule 80    AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 81    AlphDeclare -> AlphDeclare Splitter VarName
Rule 82    AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 83    AlphAssign -> VarName Eq AlphExpression
Rule 84    LangDeclare -> LangType VarName
Rule 85    LangDeclare -> LangType VarName Eq LangExpression
Rule 86    LangDeclare -> LangDeclare Splitter VarName
Rule 87    LangDeclare -> LangDeclare Splitter VarName Eq LangExpression
Rule 88    LangAssign -> VLang Eq LangExpression
Rule 89    BooleanDeclare -> BooleanType VarName
Rule 90    BooleanDeclare -> BooleanType VarName Eq BooleanExpression
Rule 91    BooleanDeclare -> BooleanDeclare Splitter VarName
Rule 92    BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression
Rule 93    BooleanAssign -> VarName Eq BooleanExpression

Terminals, with rules where they appear

AlphType             : 79 80
And                  : 25
BooleanType          : 89 90
CloseStruct          : 59 60
Concat               : 16 18
Eq                   : 70 72 73 75 77 78 80 82 83 85 87 88 90 92 93
False                : 58
Int                  : 12
IntType              : 74 75
KleeneC              : 22 39
LGroup               : 40 43 48
LangType             : 84 85
LenOp                : 20 20 21 21
NextLine             : 
On                   : 21
OpenStruct           : 59 60
Or                   : 10
PositiveC            : 27 47
Pow                  : 28 37
Prefix               : 51
RGroup               : 40 43 48
Show                 : 46
Splitter             : 67 68 71 72 76 77 81 82 86 87 91 92
String               : 44
StringType           : 69 70
SuchThat             : 
Suffix               : 61
Term                 : 23 24
True                 : 57
VAlph                : 50
VBoolean             : 42
VInt                 : 14
VLang                : 9 88
VString              : 45 73
VarName              : 69 70 71 72 74 75 76 77 78 79 80 81 82 83 84 85 86 87 89 90 91 92 93
error                : 

Nonterminals, with rules where they appear

Alph                 : 49
AlphAssign           : 64
AlphConcat           : 2 16
AlphDeclare          : 54 81 82
AlphExpression       : 21 22 27 31 48 80 82 83
AlphGroup            : 38
AlphKleeneC          : 5
AlphPositiveC        : 6
AlphPow              : 16 17 37
Assigns              : 35
Boolean              : 41
BooleanAnd           : 10 10 11 25 25
BooleanAssign        : 66
BooleanDeclare       : 56 91 92
BooleanExpression    : 40 90 92 93
BooleanGroup         : 26
BooleanOr            : 1
Declares             : 36
IntAssign            : 63
IntDeclare           : 53 76 77
IntExpression        : 22 27 28 30 37 39 47 75 77 78
LangAssign           : 65
LangDeclare          : 55 86 87
LangExpression       : 33 39 47 85 87 88
LangKleeneC          : 7
LangPositiveC        : 8
ShowVal              : 34
StringAssign         : 62
StringConcat         : 15 18
StringDeclare        : 52 71 72
StringExpression     : 20 21 32 43 51 60 61 67 68 68 70 72 73
StringGroup          : 29
StringLen            : 13
StringList           : 59 67
StringPow            : 18 19 28
StringPrefix         : 3
StringSuffix         : 4
expression           : 23 24 46
expressions          : 23 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (23) expressions -> . expressions expression Term
    (24) expressions -> . expression Term
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . VLang
    (46) ShowVal -> . Show expression
    (62) Assigns -> . StringAssign
    (63) Assigns -> . IntAssign
    (64) Assigns -> . AlphAssign
    (65) Assigns -> . LangAssign
    (66) Assigns -> . BooleanAssign
    (52) Declares -> . StringDeclare
    (53) Declares -> . IntDeclare
    (54) Declares -> . AlphDeclare
    (55) Declares -> . LangDeclare
    (56) Declares -> . BooleanDeclare
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (51) StringPrefix -> . Prefix StringExpression
    (61) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (27) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (39) LangKleeneC -> . LangExpression KleeneC IntExpression
    (47) LangPositiveC -> . LangExpression PositiveC IntExpression
    (73) StringAssign -> . VString Eq StringExpression
    (78) IntAssign -> . VarName Eq IntExpression
    (83) AlphAssign -> . VarName Eq AlphExpression
    (88) LangAssign -> . VLang Eq LangExpression
    (93) BooleanAssign -> . VarName Eq BooleanExpression
    (69) StringDeclare -> . StringType VarName
    (70) StringDeclare -> . StringType VarName Eq StringExpression
    (71) StringDeclare -> . StringDeclare Splitter VarName
    (72) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (74) IntDeclare -> . IntType VarName
    (75) IntDeclare -> . IntType VarName Eq IntExpression
    (76) IntDeclare -> . IntDeclare Splitter VarName
    (77) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (79) AlphDeclare -> . AlphType VarName
    (80) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (81) AlphDeclare -> . AlphDeclare Splitter VarName
    (82) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (84) LangDeclare -> . LangType VarName
    (85) LangDeclare -> . LangType VarName Eq LangExpression
    (86) LangDeclare -> . LangDeclare Splitter VarName
    (87) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (89) BooleanDeclare -> . BooleanType VarName
    (90) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (91) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (92) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    Int             shift and go to state 10
    VInt            shift and go to state 12
    VLang           shift and go to state 21
    Show            shift and go to state 22
    LenOp           shift and go to state 33
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    VString         shift and go to state 38
    VarName         shift and go to state 39
    StringType      shift and go to state 40
    IntType         shift and go to state 41
    AlphType        shift and go to state 42
    LangType        shift and go to state 43
    BooleanType     shift and go to state 44
    LGroup          shift and go to state 47
    VAlph           shift and go to state 49
    String          shift and go to state 50
    OpenStruct      shift and go to state 51

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    StringAssign                   shift and go to state 23
    IntAssign                      shift and go to state 24
    AlphAssign                     shift and go to state 25
    LangAssign                     shift and go to state 26
    BooleanAssign                  shift and go to state 27
    StringDeclare                  shift and go to state 28
    IntDeclare                     shift and go to state 29
    AlphDeclare                    shift and go to state 30
    LangDeclare                    shift and go to state 31
    BooleanDeclare                 shift and go to state 32
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 45
    StringGroup                    shift and go to state 46
    Alph                           shift and go to state 48

state 1

    (0) S' -> expressions .
    (23) expressions -> expressions . expression Term
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . VLang
    (46) ShowVal -> . Show expression
    (62) Assigns -> . StringAssign
    (63) Assigns -> . IntAssign
    (64) Assigns -> . AlphAssign
    (65) Assigns -> . LangAssign
    (66) Assigns -> . BooleanAssign
    (52) Declares -> . StringDeclare
    (53) Declares -> . IntDeclare
    (54) Declares -> . AlphDeclare
    (55) Declares -> . LangDeclare
    (56) Declares -> . BooleanDeclare
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (51) StringPrefix -> . Prefix StringExpression
    (61) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (27) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (39) LangKleeneC -> . LangExpression KleeneC IntExpression
    (47) LangPositiveC -> . LangExpression PositiveC IntExpression
    (73) StringAssign -> . VString Eq StringExpression
    (78) IntAssign -> . VarName Eq IntExpression
    (83) AlphAssign -> . VarName Eq AlphExpression
    (88) LangAssign -> . VLang Eq LangExpression
    (93) BooleanAssign -> . VarName Eq BooleanExpression
    (69) StringDeclare -> . StringType VarName
    (70) StringDeclare -> . StringType VarName Eq StringExpression
    (71) StringDeclare -> . StringDeclare Splitter VarName
    (72) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (74) IntDeclare -> . IntType VarName
    (75) IntDeclare -> . IntType VarName Eq IntExpression
    (76) IntDeclare -> . IntDeclare Splitter VarName
    (77) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (79) AlphDeclare -> . AlphType VarName
    (80) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (81) AlphDeclare -> . AlphDeclare Splitter VarName
    (82) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (84) LangDeclare -> . LangType VarName
    (85) LangDeclare -> . LangType VarName Eq LangExpression
    (86) LangDeclare -> . LangDeclare Splitter VarName
    (87) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (89) BooleanDeclare -> . BooleanType VarName
    (90) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (91) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (92) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    Int             shift and go to state 10
    VInt            shift and go to state 12
    VLang           shift and go to state 21
    Show            shift and go to state 22
    LenOp           shift and go to state 33
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    VString         shift and go to state 38
    VarName         shift and go to state 39
    StringType      shift and go to state 40
    IntType         shift and go to state 41
    AlphType        shift and go to state 42
    LangType        shift and go to state 43
    BooleanType     shift and go to state 44
    LGroup          shift and go to state 47
    VAlph           shift and go to state 49
    String          shift and go to state 50
    OpenStruct      shift and go to state 51

    expression                     shift and go to state 52
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    StringAssign                   shift and go to state 23
    IntAssign                      shift and go to state 24
    AlphAssign                     shift and go to state 25
    LangAssign                     shift and go to state 26
    BooleanAssign                  shift and go to state 27
    StringDeclare                  shift and go to state 28
    IntDeclare                     shift and go to state 29
    AlphDeclare                    shift and go to state 30
    LangDeclare                    shift and go to state 31
    BooleanDeclare                 shift and go to state 32
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 45
    StringGroup                    shift and go to state 46
    Alph                           shift and go to state 48

state 2

    (24) expressions -> expression . Term

    Term            shift and go to state 53


state 3

    (30) expression -> IntExpression .

    Term            reduce using rule 30 (expression -> IntExpression .)


state 4

    (31) expression -> AlphExpression .
    (22) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (27) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    Term            reduce using rule 31 (expression -> AlphExpression .)
    KleeneC         shift and go to state 54
    PositiveC       shift and go to state 55


state 5

    (32) expression -> StringExpression .

    Term            reduce using rule 32 (expression -> StringExpression .)


state 6

    (33) expression -> LangExpression .
    (39) LangKleeneC -> LangExpression . KleeneC IntExpression
    (47) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 33 (expression -> LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 7

    (34) expression -> ShowVal .

    Term            reduce using rule 34 (expression -> ShowVal .)


state 8

    (35) expression -> Assigns .

    Term            reduce using rule 35 (expression -> Assigns .)


state 9

    (36) expression -> Declares .

    Term            reduce using rule 36 (expression -> Declares .)


state 10

    (12) IntExpression -> Int .

    Term            reduce using rule 12 (IntExpression -> Int .)
    KleeneC         reduce using rule 12 (IntExpression -> Int .)
    PositiveC       reduce using rule 12 (IntExpression -> Int .)
    Splitter        reduce using rule 12 (IntExpression -> Int .)
    Pow             reduce using rule 12 (IntExpression -> Int .)
    Concat          reduce using rule 12 (IntExpression -> Int .)
    RGroup          reduce using rule 12 (IntExpression -> Int .)
    LenOp           reduce using rule 12 (IntExpression -> Int .)
    On              reduce using rule 12 (IntExpression -> Int .)
    CloseStruct     reduce using rule 12 (IntExpression -> Int .)


state 11

    (13) IntExpression -> StringLen .

    Term            reduce using rule 13 (IntExpression -> StringLen .)
    KleeneC         reduce using rule 13 (IntExpression -> StringLen .)
    PositiveC       reduce using rule 13 (IntExpression -> StringLen .)
    Splitter        reduce using rule 13 (IntExpression -> StringLen .)
    Pow             reduce using rule 13 (IntExpression -> StringLen .)
    Concat          reduce using rule 13 (IntExpression -> StringLen .)
    RGroup          reduce using rule 13 (IntExpression -> StringLen .)
    LenOp           reduce using rule 13 (IntExpression -> StringLen .)
    On              reduce using rule 13 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 13 (IntExpression -> StringLen .)


state 12

    (14) IntExpression -> VInt .

    Term            reduce using rule 14 (IntExpression -> VInt .)
    KleeneC         reduce using rule 14 (IntExpression -> VInt .)
    PositiveC       reduce using rule 14 (IntExpression -> VInt .)
    Splitter        reduce using rule 14 (IntExpression -> VInt .)
    Pow             reduce using rule 14 (IntExpression -> VInt .)
    Concat          reduce using rule 14 (IntExpression -> VInt .)
    RGroup          reduce using rule 14 (IntExpression -> VInt .)
    LenOp           reduce using rule 14 (IntExpression -> VInt .)
    On              reduce using rule 14 (IntExpression -> VInt .)
    CloseStruct     reduce using rule 14 (IntExpression -> VInt .)


state 13

    (2) AlphExpression -> AlphConcat .
    (16) AlphConcat -> AlphConcat . Concat AlphPow

    KleeneC         reduce using rule 2 (AlphExpression -> AlphConcat .)
    PositiveC       reduce using rule 2 (AlphExpression -> AlphConcat .)
    Term            reduce using rule 2 (AlphExpression -> AlphConcat .)
    RGroup          reduce using rule 2 (AlphExpression -> AlphConcat .)
    LenOp           reduce using rule 2 (AlphExpression -> AlphConcat .)
    Splitter        reduce using rule 2 (AlphExpression -> AlphConcat .)
    Concat          shift and go to state 58


state 14

    (15) StringExpression -> StringConcat .
    (18) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 15 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 15 (StringExpression -> StringConcat .)
    On              reduce using rule 15 (StringExpression -> StringConcat .)
    KleeneC         reduce using rule 15 (StringExpression -> StringConcat .)
    PositiveC       reduce using rule 15 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 15 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 15 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 15 (StringExpression -> StringConcat .)
    Concat          shift and go to state 59


state 15

    (3) LangExpression -> StringPrefix .

    KleeneC         reduce using rule 3 (LangExpression -> StringPrefix .)
    PositiveC       reduce using rule 3 (LangExpression -> StringPrefix .)
    Term            reduce using rule 3 (LangExpression -> StringPrefix .)
    Splitter        reduce using rule 3 (LangExpression -> StringPrefix .)


state 16

    (4) LangExpression -> StringSuffix .

    KleeneC         reduce using rule 4 (LangExpression -> StringSuffix .)
    PositiveC       reduce using rule 4 (LangExpression -> StringSuffix .)
    Term            reduce using rule 4 (LangExpression -> StringSuffix .)
    Splitter        reduce using rule 4 (LangExpression -> StringSuffix .)


state 17

    (5) LangExpression -> AlphKleeneC .

    KleeneC         reduce using rule 5 (LangExpression -> AlphKleeneC .)
    PositiveC       reduce using rule 5 (LangExpression -> AlphKleeneC .)
    Term            reduce using rule 5 (LangExpression -> AlphKleeneC .)
    Splitter        reduce using rule 5 (LangExpression -> AlphKleeneC .)


state 18

    (6) LangExpression -> AlphPositiveC .

    KleeneC         reduce using rule 6 (LangExpression -> AlphPositiveC .)
    PositiveC       reduce using rule 6 (LangExpression -> AlphPositiveC .)
    Term            reduce using rule 6 (LangExpression -> AlphPositiveC .)
    Splitter        reduce using rule 6 (LangExpression -> AlphPositiveC .)


state 19

    (7) LangExpression -> LangKleeneC .

    KleeneC         reduce using rule 7 (LangExpression -> LangKleeneC .)
    PositiveC       reduce using rule 7 (LangExpression -> LangKleeneC .)
    Term            reduce using rule 7 (LangExpression -> LangKleeneC .)
    Splitter        reduce using rule 7 (LangExpression -> LangKleeneC .)


state 20

    (8) LangExpression -> LangPositiveC .

    KleeneC         reduce using rule 8 (LangExpression -> LangPositiveC .)
    PositiveC       reduce using rule 8 (LangExpression -> LangPositiveC .)
    Term            reduce using rule 8 (LangExpression -> LangPositiveC .)
    Splitter        reduce using rule 8 (LangExpression -> LangPositiveC .)


state 21

    (9) LangExpression -> VLang .
    (88) LangAssign -> VLang . Eq LangExpression

    KleeneC         reduce using rule 9 (LangExpression -> VLang .)
    PositiveC       reduce using rule 9 (LangExpression -> VLang .)
    Term            reduce using rule 9 (LangExpression -> VLang .)
    Eq              shift and go to state 60


state 22

    (46) ShowVal -> Show . expression
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . VLang
    (46) ShowVal -> . Show expression
    (62) Assigns -> . StringAssign
    (63) Assigns -> . IntAssign
    (64) Assigns -> . AlphAssign
    (65) Assigns -> . LangAssign
    (66) Assigns -> . BooleanAssign
    (52) Declares -> . StringDeclare
    (53) Declares -> . IntDeclare
    (54) Declares -> . AlphDeclare
    (55) Declares -> . LangDeclare
    (56) Declares -> . BooleanDeclare
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (51) StringPrefix -> . Prefix StringExpression
    (61) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (27) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (39) LangKleeneC -> . LangExpression KleeneC IntExpression
    (47) LangPositiveC -> . LangExpression PositiveC IntExpression
    (73) StringAssign -> . VString Eq StringExpression
    (78) IntAssign -> . VarName Eq IntExpression
    (83) AlphAssign -> . VarName Eq AlphExpression
    (88) LangAssign -> . VLang Eq LangExpression
    (93) BooleanAssign -> . VarName Eq BooleanExpression
    (69) StringDeclare -> . StringType VarName
    (70) StringDeclare -> . StringType VarName Eq StringExpression
    (71) StringDeclare -> . StringDeclare Splitter VarName
    (72) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (74) IntDeclare -> . IntType VarName
    (75) IntDeclare -> . IntType VarName Eq IntExpression
    (76) IntDeclare -> . IntDeclare Splitter VarName
    (77) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (79) AlphDeclare -> . AlphType VarName
    (80) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (81) AlphDeclare -> . AlphDeclare Splitter VarName
    (82) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (84) LangDeclare -> . LangType VarName
    (85) LangDeclare -> . LangType VarName Eq LangExpression
    (86) LangDeclare -> . LangDeclare Splitter VarName
    (87) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (89) BooleanDeclare -> . BooleanType VarName
    (90) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (91) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (92) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    Int             shift and go to state 10
    VInt            shift and go to state 12
    VLang           shift and go to state 21
    Show            shift and go to state 22
    LenOp           shift and go to state 33
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    VString         shift and go to state 38
    VarName         shift and go to state 39
    StringType      shift and go to state 40
    IntType         shift and go to state 41
    AlphType        shift and go to state 42
    LangType        shift and go to state 43
    BooleanType     shift and go to state 44
    LGroup          shift and go to state 47
    VAlph           shift and go to state 49
    String          shift and go to state 50
    OpenStruct      shift and go to state 51

    expression                     shift and go to state 61
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    StringAssign                   shift and go to state 23
    IntAssign                      shift and go to state 24
    AlphAssign                     shift and go to state 25
    LangAssign                     shift and go to state 26
    BooleanAssign                  shift and go to state 27
    StringDeclare                  shift and go to state 28
    IntDeclare                     shift and go to state 29
    AlphDeclare                    shift and go to state 30
    LangDeclare                    shift and go to state 31
    BooleanDeclare                 shift and go to state 32
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 45
    StringGroup                    shift and go to state 46
    Alph                           shift and go to state 48

state 23

    (62) Assigns -> StringAssign .

    Term            reduce using rule 62 (Assigns -> StringAssign .)


state 24

    (63) Assigns -> IntAssign .

    Term            reduce using rule 63 (Assigns -> IntAssign .)


state 25

    (64) Assigns -> AlphAssign .

    Term            reduce using rule 64 (Assigns -> AlphAssign .)


state 26

    (65) Assigns -> LangAssign .

    Term            reduce using rule 65 (Assigns -> LangAssign .)


state 27

    (66) Assigns -> BooleanAssign .

    Term            reduce using rule 66 (Assigns -> BooleanAssign .)


state 28

    (52) Declares -> StringDeclare .
    (71) StringDeclare -> StringDeclare . Splitter VarName
    (72) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 52 (Declares -> StringDeclare .)
    Splitter        shift and go to state 62


state 29

    (53) Declares -> IntDeclare .
    (76) IntDeclare -> IntDeclare . Splitter VarName
    (77) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 53 (Declares -> IntDeclare .)
    Splitter        shift and go to state 63


state 30

    (54) Declares -> AlphDeclare .
    (81) AlphDeclare -> AlphDeclare . Splitter VarName
    (82) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 54 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 64


state 31

    (55) Declares -> LangDeclare .
    (86) LangDeclare -> LangDeclare . Splitter VarName
    (87) LangDeclare -> LangDeclare . Splitter VarName Eq LangExpression

    Term            reduce using rule 55 (Declares -> LangDeclare .)
    Splitter        shift and go to state 65


state 32

    (56) Declares -> BooleanDeclare .
    (91) BooleanDeclare -> BooleanDeclare . Splitter VarName
    (92) BooleanDeclare -> BooleanDeclare . Splitter VarName Eq BooleanExpression

    Term            reduce using rule 56 (Declares -> BooleanDeclare .)
    Splitter        shift and go to state 66


state 33

    (20) StringLen -> LenOp . StringExpression LenOp
    (21) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 67
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 34

    (17) AlphConcat -> AlphPow .
    (37) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 17 (AlphConcat -> AlphPow .)
    KleeneC         reduce using rule 17 (AlphConcat -> AlphPow .)
    PositiveC       reduce using rule 17 (AlphConcat -> AlphPow .)
    Term            reduce using rule 17 (AlphConcat -> AlphPow .)
    RGroup          reduce using rule 17 (AlphConcat -> AlphPow .)
    LenOp           reduce using rule 17 (AlphConcat -> AlphPow .)
    Splitter        reduce using rule 17 (AlphConcat -> AlphPow .)
    Pow             shift and go to state 70


state 35

    (19) StringConcat -> StringPow .
    (28) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 19 (StringConcat -> StringPow .)
    Term            reduce using rule 19 (StringConcat -> StringPow .)
    LenOp           reduce using rule 19 (StringConcat -> StringPow .)
    On              reduce using rule 19 (StringConcat -> StringPow .)
    KleeneC         reduce using rule 19 (StringConcat -> StringPow .)
    PositiveC       reduce using rule 19 (StringConcat -> StringPow .)
    Splitter        reduce using rule 19 (StringConcat -> StringPow .)
    RGroup          reduce using rule 19 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 19 (StringConcat -> StringPow .)
    Pow             shift and go to state 71


state 36

    (51) StringPrefix -> Prefix . StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 72
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 37

    (61) StringSuffix -> Suffix . StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 73
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 38

    (73) StringAssign -> VString . Eq StringExpression
    (45) StringGroup -> VString .

    Eq              shift and go to state 74
    Pow             reduce using rule 45 (StringGroup -> VString .)
    Concat          reduce using rule 45 (StringGroup -> VString .)
    Term            reduce using rule 45 (StringGroup -> VString .)


state 39

    (78) IntAssign -> VarName . Eq IntExpression
    (83) AlphAssign -> VarName . Eq AlphExpression
    (93) BooleanAssign -> VarName . Eq BooleanExpression

    Eq              shift and go to state 75


state 40

    (69) StringDeclare -> StringType . VarName
    (70) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 76


state 41

    (74) IntDeclare -> IntType . VarName
    (75) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 77


state 42

    (79) AlphDeclare -> AlphType . VarName
    (80) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 78


state 43

    (84) LangDeclare -> LangType . VarName
    (85) LangDeclare -> LangType . VarName Eq LangExpression

    VarName         shift and go to state 79


state 44

    (89) BooleanDeclare -> BooleanType . VarName
    (90) BooleanDeclare -> BooleanType . VarName Eq BooleanExpression

    VarName         shift and go to state 80


state 45

    (38) AlphPow -> AlphGroup .

    Pow             reduce using rule 38 (AlphPow -> AlphGroup .)
    Concat          reduce using rule 38 (AlphPow -> AlphGroup .)
    KleeneC         reduce using rule 38 (AlphPow -> AlphGroup .)
    PositiveC       reduce using rule 38 (AlphPow -> AlphGroup .)
    Term            reduce using rule 38 (AlphPow -> AlphGroup .)
    RGroup          reduce using rule 38 (AlphPow -> AlphGroup .)
    LenOp           reduce using rule 38 (AlphPow -> AlphGroup .)
    Splitter        reduce using rule 38 (AlphPow -> AlphGroup .)


state 46

    (29) StringPow -> StringGroup .

    Pow             reduce using rule 29 (StringPow -> StringGroup .)
    Concat          reduce using rule 29 (StringPow -> StringGroup .)
    Term            reduce using rule 29 (StringPow -> StringGroup .)
    LenOp           reduce using rule 29 (StringPow -> StringGroup .)
    On              reduce using rule 29 (StringPow -> StringGroup .)
    KleeneC         reduce using rule 29 (StringPow -> StringGroup .)
    PositiveC       reduce using rule 29 (StringPow -> StringGroup .)
    Splitter        reduce using rule 29 (StringPow -> StringGroup .)
    RGroup          reduce using rule 29 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 29 (StringPow -> StringGroup .)


state 47

    (48) AlphGroup -> LGroup . AlphExpression RGroup
    (43) StringGroup -> LGroup . StringExpression RGroup
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 47
    VAlph           shift and go to state 49
    String          shift and go to state 50
    VString         shift and go to state 69
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 81
    StringExpression               shift and go to state 82
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 45
    StringGroup                    shift and go to state 46
    Alph                           shift and go to state 48

state 48

    (49) AlphGroup -> Alph .

    Pow             reduce using rule 49 (AlphGroup -> Alph .)
    Concat          reduce using rule 49 (AlphGroup -> Alph .)
    KleeneC         reduce using rule 49 (AlphGroup -> Alph .)
    PositiveC       reduce using rule 49 (AlphGroup -> Alph .)
    Term            reduce using rule 49 (AlphGroup -> Alph .)
    RGroup          reduce using rule 49 (AlphGroup -> Alph .)
    LenOp           reduce using rule 49 (AlphGroup -> Alph .)
    Splitter        reduce using rule 49 (AlphGroup -> Alph .)


state 49

    (50) AlphGroup -> VAlph .

    Pow             reduce using rule 50 (AlphGroup -> VAlph .)
    Concat          reduce using rule 50 (AlphGroup -> VAlph .)
    KleeneC         reduce using rule 50 (AlphGroup -> VAlph .)
    PositiveC       reduce using rule 50 (AlphGroup -> VAlph .)
    Term            reduce using rule 50 (AlphGroup -> VAlph .)
    RGroup          reduce using rule 50 (AlphGroup -> VAlph .)
    LenOp           reduce using rule 50 (AlphGroup -> VAlph .)
    Splitter        reduce using rule 50 (AlphGroup -> VAlph .)


state 50

    (44) StringGroup -> String .

    Pow             reduce using rule 44 (StringGroup -> String .)
    Concat          reduce using rule 44 (StringGroup -> String .)
    Term            reduce using rule 44 (StringGroup -> String .)
    LenOp           reduce using rule 44 (StringGroup -> String .)
    On              reduce using rule 44 (StringGroup -> String .)
    KleeneC         reduce using rule 44 (StringGroup -> String .)
    PositiveC       reduce using rule 44 (StringGroup -> String .)
    Splitter        reduce using rule 44 (StringGroup -> String .)
    RGroup          reduce using rule 44 (StringGroup -> String .)
    CloseStruct     reduce using rule 44 (StringGroup -> String .)


state 51

    (59) Alph -> OpenStruct . StringList CloseStruct
    (60) Alph -> OpenStruct . StringExpression CloseStruct
    (67) StringList -> . StringList Splitter StringExpression
    (68) StringList -> . StringExpression Splitter StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringList                     shift and go to state 83
    StringExpression               shift and go to state 84
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 52

    (23) expressions -> expressions expression . Term

    Term            shift and go to state 85


state 53

    (24) expressions -> expression Term .

    Int             reduce using rule 24 (expressions -> expression Term .)
    VInt            reduce using rule 24 (expressions -> expression Term .)
    VLang           reduce using rule 24 (expressions -> expression Term .)
    Show            reduce using rule 24 (expressions -> expression Term .)
    LenOp           reduce using rule 24 (expressions -> expression Term .)
    Prefix          reduce using rule 24 (expressions -> expression Term .)
    Suffix          reduce using rule 24 (expressions -> expression Term .)
    VString         reduce using rule 24 (expressions -> expression Term .)
    VarName         reduce using rule 24 (expressions -> expression Term .)
    StringType      reduce using rule 24 (expressions -> expression Term .)
    IntType         reduce using rule 24 (expressions -> expression Term .)
    AlphType        reduce using rule 24 (expressions -> expression Term .)
    LangType        reduce using rule 24 (expressions -> expression Term .)
    BooleanType     reduce using rule 24 (expressions -> expression Term .)
    LGroup          reduce using rule 24 (expressions -> expression Term .)
    VAlph           reduce using rule 24 (expressions -> expression Term .)
    String          reduce using rule 24 (expressions -> expression Term .)
    OpenStruct      reduce using rule 24 (expressions -> expression Term .)
    $end            reduce using rule 24 (expressions -> expression Term .)


state 54

    (22) AlphKleeneC -> AlphExpression KleeneC . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 86
    StringLen                      shift and go to state 11

state 55

    (27) AlphPositiveC -> AlphExpression PositiveC . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 87
    StringLen                      shift and go to state 11

state 56

    (39) LangKleeneC -> LangExpression KleeneC . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 88
    StringLen                      shift and go to state 11

state 57

    (47) LangPositiveC -> LangExpression PositiveC . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 89
    StringLen                      shift and go to state 11

state 58

    (16) AlphConcat -> AlphConcat Concat . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    AlphPow                        shift and go to state 90
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 59

    (18) StringConcat -> StringConcat Concat . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringPow                      shift and go to state 92
    StringGroup                    shift and go to state 46

state 60

    (88) LangAssign -> VLang Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . VLang
    (51) StringPrefix -> . Prefix StringExpression
    (61) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (27) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (39) LangKleeneC -> . LangExpression KleeneC IntExpression
    (47) LangPositiveC -> . LangExpression PositiveC IntExpression
    (2) AlphExpression -> . AlphConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    VLang           shift and go to state 93
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    LangExpression                 shift and go to state 94
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    AlphExpression                 shift and go to state 95
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 61

    (46) ShowVal -> Show expression .

    Term            reduce using rule 46 (ShowVal -> Show expression .)


state 62

    (71) StringDeclare -> StringDeclare Splitter . VarName
    (72) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 96


state 63

    (76) IntDeclare -> IntDeclare Splitter . VarName
    (77) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 97


state 64

    (81) AlphDeclare -> AlphDeclare Splitter . VarName
    (82) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 98


state 65

    (86) LangDeclare -> LangDeclare Splitter . VarName
    (87) LangDeclare -> LangDeclare Splitter . VarName Eq LangExpression

    VarName         shift and go to state 99


state 66

    (91) BooleanDeclare -> BooleanDeclare Splitter . VarName
    (92) BooleanDeclare -> BooleanDeclare Splitter . VarName Eq BooleanExpression

    VarName         shift and go to state 100


state 67

    (20) StringLen -> LenOp StringExpression . LenOp
    (21) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 101
    On              shift and go to state 102


state 68

    (43) StringGroup -> LGroup . StringExpression RGroup
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 82
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 69

    (45) StringGroup -> VString .

    Pow             reduce using rule 45 (StringGroup -> VString .)
    Concat          reduce using rule 45 (StringGroup -> VString .)
    LenOp           reduce using rule 45 (StringGroup -> VString .)
    On              reduce using rule 45 (StringGroup -> VString .)
    KleeneC         reduce using rule 45 (StringGroup -> VString .)
    PositiveC       reduce using rule 45 (StringGroup -> VString .)
    Term            reduce using rule 45 (StringGroup -> VString .)
    Splitter        reduce using rule 45 (StringGroup -> VString .)
    RGroup          reduce using rule 45 (StringGroup -> VString .)
    CloseStruct     reduce using rule 45 (StringGroup -> VString .)


state 70

    (37) AlphPow -> AlphPow Pow . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 103
    StringLen                      shift and go to state 11

state 71

    (28) StringPow -> StringPow Pow . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 104
    StringLen                      shift and go to state 11

state 72

    (51) StringPrefix -> Prefix StringExpression .

    KleeneC         reduce using rule 51 (StringPrefix -> Prefix StringExpression .)
    PositiveC       reduce using rule 51 (StringPrefix -> Prefix StringExpression .)
    Term            reduce using rule 51 (StringPrefix -> Prefix StringExpression .)
    Splitter        reduce using rule 51 (StringPrefix -> Prefix StringExpression .)


state 73

    (61) StringSuffix -> Suffix StringExpression .

    KleeneC         reduce using rule 61 (StringSuffix -> Suffix StringExpression .)
    PositiveC       reduce using rule 61 (StringSuffix -> Suffix StringExpression .)
    Term            reduce using rule 61 (StringSuffix -> Suffix StringExpression .)
    Splitter        reduce using rule 61 (StringSuffix -> Suffix StringExpression .)


state 74

    (73) StringAssign -> VString Eq . StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 105
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 75

    (78) IntAssign -> VarName Eq . IntExpression
    (83) AlphAssign -> VarName Eq . AlphExpression
    (93) BooleanAssign -> VarName Eq . BooleanExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (1) BooleanExpression -> . BooleanOr
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (10) BooleanOr -> . BooleanAnd Or BooleanAnd
    (11) BooleanOr -> . BooleanAnd
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (40) BooleanGroup -> . LGroup BooleanExpression RGroup
    (41) BooleanGroup -> . Boolean
    (42) BooleanGroup -> . VBoolean
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct
    (57) Boolean -> . True
    (58) Boolean -> . False

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33
    LGroup          shift and go to state 112
    VAlph           shift and go to state 49
    VBoolean        shift and go to state 114
    OpenStruct      shift and go to state 51
    True            shift and go to state 115
    False           shift and go to state 116

    IntExpression                  shift and go to state 106
    AlphExpression                 shift and go to state 107
    BooleanExpression              shift and go to state 108
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    BooleanOr                      shift and go to state 109
    AlphPow                        shift and go to state 34
    BooleanAnd                     shift and go to state 110
    AlphGroup                      shift and go to state 45
    BooleanGroup                   shift and go to state 111
    Alph                           shift and go to state 48
    Boolean                        shift and go to state 113

state 76

    (69) StringDeclare -> StringType VarName .
    (70) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 69 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 69 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 117


state 77

    (74) IntDeclare -> IntType VarName .
    (75) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 74 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 74 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 118


state 78

    (79) AlphDeclare -> AlphType VarName .
    (80) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 79 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 79 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 119


state 79

    (84) LangDeclare -> LangType VarName .
    (85) LangDeclare -> LangType VarName . Eq LangExpression

    Splitter        reduce using rule 84 (LangDeclare -> LangType VarName .)
    Term            reduce using rule 84 (LangDeclare -> LangType VarName .)
    Eq              shift and go to state 120


state 80

    (89) BooleanDeclare -> BooleanType VarName .
    (90) BooleanDeclare -> BooleanType VarName . Eq BooleanExpression

    Splitter        reduce using rule 89 (BooleanDeclare -> BooleanType VarName .)
    Term            reduce using rule 89 (BooleanDeclare -> BooleanType VarName .)
    Eq              shift and go to state 121


state 81

    (48) AlphGroup -> LGroup AlphExpression . RGroup

    RGroup          shift and go to state 122


state 82

    (43) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 123


state 83

    (59) Alph -> OpenStruct StringList . CloseStruct
    (67) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 124
    Splitter        shift and go to state 125


state 84

    (60) Alph -> OpenStruct StringExpression . CloseStruct
    (68) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 126
    Splitter        shift and go to state 127


state 85

    (23) expressions -> expressions expression Term .

    Int             reduce using rule 23 (expressions -> expressions expression Term .)
    VInt            reduce using rule 23 (expressions -> expressions expression Term .)
    VLang           reduce using rule 23 (expressions -> expressions expression Term .)
    Show            reduce using rule 23 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 23 (expressions -> expressions expression Term .)
    Prefix          reduce using rule 23 (expressions -> expressions expression Term .)
    Suffix          reduce using rule 23 (expressions -> expressions expression Term .)
    VString         reduce using rule 23 (expressions -> expressions expression Term .)
    VarName         reduce using rule 23 (expressions -> expressions expression Term .)
    StringType      reduce using rule 23 (expressions -> expressions expression Term .)
    IntType         reduce using rule 23 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 23 (expressions -> expressions expression Term .)
    LangType        reduce using rule 23 (expressions -> expressions expression Term .)
    BooleanType     reduce using rule 23 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 23 (expressions -> expressions expression Term .)
    VAlph           reduce using rule 23 (expressions -> expressions expression Term .)
    String          reduce using rule 23 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 23 (expressions -> expressions expression Term .)
    $end            reduce using rule 23 (expressions -> expressions expression Term .)


state 86

    (22) AlphKleeneC -> AlphExpression KleeneC IntExpression .

    KleeneC         reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Term            reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Splitter        reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)


state 87

    (27) AlphPositiveC -> AlphExpression PositiveC IntExpression .

    KleeneC         reduce using rule 27 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 27 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Term            reduce using rule 27 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Splitter        reduce using rule 27 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)


state 88

    (39) LangKleeneC -> LangExpression KleeneC IntExpression .

    KleeneC         reduce using rule 39 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 39 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Term            reduce using rule 39 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Splitter        reduce using rule 39 (LangKleeneC -> LangExpression KleeneC IntExpression .)


state 89

    (47) LangPositiveC -> LangExpression PositiveC IntExpression .

    KleeneC         reduce using rule 47 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 47 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Term            reduce using rule 47 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Splitter        reduce using rule 47 (LangPositiveC -> LangExpression PositiveC IntExpression .)


state 90

    (16) AlphConcat -> AlphConcat Concat AlphPow .
    (37) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 16 (AlphConcat -> AlphConcat Concat AlphPow .)
    KleeneC         reduce using rule 16 (AlphConcat -> AlphConcat Concat AlphPow .)
    PositiveC       reduce using rule 16 (AlphConcat -> AlphConcat Concat AlphPow .)
    Term            reduce using rule 16 (AlphConcat -> AlphConcat Concat AlphPow .)
    RGroup          reduce using rule 16 (AlphConcat -> AlphConcat Concat AlphPow .)
    LenOp           reduce using rule 16 (AlphConcat -> AlphConcat Concat AlphPow .)
    Splitter        reduce using rule 16 (AlphConcat -> AlphConcat Concat AlphPow .)
    Pow             shift and go to state 70


state 91

    (48) AlphGroup -> LGroup . AlphExpression RGroup
    (2) AlphExpression -> . AlphConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 81
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 92

    (18) StringConcat -> StringConcat Concat StringPow .
    (28) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    KleeneC         reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    PositiveC       reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 18 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 71


state 93

    (9) LangExpression -> VLang .

    KleeneC         reduce using rule 9 (LangExpression -> VLang .)
    PositiveC       reduce using rule 9 (LangExpression -> VLang .)
    Term            reduce using rule 9 (LangExpression -> VLang .)
    Splitter        reduce using rule 9 (LangExpression -> VLang .)


state 94

    (88) LangAssign -> VLang Eq LangExpression .
    (39) LangKleeneC -> LangExpression . KleeneC IntExpression
    (47) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 88 (LangAssign -> VLang Eq LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 95

    (22) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (27) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    KleeneC         shift and go to state 54
    PositiveC       shift and go to state 55


state 96

    (71) StringDeclare -> StringDeclare Splitter VarName .
    (72) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 71 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 71 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 128


state 97

    (76) IntDeclare -> IntDeclare Splitter VarName .
    (77) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 76 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 76 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 129


state 98

    (81) AlphDeclare -> AlphDeclare Splitter VarName .
    (82) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 81 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 81 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 130


state 99

    (86) LangDeclare -> LangDeclare Splitter VarName .
    (87) LangDeclare -> LangDeclare Splitter VarName . Eq LangExpression

    Splitter        reduce using rule 86 (LangDeclare -> LangDeclare Splitter VarName .)
    Term            reduce using rule 86 (LangDeclare -> LangDeclare Splitter VarName .)
    Eq              shift and go to state 131


state 100

    (91) BooleanDeclare -> BooleanDeclare Splitter VarName .
    (92) BooleanDeclare -> BooleanDeclare Splitter VarName . Eq BooleanExpression

    Splitter        reduce using rule 91 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Term            reduce using rule 91 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Eq              shift and go to state 132


state 101

    (20) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    KleeneC         reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    PositiveC       reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 20 (StringLen -> LenOp StringExpression LenOp .)


state 102

    (21) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (2) AlphExpression -> . AlphConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 133
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 103

    (37) AlphPow -> AlphPow Pow IntExpression .

    Pow             reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Concat          reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    KleeneC         reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    PositiveC       reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Term            reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    RGroup          reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    LenOp           reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Splitter        reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)


state 104

    (28) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    KleeneC         reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    PositiveC       reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 28 (StringPow -> StringPow Pow IntExpression .)


state 105

    (73) StringAssign -> VString Eq StringExpression .

    Term            reduce using rule 73 (StringAssign -> VString Eq StringExpression .)


state 106

    (78) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 78 (IntAssign -> VarName Eq IntExpression .)


state 107

    (83) AlphAssign -> VarName Eq AlphExpression .

    Term            reduce using rule 83 (AlphAssign -> VarName Eq AlphExpression .)


state 108

    (93) BooleanAssign -> VarName Eq BooleanExpression .

    Term            reduce using rule 93 (BooleanAssign -> VarName Eq BooleanExpression .)


state 109

    (1) BooleanExpression -> BooleanOr .

    Term            reduce using rule 1 (BooleanExpression -> BooleanOr .)
    RGroup          reduce using rule 1 (BooleanExpression -> BooleanOr .)
    Splitter        reduce using rule 1 (BooleanExpression -> BooleanOr .)


state 110

    (10) BooleanOr -> BooleanAnd . Or BooleanAnd
    (11) BooleanOr -> BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanAnd

    Or              shift and go to state 134
    Term            reduce using rule 11 (BooleanOr -> BooleanAnd .)
    RGroup          reduce using rule 11 (BooleanOr -> BooleanAnd .)
    Splitter        reduce using rule 11 (BooleanOr -> BooleanAnd .)
    And             shift and go to state 135


state 111

    (26) BooleanAnd -> BooleanGroup .

    Or              reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    And             reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Term            reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    RGroup          reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Splitter        reduce using rule 26 (BooleanAnd -> BooleanGroup .)


state 112

    (48) AlphGroup -> LGroup . AlphExpression RGroup
    (40) BooleanGroup -> LGroup . BooleanExpression RGroup
    (2) AlphExpression -> . AlphConcat
    (1) BooleanExpression -> . BooleanOr
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (10) BooleanOr -> . BooleanAnd Or BooleanAnd
    (11) BooleanOr -> . BooleanAnd
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (40) BooleanGroup -> . LGroup BooleanExpression RGroup
    (41) BooleanGroup -> . Boolean
    (42) BooleanGroup -> . VBoolean
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct
    (57) Boolean -> . True
    (58) Boolean -> . False

    LGroup          shift and go to state 112
    VAlph           shift and go to state 49
    VBoolean        shift and go to state 114
    OpenStruct      shift and go to state 51
    True            shift and go to state 115
    False           shift and go to state 116

    AlphExpression                 shift and go to state 81
    BooleanExpression              shift and go to state 136
    AlphConcat                     shift and go to state 13
    BooleanOr                      shift and go to state 109
    AlphPow                        shift and go to state 34
    BooleanAnd                     shift and go to state 110
    AlphGroup                      shift and go to state 45
    BooleanGroup                   shift and go to state 111
    Alph                           shift and go to state 48
    Boolean                        shift and go to state 113

state 113

    (41) BooleanGroup -> Boolean .

    Or              reduce using rule 41 (BooleanGroup -> Boolean .)
    And             reduce using rule 41 (BooleanGroup -> Boolean .)
    Term            reduce using rule 41 (BooleanGroup -> Boolean .)
    RGroup          reduce using rule 41 (BooleanGroup -> Boolean .)
    Splitter        reduce using rule 41 (BooleanGroup -> Boolean .)


state 114

    (42) BooleanGroup -> VBoolean .

    Or              reduce using rule 42 (BooleanGroup -> VBoolean .)
    And             reduce using rule 42 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 42 (BooleanGroup -> VBoolean .)
    RGroup          reduce using rule 42 (BooleanGroup -> VBoolean .)
    Splitter        reduce using rule 42 (BooleanGroup -> VBoolean .)


state 115

    (57) Boolean -> True .

    Or              reduce using rule 57 (Boolean -> True .)
    And             reduce using rule 57 (Boolean -> True .)
    Term            reduce using rule 57 (Boolean -> True .)
    RGroup          reduce using rule 57 (Boolean -> True .)
    Splitter        reduce using rule 57 (Boolean -> True .)


state 116

    (58) Boolean -> False .

    Or              reduce using rule 58 (Boolean -> False .)
    And             reduce using rule 58 (Boolean -> False .)
    Term            reduce using rule 58 (Boolean -> False .)
    RGroup          reduce using rule 58 (Boolean -> False .)
    Splitter        reduce using rule 58 (Boolean -> False .)


state 117

    (70) StringDeclare -> StringType VarName Eq . StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 137
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 118

    (75) IntDeclare -> IntType VarName Eq . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 138
    StringLen                      shift and go to state 11

state 119

    (80) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (2) AlphExpression -> . AlphConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 139
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 120

    (85) LangDeclare -> LangType VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . VLang
    (51) StringPrefix -> . Prefix StringExpression
    (61) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (27) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (39) LangKleeneC -> . LangExpression KleeneC IntExpression
    (47) LangPositiveC -> . LangExpression PositiveC IntExpression
    (2) AlphExpression -> . AlphConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    VLang           shift and go to state 93
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    LangExpression                 shift and go to state 140
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    AlphExpression                 shift and go to state 95
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 121

    (90) BooleanDeclare -> BooleanType VarName Eq . BooleanExpression
    (1) BooleanExpression -> . BooleanOr
    (10) BooleanOr -> . BooleanAnd Or BooleanAnd
    (11) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (40) BooleanGroup -> . LGroup BooleanExpression RGroup
    (41) BooleanGroup -> . Boolean
    (42) BooleanGroup -> . VBoolean
    (57) Boolean -> . True
    (58) Boolean -> . False

    LGroup          shift and go to state 142
    VBoolean        shift and go to state 114
    True            shift and go to state 115
    False           shift and go to state 116

    BooleanExpression              shift and go to state 141
    BooleanOr                      shift and go to state 109
    BooleanAnd                     shift and go to state 110
    BooleanGroup                   shift and go to state 111
    Boolean                        shift and go to state 113

state 122

    (48) AlphGroup -> LGroup AlphExpression RGroup .

    Pow             reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)
    Concat          reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)
    KleeneC         reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)
    PositiveC       reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)
    Term            reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)
    RGroup          reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)
    LenOp           reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)
    Splitter        reduce using rule 48 (AlphGroup -> LGroup AlphExpression RGroup .)


state 123

    (43) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    KleeneC         reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    PositiveC       reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 43 (StringGroup -> LGroup StringExpression RGroup .)


state 124

    (59) Alph -> OpenStruct StringList CloseStruct .

    Pow             reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)
    Concat          reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)
    KleeneC         reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)
    PositiveC       reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)
    Term            reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)
    RGroup          reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 59 (Alph -> OpenStruct StringList CloseStruct .)


state 125

    (67) StringList -> StringList Splitter . StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 143
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 126

    (60) Alph -> OpenStruct StringExpression CloseStruct .

    Pow             reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)
    Concat          reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)
    KleeneC         reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)
    PositiveC       reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)
    Term            reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)
    RGroup          reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 60 (Alph -> OpenStruct StringExpression CloseStruct .)


state 127

    (68) StringList -> StringExpression Splitter . StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 144
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 128

    (72) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (15) StringExpression -> . StringConcat
    (18) StringConcat -> . StringConcat Concat StringPow
    (19) StringConcat -> . StringPow
    (28) StringPow -> . StringPow Pow IntExpression
    (29) StringPow -> . StringGroup
    (43) StringGroup -> . LGroup StringExpression RGroup
    (44) StringGroup -> . String
    (45) StringGroup -> . VString

    LGroup          shift and go to state 68
    String          shift and go to state 50
    VString         shift and go to state 69

    StringExpression               shift and go to state 145
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 46

state 129

    (77) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (12) IntExpression -> . Int
    (13) IntExpression -> . StringLen
    (14) IntExpression -> . VInt
    (20) StringLen -> . LenOp StringExpression LenOp
    (21) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 146
    StringLen                      shift and go to state 11

state 130

    (82) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (2) AlphExpression -> . AlphConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 147
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 131

    (87) LangDeclare -> LangDeclare Splitter VarName Eq . LangExpression
    (3) LangExpression -> . StringPrefix
    (4) LangExpression -> . StringSuffix
    (5) LangExpression -> . AlphKleeneC
    (6) LangExpression -> . AlphPositiveC
    (7) LangExpression -> . LangKleeneC
    (8) LangExpression -> . LangPositiveC
    (9) LangExpression -> . VLang
    (51) StringPrefix -> . Prefix StringExpression
    (61) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (27) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (39) LangKleeneC -> . LangExpression KleeneC IntExpression
    (47) LangPositiveC -> . LangExpression PositiveC IntExpression
    (2) AlphExpression -> . AlphConcat
    (16) AlphConcat -> . AlphConcat Concat AlphPow
    (17) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (48) AlphGroup -> . LGroup AlphExpression RGroup
    (49) AlphGroup -> . Alph
    (50) AlphGroup -> . VAlph
    (59) Alph -> . OpenStruct StringList CloseStruct
    (60) Alph -> . OpenStruct StringExpression CloseStruct

    VLang           shift and go to state 93
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    LGroup          shift and go to state 91
    VAlph           shift and go to state 49
    OpenStruct      shift and go to state 51

    LangExpression                 shift and go to state 148
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    AlphExpression                 shift and go to state 95
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 45
    Alph                           shift and go to state 48

state 132

    (92) BooleanDeclare -> BooleanDeclare Splitter VarName Eq . BooleanExpression
    (1) BooleanExpression -> . BooleanOr
    (10) BooleanOr -> . BooleanAnd Or BooleanAnd
    (11) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (40) BooleanGroup -> . LGroup BooleanExpression RGroup
    (41) BooleanGroup -> . Boolean
    (42) BooleanGroup -> . VBoolean
    (57) Boolean -> . True
    (58) Boolean -> . False

    LGroup          shift and go to state 142
    VBoolean        shift and go to state 114
    True            shift and go to state 115
    False           shift and go to state 116

    BooleanExpression              shift and go to state 149
    BooleanOr                      shift and go to state 109
    BooleanAnd                     shift and go to state 110
    BooleanGroup                   shift and go to state 111
    Boolean                        shift and go to state 113

state 133

    (21) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 150


state 134

    (10) BooleanOr -> BooleanAnd Or . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (40) BooleanGroup -> . LGroup BooleanExpression RGroup
    (41) BooleanGroup -> . Boolean
    (42) BooleanGroup -> . VBoolean
    (57) Boolean -> . True
    (58) Boolean -> . False

    LGroup          shift and go to state 142
    VBoolean        shift and go to state 114
    True            shift and go to state 115
    False           shift and go to state 116

    BooleanAnd                     shift and go to state 151
    BooleanGroup                   shift and go to state 111
    Boolean                        shift and go to state 113

state 135

    (25) BooleanAnd -> BooleanAnd And . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (40) BooleanGroup -> . LGroup BooleanExpression RGroup
    (41) BooleanGroup -> . Boolean
    (42) BooleanGroup -> . VBoolean
    (57) Boolean -> . True
    (58) Boolean -> . False

    LGroup          shift and go to state 142
    VBoolean        shift and go to state 114
    True            shift and go to state 115
    False           shift and go to state 116

    BooleanAnd                     shift and go to state 152
    BooleanGroup                   shift and go to state 111
    Boolean                        shift and go to state 113

state 136

    (40) BooleanGroup -> LGroup BooleanExpression . RGroup

    RGroup          shift and go to state 153


state 137

    (70) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 70 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 70 (StringDeclare -> StringType VarName Eq StringExpression .)


state 138

    (75) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 75 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 75 (IntDeclare -> IntType VarName Eq IntExpression .)


state 139

    (80) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 80 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 80 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 140

    (85) LangDeclare -> LangType VarName Eq LangExpression .
    (39) LangKleeneC -> LangExpression . KleeneC IntExpression
    (47) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 85 (LangDeclare -> LangType VarName Eq LangExpression .)
    Term            reduce using rule 85 (LangDeclare -> LangType VarName Eq LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 141

    (90) BooleanDeclare -> BooleanType VarName Eq BooleanExpression .

    Splitter        reduce using rule 90 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)
    Term            reduce using rule 90 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)


state 142

    (40) BooleanGroup -> LGroup . BooleanExpression RGroup
    (1) BooleanExpression -> . BooleanOr
    (10) BooleanOr -> . BooleanAnd Or BooleanAnd
    (11) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (40) BooleanGroup -> . LGroup BooleanExpression RGroup
    (41) BooleanGroup -> . Boolean
    (42) BooleanGroup -> . VBoolean
    (57) Boolean -> . True
    (58) Boolean -> . False

    LGroup          shift and go to state 142
    VBoolean        shift and go to state 114
    True            shift and go to state 115
    False           shift and go to state 116

    BooleanExpression              shift and go to state 136
    BooleanOr                      shift and go to state 109
    BooleanAnd                     shift and go to state 110
    BooleanGroup                   shift and go to state 111
    Boolean                        shift and go to state 113

state 143

    (67) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 67 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 67 (StringList -> StringList Splitter StringExpression .)


state 144

    (68) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 68 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 68 (StringList -> StringExpression Splitter StringExpression .)


state 145

    (72) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 72 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 72 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 146

    (77) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 77 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 77 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 147

    (82) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 82 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 82 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 148

    (87) LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .
    (39) LangKleeneC -> LangExpression . KleeneC IntExpression
    (47) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 87 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    Term            reduce using rule 87 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 149

    (92) BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .

    Splitter        reduce using rule 92 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)
    Term            reduce using rule 92 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)


state 150

    (21) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    KleeneC         reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    PositiveC       reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 21 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)


state 151

    (10) BooleanOr -> BooleanAnd Or BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanAnd

    Term            reduce using rule 10 (BooleanOr -> BooleanAnd Or BooleanAnd .)
    RGroup          reduce using rule 10 (BooleanOr -> BooleanAnd Or BooleanAnd .)
    Splitter        reduce using rule 10 (BooleanOr -> BooleanAnd Or BooleanAnd .)
    And             shift and go to state 135


state 152

    (25) BooleanAnd -> BooleanAnd And BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanAnd

  ! shift/reduce conflict for And resolved as shift
    Or              reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    Term            reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    RGroup          reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    Splitter        reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    And             shift and go to state 135

  ! And             [ reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .) ]


state 153

    (40) BooleanGroup -> LGroup BooleanExpression RGroup .

    Or              reduce using rule 40 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    And             reduce using rule 40 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Term            reduce using rule 40 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    RGroup          reduce using rule 40 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Splitter        reduce using rule 40 (BooleanGroup -> LGroup BooleanExpression RGroup .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for And in state 152 resolved as shift
