Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    NextLine
    SuchThat

Grammar

Rule 0     S' -> expressions
Rule 1     BooleanExpression -> BooleanOr
Rule 2     AlphExpression -> AlphConcat
Rule 3     IntExpression -> Int
Rule 4     IntExpression -> StringLen
Rule 5     IntExpression -> VInt
Rule 6     LangExpression -> StringPrefix
Rule 7     LangExpression -> StringSuffix
Rule 8     LangExpression -> AlphKleeneC
Rule 9     LangExpression -> AlphPositiveC
Rule 10    LangExpression -> LangKleeneC
Rule 11    LangExpression -> LangPositiveC
Rule 12    LangExpression -> VLang
Rule 13    BooleanOr -> BooleanAnd Or BooleanAnd
Rule 14    BooleanOr -> BooleanAnd
Rule 15    StringExpression -> StringConcat
Rule 16    StringConcat -> StringConcat Concat StringPow
Rule 17    StringConcat -> StringPow
Rule 18    StringLen -> LenOp StringExpression LenOp
Rule 19    StringLen -> LenOp StringExpression On AlphExpression LenOp
Rule 20    AlphConcat -> AlphConcat Concat AlphPow
Rule 21    AlphConcat -> AlphPow
Rule 22    AlphKleeneC -> AlphExpression KleeneC IntExpression
Rule 23    expressions -> expressions expression Term
Rule 24    expressions -> expression Term
Rule 25    BooleanAnd -> BooleanAnd And BooleanAnd
Rule 26    BooleanAnd -> BooleanGroup
Rule 27    StringPow -> StringPow Pow IntExpression
Rule 28    StringPow -> StringGroup
Rule 29    AlphPositiveC -> AlphExpression PositiveC IntExpression
Rule 30    expression -> IntExpression
Rule 31    expression -> AlphExpression
Rule 32    expression -> StringExpression
Rule 33    expression -> LangExpression
Rule 34    expression -> ShowVal
Rule 35    expression -> Assigns
Rule 36    expression -> Declares
Rule 37    AlphPow -> AlphPow Pow IntExpression
Rule 38    AlphPow -> AlphGroup
Rule 39    ShowVal -> Show expression
Rule 40    LangKleeneC -> LangExpression KleeneC IntExpression
Rule 41    BooleanGroup -> LGroup BooleanExpression RGroup
Rule 42    BooleanGroup -> Boolean
Rule 43    BooleanGroup -> VBoolean
Rule 44    StringGroup -> LGroup StringExpression RGroup
Rule 45    StringGroup -> String
Rule 46    StringGroup -> VString
Rule 47    Declares -> StringDeclare
Rule 48    Declares -> IntDeclare
Rule 49    Declares -> AlphDeclare
Rule 50    Declares -> LangDeclare
Rule 51    Declares -> BooleanDeclare
Rule 52    LangPositiveC -> LangExpression PositiveC IntExpression
Rule 53    AlphGroup -> LGroup AlphExpression RGroup
Rule 54    AlphGroup -> Alph
Rule 55    AlphGroup -> VAlph
Rule 56    StringPrefix -> Prefix StringExpression
Rule 57    Assigns -> StringAssign
Rule 58    Assigns -> IntAssign
Rule 59    Assigns -> AlphAssign
Rule 60    Assigns -> LangAssign
Rule 61    Assigns -> BooleanAssign
Rule 62    Boolean -> True
Rule 63    Boolean -> False
Rule 64    Alph -> OpenStruct StringList CloseStruct
Rule 65    Alph -> OpenStruct StringExpression CloseStruct
Rule 66    StringSuffix -> Suffix StringExpression
Rule 67    StringDeclare -> StringType VarName
Rule 68    StringDeclare -> StringType VarName Eq StringExpression
Rule 69    StringDeclare -> StringDeclare Splitter VarName
Rule 70    StringDeclare -> StringDeclare Splitter VarName Eq StringExpression
Rule 71    StringList -> StringList Splitter StringExpression
Rule 72    StringList -> StringExpression Splitter StringExpression
Rule 73    StringAssign -> VarName Eq StringExpression
Rule 74    IntDeclare -> IntType VarName
Rule 75    IntDeclare -> IntType VarName Eq IntExpression
Rule 76    IntDeclare -> IntDeclare Splitter VarName
Rule 77    IntDeclare -> IntDeclare Splitter VarName Eq IntExpression
Rule 78    IntAssign -> VarName Eq IntExpression
Rule 79    AlphDeclare -> AlphType VarName
Rule 80    AlphDeclare -> AlphType VarName Eq AlphExpression
Rule 81    AlphDeclare -> AlphDeclare Splitter VarName
Rule 82    AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression
Rule 83    AlphAssign -> VarName Eq AlphExpression
Rule 84    LangDeclare -> LangType VarName
Rule 85    LangDeclare -> LangType VarName Eq LangExpression
Rule 86    LangDeclare -> LangDeclare Splitter VarName
Rule 87    LangDeclare -> LangDeclare Splitter VarName Eq LangExpression
Rule 88    LangAssign -> VarName Eq LangExpression
Rule 89    BooleanDeclare -> BooleanType VarName
Rule 90    BooleanDeclare -> BooleanType VarName Eq BooleanExpression
Rule 91    BooleanDeclare -> BooleanDeclare Splitter VarName
Rule 92    BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression
Rule 93    BooleanAssign -> VarName Eq BooleanExpression

Terminals, with rules where they appear

AlphType             : 79 80
And                  : 25
BooleanType          : 89 90
CloseStruct          : 64 65
Concat               : 16 20
Eq                   : 68 70 73 75 77 78 80 82 83 85 87 88 90 92 93
False                : 63
Int                  : 3
IntType              : 74 75
KleeneC              : 22 40
LGroup               : 41 44 53
LangType             : 84 85
LenOp                : 18 18 19 19
NextLine             : 
On                   : 19
OpenStruct           : 64 65
Or                   : 13
PositiveC            : 29 52
Pow                  : 27 37
Prefix               : 56
RGroup               : 41 44 53
Show                 : 39
Splitter             : 69 70 71 72 76 77 81 82 86 87 91 92
String               : 45
StringType           : 67 68
SuchThat             : 
Suffix               : 66
Term                 : 23 24
True                 : 62
VAlph                : 55
VBoolean             : 43
VInt                 : 5
VLang                : 12
VString              : 46
VarName              : 67 68 69 70 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93
error                : 

Nonterminals, with rules where they appear

Alph                 : 54
AlphAssign           : 59
AlphConcat           : 2 20
AlphDeclare          : 49 81 82
AlphExpression       : 19 22 29 31 53 80 82 83
AlphGroup            : 38
AlphKleeneC          : 8
AlphPositiveC        : 9
AlphPow              : 20 21 37
Assigns              : 35
Boolean              : 42
BooleanAnd           : 13 13 14 25 25
BooleanAssign        : 61
BooleanDeclare       : 51 91 92
BooleanExpression    : 41 90 92 93
BooleanGroup         : 26
BooleanOr            : 1
Declares             : 36
IntAssign            : 58
IntDeclare           : 48 76 77
IntExpression        : 22 27 29 30 37 40 52 75 77 78
LangAssign           : 60
LangDeclare          : 50 86 87
LangExpression       : 33 40 52 85 87 88
LangKleeneC          : 10
LangPositiveC        : 11
ShowVal              : 34
StringAssign         : 57
StringConcat         : 15 16
StringDeclare        : 47 69 70
StringExpression     : 18 19 32 44 56 65 66 68 70 71 72 72 73
StringGroup          : 28
StringLen            : 4
StringList           : 64 71
StringPow            : 16 17 27
StringPrefix         : 6
StringSuffix         : 7
expression           : 23 24 39
expressions          : 23 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (23) expressions -> . expressions expression Term
    (24) expressions -> . expression Term
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (6) LangExpression -> . StringPrefix
    (7) LangExpression -> . StringSuffix
    (8) LangExpression -> . AlphKleeneC
    (9) LangExpression -> . AlphPositiveC
    (10) LangExpression -> . LangKleeneC
    (11) LangExpression -> . LangPositiveC
    (12) LangExpression -> . VLang
    (39) ShowVal -> . Show expression
    (57) Assigns -> . StringAssign
    (58) Assigns -> . IntAssign
    (59) Assigns -> . AlphAssign
    (60) Assigns -> . LangAssign
    (61) Assigns -> . BooleanAssign
    (47) Declares -> . StringDeclare
    (48) Declares -> . IntDeclare
    (49) Declares -> . AlphDeclare
    (50) Declares -> . LangDeclare
    (51) Declares -> . BooleanDeclare
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (56) StringPrefix -> . Prefix StringExpression
    (66) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (29) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (40) LangKleeneC -> . LangExpression KleeneC IntExpression
    (52) LangPositiveC -> . LangExpression PositiveC IntExpression
    (73) StringAssign -> . VarName Eq StringExpression
    (78) IntAssign -> . VarName Eq IntExpression
    (83) AlphAssign -> . VarName Eq AlphExpression
    (88) LangAssign -> . VarName Eq LangExpression
    (93) BooleanAssign -> . VarName Eq BooleanExpression
    (67) StringDeclare -> . StringType VarName
    (68) StringDeclare -> . StringType VarName Eq StringExpression
    (69) StringDeclare -> . StringDeclare Splitter VarName
    (70) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (74) IntDeclare -> . IntType VarName
    (75) IntDeclare -> . IntType VarName Eq IntExpression
    (76) IntDeclare -> . IntDeclare Splitter VarName
    (77) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (79) AlphDeclare -> . AlphType VarName
    (80) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (81) AlphDeclare -> . AlphDeclare Splitter VarName
    (82) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (84) LangDeclare -> . LangType VarName
    (85) LangDeclare -> . LangType VarName Eq LangExpression
    (86) LangDeclare -> . LangDeclare Splitter VarName
    (87) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (89) BooleanDeclare -> . BooleanType VarName
    (90) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (91) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (92) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Int             shift and go to state 10
    VInt            shift and go to state 12
    VLang           shift and go to state 21
    Show            shift and go to state 22
    LenOp           shift and go to state 33
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    VarName         shift and go to state 38
    StringType      shift and go to state 39
    IntType         shift and go to state 40
    AlphType        shift and go to state 41
    LangType        shift and go to state 42
    BooleanType     shift and go to state 43
    LGroup          shift and go to state 46
    VAlph           shift and go to state 48
    String          shift and go to state 49
    VString         shift and go to state 50
    OpenStruct      shift and go to state 51

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    StringAssign                   shift and go to state 23
    IntAssign                      shift and go to state 24
    AlphAssign                     shift and go to state 25
    LangAssign                     shift and go to state 26
    BooleanAssign                  shift and go to state 27
    StringDeclare                  shift and go to state 28
    IntDeclare                     shift and go to state 29
    AlphDeclare                    shift and go to state 30
    LangDeclare                    shift and go to state 31
    BooleanDeclare                 shift and go to state 32
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 44
    StringGroup                    shift and go to state 45
    Alph                           shift and go to state 47

state 1

    (0) S' -> expressions .
    (23) expressions -> expressions . expression Term
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (6) LangExpression -> . StringPrefix
    (7) LangExpression -> . StringSuffix
    (8) LangExpression -> . AlphKleeneC
    (9) LangExpression -> . AlphPositiveC
    (10) LangExpression -> . LangKleeneC
    (11) LangExpression -> . LangPositiveC
    (12) LangExpression -> . VLang
    (39) ShowVal -> . Show expression
    (57) Assigns -> . StringAssign
    (58) Assigns -> . IntAssign
    (59) Assigns -> . AlphAssign
    (60) Assigns -> . LangAssign
    (61) Assigns -> . BooleanAssign
    (47) Declares -> . StringDeclare
    (48) Declares -> . IntDeclare
    (49) Declares -> . AlphDeclare
    (50) Declares -> . LangDeclare
    (51) Declares -> . BooleanDeclare
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (56) StringPrefix -> . Prefix StringExpression
    (66) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (29) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (40) LangKleeneC -> . LangExpression KleeneC IntExpression
    (52) LangPositiveC -> . LangExpression PositiveC IntExpression
    (73) StringAssign -> . VarName Eq StringExpression
    (78) IntAssign -> . VarName Eq IntExpression
    (83) AlphAssign -> . VarName Eq AlphExpression
    (88) LangAssign -> . VarName Eq LangExpression
    (93) BooleanAssign -> . VarName Eq BooleanExpression
    (67) StringDeclare -> . StringType VarName
    (68) StringDeclare -> . StringType VarName Eq StringExpression
    (69) StringDeclare -> . StringDeclare Splitter VarName
    (70) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (74) IntDeclare -> . IntType VarName
    (75) IntDeclare -> . IntType VarName Eq IntExpression
    (76) IntDeclare -> . IntDeclare Splitter VarName
    (77) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (79) AlphDeclare -> . AlphType VarName
    (80) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (81) AlphDeclare -> . AlphDeclare Splitter VarName
    (82) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (84) LangDeclare -> . LangType VarName
    (85) LangDeclare -> . LangType VarName Eq LangExpression
    (86) LangDeclare -> . LangDeclare Splitter VarName
    (87) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (89) BooleanDeclare -> . BooleanType VarName
    (90) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (91) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (92) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Int             shift and go to state 10
    VInt            shift and go to state 12
    VLang           shift and go to state 21
    Show            shift and go to state 22
    LenOp           shift and go to state 33
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    VarName         shift and go to state 38
    StringType      shift and go to state 39
    IntType         shift and go to state 40
    AlphType        shift and go to state 41
    LangType        shift and go to state 42
    BooleanType     shift and go to state 43
    LGroup          shift and go to state 46
    VAlph           shift and go to state 48
    String          shift and go to state 49
    VString         shift and go to state 50
    OpenStruct      shift and go to state 51

    expression                     shift and go to state 52
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    StringAssign                   shift and go to state 23
    IntAssign                      shift and go to state 24
    AlphAssign                     shift and go to state 25
    LangAssign                     shift and go to state 26
    BooleanAssign                  shift and go to state 27
    StringDeclare                  shift and go to state 28
    IntDeclare                     shift and go to state 29
    AlphDeclare                    shift and go to state 30
    LangDeclare                    shift and go to state 31
    BooleanDeclare                 shift and go to state 32
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 44
    StringGroup                    shift and go to state 45
    Alph                           shift and go to state 47

state 2

    (24) expressions -> expression . Term

    Term            shift and go to state 53


state 3

    (30) expression -> IntExpression .

    Term            reduce using rule 30 (expression -> IntExpression .)


state 4

    (31) expression -> AlphExpression .
    (22) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (29) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    Term            reduce using rule 31 (expression -> AlphExpression .)
    KleeneC         shift and go to state 54
    PositiveC       shift and go to state 55


state 5

    (32) expression -> StringExpression .

    Term            reduce using rule 32 (expression -> StringExpression .)


state 6

    (33) expression -> LangExpression .
    (40) LangKleeneC -> LangExpression . KleeneC IntExpression
    (52) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 33 (expression -> LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 7

    (34) expression -> ShowVal .

    Term            reduce using rule 34 (expression -> ShowVal .)


state 8

    (35) expression -> Assigns .

    Term            reduce using rule 35 (expression -> Assigns .)


state 9

    (36) expression -> Declares .

    Term            reduce using rule 36 (expression -> Declares .)


state 10

    (3) IntExpression -> Int .

    Term            reduce using rule 3 (IntExpression -> Int .)
    KleeneC         reduce using rule 3 (IntExpression -> Int .)
    PositiveC       reduce using rule 3 (IntExpression -> Int .)
    Splitter        reduce using rule 3 (IntExpression -> Int .)
    Pow             reduce using rule 3 (IntExpression -> Int .)
    Concat          reduce using rule 3 (IntExpression -> Int .)
    RGroup          reduce using rule 3 (IntExpression -> Int .)
    LenOp           reduce using rule 3 (IntExpression -> Int .)
    On              reduce using rule 3 (IntExpression -> Int .)
    CloseStruct     reduce using rule 3 (IntExpression -> Int .)


state 11

    (4) IntExpression -> StringLen .

    Term            reduce using rule 4 (IntExpression -> StringLen .)
    KleeneC         reduce using rule 4 (IntExpression -> StringLen .)
    PositiveC       reduce using rule 4 (IntExpression -> StringLen .)
    Splitter        reduce using rule 4 (IntExpression -> StringLen .)
    Pow             reduce using rule 4 (IntExpression -> StringLen .)
    Concat          reduce using rule 4 (IntExpression -> StringLen .)
    RGroup          reduce using rule 4 (IntExpression -> StringLen .)
    LenOp           reduce using rule 4 (IntExpression -> StringLen .)
    On              reduce using rule 4 (IntExpression -> StringLen .)
    CloseStruct     reduce using rule 4 (IntExpression -> StringLen .)


state 12

    (5) IntExpression -> VInt .

    Term            reduce using rule 5 (IntExpression -> VInt .)
    KleeneC         reduce using rule 5 (IntExpression -> VInt .)
    PositiveC       reduce using rule 5 (IntExpression -> VInt .)
    Splitter        reduce using rule 5 (IntExpression -> VInt .)
    Pow             reduce using rule 5 (IntExpression -> VInt .)
    Concat          reduce using rule 5 (IntExpression -> VInt .)
    RGroup          reduce using rule 5 (IntExpression -> VInt .)
    LenOp           reduce using rule 5 (IntExpression -> VInt .)
    On              reduce using rule 5 (IntExpression -> VInt .)
    CloseStruct     reduce using rule 5 (IntExpression -> VInt .)


state 13

    (2) AlphExpression -> AlphConcat .
    (20) AlphConcat -> AlphConcat . Concat AlphPow

    KleeneC         reduce using rule 2 (AlphExpression -> AlphConcat .)
    PositiveC       reduce using rule 2 (AlphExpression -> AlphConcat .)
    Term            reduce using rule 2 (AlphExpression -> AlphConcat .)
    RGroup          reduce using rule 2 (AlphExpression -> AlphConcat .)
    LenOp           reduce using rule 2 (AlphExpression -> AlphConcat .)
    Splitter        reduce using rule 2 (AlphExpression -> AlphConcat .)
    Concat          shift and go to state 58


state 14

    (15) StringExpression -> StringConcat .
    (16) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 15 (StringExpression -> StringConcat .)
    LenOp           reduce using rule 15 (StringExpression -> StringConcat .)
    On              reduce using rule 15 (StringExpression -> StringConcat .)
    KleeneC         reduce using rule 15 (StringExpression -> StringConcat .)
    PositiveC       reduce using rule 15 (StringExpression -> StringConcat .)
    Splitter        reduce using rule 15 (StringExpression -> StringConcat .)
    RGroup          reduce using rule 15 (StringExpression -> StringConcat .)
    CloseStruct     reduce using rule 15 (StringExpression -> StringConcat .)
    Concat          shift and go to state 59


state 15

    (6) LangExpression -> StringPrefix .

    KleeneC         reduce using rule 6 (LangExpression -> StringPrefix .)
    PositiveC       reduce using rule 6 (LangExpression -> StringPrefix .)
    Term            reduce using rule 6 (LangExpression -> StringPrefix .)
    Splitter        reduce using rule 6 (LangExpression -> StringPrefix .)


state 16

    (7) LangExpression -> StringSuffix .

    KleeneC         reduce using rule 7 (LangExpression -> StringSuffix .)
    PositiveC       reduce using rule 7 (LangExpression -> StringSuffix .)
    Term            reduce using rule 7 (LangExpression -> StringSuffix .)
    Splitter        reduce using rule 7 (LangExpression -> StringSuffix .)


state 17

    (8) LangExpression -> AlphKleeneC .

    KleeneC         reduce using rule 8 (LangExpression -> AlphKleeneC .)
    PositiveC       reduce using rule 8 (LangExpression -> AlphKleeneC .)
    Term            reduce using rule 8 (LangExpression -> AlphKleeneC .)
    Splitter        reduce using rule 8 (LangExpression -> AlphKleeneC .)


state 18

    (9) LangExpression -> AlphPositiveC .

    KleeneC         reduce using rule 9 (LangExpression -> AlphPositiveC .)
    PositiveC       reduce using rule 9 (LangExpression -> AlphPositiveC .)
    Term            reduce using rule 9 (LangExpression -> AlphPositiveC .)
    Splitter        reduce using rule 9 (LangExpression -> AlphPositiveC .)


state 19

    (10) LangExpression -> LangKleeneC .

    KleeneC         reduce using rule 10 (LangExpression -> LangKleeneC .)
    PositiveC       reduce using rule 10 (LangExpression -> LangKleeneC .)
    Term            reduce using rule 10 (LangExpression -> LangKleeneC .)
    Splitter        reduce using rule 10 (LangExpression -> LangKleeneC .)


state 20

    (11) LangExpression -> LangPositiveC .

    KleeneC         reduce using rule 11 (LangExpression -> LangPositiveC .)
    PositiveC       reduce using rule 11 (LangExpression -> LangPositiveC .)
    Term            reduce using rule 11 (LangExpression -> LangPositiveC .)
    Splitter        reduce using rule 11 (LangExpression -> LangPositiveC .)


state 21

    (12) LangExpression -> VLang .

    KleeneC         reduce using rule 12 (LangExpression -> VLang .)
    PositiveC       reduce using rule 12 (LangExpression -> VLang .)
    Term            reduce using rule 12 (LangExpression -> VLang .)
    Splitter        reduce using rule 12 (LangExpression -> VLang .)


state 22

    (39) ShowVal -> Show . expression
    (30) expression -> . IntExpression
    (31) expression -> . AlphExpression
    (32) expression -> . StringExpression
    (33) expression -> . LangExpression
    (34) expression -> . ShowVal
    (35) expression -> . Assigns
    (36) expression -> . Declares
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (6) LangExpression -> . StringPrefix
    (7) LangExpression -> . StringSuffix
    (8) LangExpression -> . AlphKleeneC
    (9) LangExpression -> . AlphPositiveC
    (10) LangExpression -> . LangKleeneC
    (11) LangExpression -> . LangPositiveC
    (12) LangExpression -> . VLang
    (39) ShowVal -> . Show expression
    (57) Assigns -> . StringAssign
    (58) Assigns -> . IntAssign
    (59) Assigns -> . AlphAssign
    (60) Assigns -> . LangAssign
    (61) Assigns -> . BooleanAssign
    (47) Declares -> . StringDeclare
    (48) Declares -> . IntDeclare
    (49) Declares -> . AlphDeclare
    (50) Declares -> . LangDeclare
    (51) Declares -> . BooleanDeclare
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (56) StringPrefix -> . Prefix StringExpression
    (66) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (29) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (40) LangKleeneC -> . LangExpression KleeneC IntExpression
    (52) LangPositiveC -> . LangExpression PositiveC IntExpression
    (73) StringAssign -> . VarName Eq StringExpression
    (78) IntAssign -> . VarName Eq IntExpression
    (83) AlphAssign -> . VarName Eq AlphExpression
    (88) LangAssign -> . VarName Eq LangExpression
    (93) BooleanAssign -> . VarName Eq BooleanExpression
    (67) StringDeclare -> . StringType VarName
    (68) StringDeclare -> . StringType VarName Eq StringExpression
    (69) StringDeclare -> . StringDeclare Splitter VarName
    (70) StringDeclare -> . StringDeclare Splitter VarName Eq StringExpression
    (74) IntDeclare -> . IntType VarName
    (75) IntDeclare -> . IntType VarName Eq IntExpression
    (76) IntDeclare -> . IntDeclare Splitter VarName
    (77) IntDeclare -> . IntDeclare Splitter VarName Eq IntExpression
    (79) AlphDeclare -> . AlphType VarName
    (80) AlphDeclare -> . AlphType VarName Eq AlphExpression
    (81) AlphDeclare -> . AlphDeclare Splitter VarName
    (82) AlphDeclare -> . AlphDeclare Splitter VarName Eq AlphExpression
    (84) LangDeclare -> . LangType VarName
    (85) LangDeclare -> . LangType VarName Eq LangExpression
    (86) LangDeclare -> . LangDeclare Splitter VarName
    (87) LangDeclare -> . LangDeclare Splitter VarName Eq LangExpression
    (89) BooleanDeclare -> . BooleanType VarName
    (90) BooleanDeclare -> . BooleanType VarName Eq BooleanExpression
    (91) BooleanDeclare -> . BooleanDeclare Splitter VarName
    (92) BooleanDeclare -> . BooleanDeclare Splitter VarName Eq BooleanExpression
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    Int             shift and go to state 10
    VInt            shift and go to state 12
    VLang           shift and go to state 21
    Show            shift and go to state 22
    LenOp           shift and go to state 33
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    VarName         shift and go to state 38
    StringType      shift and go to state 39
    IntType         shift and go to state 40
    AlphType        shift and go to state 41
    LangType        shift and go to state 42
    BooleanType     shift and go to state 43
    LGroup          shift and go to state 46
    VAlph           shift and go to state 48
    String          shift and go to state 49
    VString         shift and go to state 50
    OpenStruct      shift and go to state 51

    expression                     shift and go to state 60
    IntExpression                  shift and go to state 3
    AlphExpression                 shift and go to state 4
    StringExpression               shift and go to state 5
    LangExpression                 shift and go to state 6
    ShowVal                        shift and go to state 7
    Assigns                        shift and go to state 8
    Declares                       shift and go to state 9
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    StringAssign                   shift and go to state 23
    IntAssign                      shift and go to state 24
    AlphAssign                     shift and go to state 25
    LangAssign                     shift and go to state 26
    BooleanAssign                  shift and go to state 27
    StringDeclare                  shift and go to state 28
    IntDeclare                     shift and go to state 29
    AlphDeclare                    shift and go to state 30
    LangDeclare                    shift and go to state 31
    BooleanDeclare                 shift and go to state 32
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 44
    StringGroup                    shift and go to state 45
    Alph                           shift and go to state 47

state 23

    (57) Assigns -> StringAssign .

    Term            reduce using rule 57 (Assigns -> StringAssign .)


state 24

    (58) Assigns -> IntAssign .

    Term            reduce using rule 58 (Assigns -> IntAssign .)


state 25

    (59) Assigns -> AlphAssign .

    Term            reduce using rule 59 (Assigns -> AlphAssign .)


state 26

    (60) Assigns -> LangAssign .

    Term            reduce using rule 60 (Assigns -> LangAssign .)


state 27

    (61) Assigns -> BooleanAssign .

    Term            reduce using rule 61 (Assigns -> BooleanAssign .)


state 28

    (47) Declares -> StringDeclare .
    (69) StringDeclare -> StringDeclare . Splitter VarName
    (70) StringDeclare -> StringDeclare . Splitter VarName Eq StringExpression

    Term            reduce using rule 47 (Declares -> StringDeclare .)
    Splitter        shift and go to state 61


state 29

    (48) Declares -> IntDeclare .
    (76) IntDeclare -> IntDeclare . Splitter VarName
    (77) IntDeclare -> IntDeclare . Splitter VarName Eq IntExpression

    Term            reduce using rule 48 (Declares -> IntDeclare .)
    Splitter        shift and go to state 62


state 30

    (49) Declares -> AlphDeclare .
    (81) AlphDeclare -> AlphDeclare . Splitter VarName
    (82) AlphDeclare -> AlphDeclare . Splitter VarName Eq AlphExpression

    Term            reduce using rule 49 (Declares -> AlphDeclare .)
    Splitter        shift and go to state 63


state 31

    (50) Declares -> LangDeclare .
    (86) LangDeclare -> LangDeclare . Splitter VarName
    (87) LangDeclare -> LangDeclare . Splitter VarName Eq LangExpression

    Term            reduce using rule 50 (Declares -> LangDeclare .)
    Splitter        shift and go to state 64


state 32

    (51) Declares -> BooleanDeclare .
    (91) BooleanDeclare -> BooleanDeclare . Splitter VarName
    (92) BooleanDeclare -> BooleanDeclare . Splitter VarName Eq BooleanExpression

    Term            reduce using rule 51 (Declares -> BooleanDeclare .)
    Splitter        shift and go to state 65


state 33

    (18) StringLen -> LenOp . StringExpression LenOp
    (19) StringLen -> LenOp . StringExpression On AlphExpression LenOp
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 66
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 34

    (21) AlphConcat -> AlphPow .
    (37) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 21 (AlphConcat -> AlphPow .)
    KleeneC         reduce using rule 21 (AlphConcat -> AlphPow .)
    PositiveC       reduce using rule 21 (AlphConcat -> AlphPow .)
    Term            reduce using rule 21 (AlphConcat -> AlphPow .)
    RGroup          reduce using rule 21 (AlphConcat -> AlphPow .)
    LenOp           reduce using rule 21 (AlphConcat -> AlphPow .)
    Splitter        reduce using rule 21 (AlphConcat -> AlphPow .)
    Pow             shift and go to state 68


state 35

    (17) StringConcat -> StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 17 (StringConcat -> StringPow .)
    Term            reduce using rule 17 (StringConcat -> StringPow .)
    LenOp           reduce using rule 17 (StringConcat -> StringPow .)
    On              reduce using rule 17 (StringConcat -> StringPow .)
    KleeneC         reduce using rule 17 (StringConcat -> StringPow .)
    PositiveC       reduce using rule 17 (StringConcat -> StringPow .)
    Splitter        reduce using rule 17 (StringConcat -> StringPow .)
    RGroup          reduce using rule 17 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 17 (StringConcat -> StringPow .)
    Pow             shift and go to state 69


state 36

    (56) StringPrefix -> Prefix . StringExpression
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 70
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 37

    (66) StringSuffix -> Suffix . StringExpression
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 71
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 38

    (73) StringAssign -> VarName . Eq StringExpression
    (78) IntAssign -> VarName . Eq IntExpression
    (83) AlphAssign -> VarName . Eq AlphExpression
    (88) LangAssign -> VarName . Eq LangExpression
    (93) BooleanAssign -> VarName . Eq BooleanExpression

    Eq              shift and go to state 72


state 39

    (67) StringDeclare -> StringType . VarName
    (68) StringDeclare -> StringType . VarName Eq StringExpression

    VarName         shift and go to state 73


state 40

    (74) IntDeclare -> IntType . VarName
    (75) IntDeclare -> IntType . VarName Eq IntExpression

    VarName         shift and go to state 74


state 41

    (79) AlphDeclare -> AlphType . VarName
    (80) AlphDeclare -> AlphType . VarName Eq AlphExpression

    VarName         shift and go to state 75


state 42

    (84) LangDeclare -> LangType . VarName
    (85) LangDeclare -> LangType . VarName Eq LangExpression

    VarName         shift and go to state 76


state 43

    (89) BooleanDeclare -> BooleanType . VarName
    (90) BooleanDeclare -> BooleanType . VarName Eq BooleanExpression

    VarName         shift and go to state 77


state 44

    (38) AlphPow -> AlphGroup .

    Pow             reduce using rule 38 (AlphPow -> AlphGroup .)
    Concat          reduce using rule 38 (AlphPow -> AlphGroup .)
    KleeneC         reduce using rule 38 (AlphPow -> AlphGroup .)
    PositiveC       reduce using rule 38 (AlphPow -> AlphGroup .)
    Term            reduce using rule 38 (AlphPow -> AlphGroup .)
    RGroup          reduce using rule 38 (AlphPow -> AlphGroup .)
    LenOp           reduce using rule 38 (AlphPow -> AlphGroup .)
    Splitter        reduce using rule 38 (AlphPow -> AlphGroup .)


state 45

    (28) StringPow -> StringGroup .

    Pow             reduce using rule 28 (StringPow -> StringGroup .)
    Concat          reduce using rule 28 (StringPow -> StringGroup .)
    Term            reduce using rule 28 (StringPow -> StringGroup .)
    LenOp           reduce using rule 28 (StringPow -> StringGroup .)
    On              reduce using rule 28 (StringPow -> StringGroup .)
    KleeneC         reduce using rule 28 (StringPow -> StringGroup .)
    PositiveC       reduce using rule 28 (StringPow -> StringGroup .)
    Splitter        reduce using rule 28 (StringPow -> StringGroup .)
    RGroup          reduce using rule 28 (StringPow -> StringGroup .)
    CloseStruct     reduce using rule 28 (StringPow -> StringGroup .)


state 46

    (53) AlphGroup -> LGroup . AlphExpression RGroup
    (44) StringGroup -> LGroup . StringExpression RGroup
    (2) AlphExpression -> . AlphConcat
    (15) StringExpression -> . StringConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 46
    VAlph           shift and go to state 48
    String          shift and go to state 49
    VString         shift and go to state 50
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 78
    StringExpression               shift and go to state 79
    AlphConcat                     shift and go to state 13
    StringConcat                   shift and go to state 14
    AlphPow                        shift and go to state 34
    StringPow                      shift and go to state 35
    AlphGroup                      shift and go to state 44
    StringGroup                    shift and go to state 45
    Alph                           shift and go to state 47

state 47

    (54) AlphGroup -> Alph .

    Pow             reduce using rule 54 (AlphGroup -> Alph .)
    Concat          reduce using rule 54 (AlphGroup -> Alph .)
    KleeneC         reduce using rule 54 (AlphGroup -> Alph .)
    PositiveC       reduce using rule 54 (AlphGroup -> Alph .)
    Term            reduce using rule 54 (AlphGroup -> Alph .)
    RGroup          reduce using rule 54 (AlphGroup -> Alph .)
    LenOp           reduce using rule 54 (AlphGroup -> Alph .)
    Splitter        reduce using rule 54 (AlphGroup -> Alph .)


state 48

    (55) AlphGroup -> VAlph .

    Pow             reduce using rule 55 (AlphGroup -> VAlph .)
    Concat          reduce using rule 55 (AlphGroup -> VAlph .)
    KleeneC         reduce using rule 55 (AlphGroup -> VAlph .)
    PositiveC       reduce using rule 55 (AlphGroup -> VAlph .)
    Term            reduce using rule 55 (AlphGroup -> VAlph .)
    RGroup          reduce using rule 55 (AlphGroup -> VAlph .)
    LenOp           reduce using rule 55 (AlphGroup -> VAlph .)
    Splitter        reduce using rule 55 (AlphGroup -> VAlph .)


state 49

    (45) StringGroup -> String .

    Pow             reduce using rule 45 (StringGroup -> String .)
    Concat          reduce using rule 45 (StringGroup -> String .)
    Term            reduce using rule 45 (StringGroup -> String .)
    LenOp           reduce using rule 45 (StringGroup -> String .)
    On              reduce using rule 45 (StringGroup -> String .)
    KleeneC         reduce using rule 45 (StringGroup -> String .)
    PositiveC       reduce using rule 45 (StringGroup -> String .)
    Splitter        reduce using rule 45 (StringGroup -> String .)
    RGroup          reduce using rule 45 (StringGroup -> String .)
    CloseStruct     reduce using rule 45 (StringGroup -> String .)


state 50

    (46) StringGroup -> VString .

    Pow             reduce using rule 46 (StringGroup -> VString .)
    Concat          reduce using rule 46 (StringGroup -> VString .)
    Term            reduce using rule 46 (StringGroup -> VString .)
    LenOp           reduce using rule 46 (StringGroup -> VString .)
    On              reduce using rule 46 (StringGroup -> VString .)
    KleeneC         reduce using rule 46 (StringGroup -> VString .)
    PositiveC       reduce using rule 46 (StringGroup -> VString .)
    Splitter        reduce using rule 46 (StringGroup -> VString .)
    RGroup          reduce using rule 46 (StringGroup -> VString .)
    CloseStruct     reduce using rule 46 (StringGroup -> VString .)


state 51

    (64) Alph -> OpenStruct . StringList CloseStruct
    (65) Alph -> OpenStruct . StringExpression CloseStruct
    (71) StringList -> . StringList Splitter StringExpression
    (72) StringList -> . StringExpression Splitter StringExpression
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringList                     shift and go to state 80
    StringExpression               shift and go to state 81
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 52

    (23) expressions -> expressions expression . Term

    Term            shift and go to state 82


state 53

    (24) expressions -> expression Term .

    Int             reduce using rule 24 (expressions -> expression Term .)
    VInt            reduce using rule 24 (expressions -> expression Term .)
    VLang           reduce using rule 24 (expressions -> expression Term .)
    Show            reduce using rule 24 (expressions -> expression Term .)
    LenOp           reduce using rule 24 (expressions -> expression Term .)
    Prefix          reduce using rule 24 (expressions -> expression Term .)
    Suffix          reduce using rule 24 (expressions -> expression Term .)
    VarName         reduce using rule 24 (expressions -> expression Term .)
    StringType      reduce using rule 24 (expressions -> expression Term .)
    IntType         reduce using rule 24 (expressions -> expression Term .)
    AlphType        reduce using rule 24 (expressions -> expression Term .)
    LangType        reduce using rule 24 (expressions -> expression Term .)
    BooleanType     reduce using rule 24 (expressions -> expression Term .)
    LGroup          reduce using rule 24 (expressions -> expression Term .)
    VAlph           reduce using rule 24 (expressions -> expression Term .)
    String          reduce using rule 24 (expressions -> expression Term .)
    VString         reduce using rule 24 (expressions -> expression Term .)
    OpenStruct      reduce using rule 24 (expressions -> expression Term .)
    $end            reduce using rule 24 (expressions -> expression Term .)


state 54

    (22) AlphKleeneC -> AlphExpression KleeneC . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 83
    StringLen                      shift and go to state 11

state 55

    (29) AlphPositiveC -> AlphExpression PositiveC . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 84
    StringLen                      shift and go to state 11

state 56

    (40) LangKleeneC -> LangExpression KleeneC . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 85
    StringLen                      shift and go to state 11

state 57

    (52) LangPositiveC -> LangExpression PositiveC . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 86
    StringLen                      shift and go to state 11

state 58

    (20) AlphConcat -> AlphConcat Concat . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 88
    VAlph           shift and go to state 48
    OpenStruct      shift and go to state 51

    AlphPow                        shift and go to state 87
    AlphGroup                      shift and go to state 44
    Alph                           shift and go to state 47

state 59

    (16) StringConcat -> StringConcat Concat . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringPow                      shift and go to state 89
    StringGroup                    shift and go to state 45

state 60

    (39) ShowVal -> Show expression .

    Term            reduce using rule 39 (ShowVal -> Show expression .)


state 61

    (69) StringDeclare -> StringDeclare Splitter . VarName
    (70) StringDeclare -> StringDeclare Splitter . VarName Eq StringExpression

    VarName         shift and go to state 90


state 62

    (76) IntDeclare -> IntDeclare Splitter . VarName
    (77) IntDeclare -> IntDeclare Splitter . VarName Eq IntExpression

    VarName         shift and go to state 91


state 63

    (81) AlphDeclare -> AlphDeclare Splitter . VarName
    (82) AlphDeclare -> AlphDeclare Splitter . VarName Eq AlphExpression

    VarName         shift and go to state 92


state 64

    (86) LangDeclare -> LangDeclare Splitter . VarName
    (87) LangDeclare -> LangDeclare Splitter . VarName Eq LangExpression

    VarName         shift and go to state 93


state 65

    (91) BooleanDeclare -> BooleanDeclare Splitter . VarName
    (92) BooleanDeclare -> BooleanDeclare Splitter . VarName Eq BooleanExpression

    VarName         shift and go to state 94


state 66

    (18) StringLen -> LenOp StringExpression . LenOp
    (19) StringLen -> LenOp StringExpression . On AlphExpression LenOp

    LenOp           shift and go to state 95
    On              shift and go to state 96


state 67

    (44) StringGroup -> LGroup . StringExpression RGroup
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 79
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 68

    (37) AlphPow -> AlphPow Pow . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 97
    StringLen                      shift and go to state 11

state 69

    (27) StringPow -> StringPow Pow . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 98
    StringLen                      shift and go to state 11

state 70

    (56) StringPrefix -> Prefix StringExpression .

    KleeneC         reduce using rule 56 (StringPrefix -> Prefix StringExpression .)
    PositiveC       reduce using rule 56 (StringPrefix -> Prefix StringExpression .)
    Term            reduce using rule 56 (StringPrefix -> Prefix StringExpression .)
    Splitter        reduce using rule 56 (StringPrefix -> Prefix StringExpression .)


state 71

    (66) StringSuffix -> Suffix StringExpression .

    KleeneC         reduce using rule 66 (StringSuffix -> Suffix StringExpression .)
    PositiveC       reduce using rule 66 (StringSuffix -> Suffix StringExpression .)
    Term            reduce using rule 66 (StringSuffix -> Suffix StringExpression .)
    Splitter        reduce using rule 66 (StringSuffix -> Suffix StringExpression .)


state 72

    (73) StringAssign -> VarName Eq . StringExpression
    (78) IntAssign -> VarName Eq . IntExpression
    (83) AlphAssign -> VarName Eq . AlphExpression
    (88) LangAssign -> VarName Eq . LangExpression
    (93) BooleanAssign -> VarName Eq . BooleanExpression
    (15) StringExpression -> . StringConcat
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (2) AlphExpression -> . AlphConcat
    (6) LangExpression -> . StringPrefix
    (7) LangExpression -> . StringSuffix
    (8) LangExpression -> . AlphKleeneC
    (9) LangExpression -> . AlphPositiveC
    (10) LangExpression -> . LangKleeneC
    (11) LangExpression -> . LangPositiveC
    (12) LangExpression -> . VLang
    (1) BooleanExpression -> . BooleanOr
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (56) StringPrefix -> . Prefix StringExpression
    (66) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (29) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (40) LangKleeneC -> . LangExpression KleeneC IntExpression
    (52) LangPositiveC -> . LangExpression PositiveC IntExpression
    (13) BooleanOr -> . BooleanAnd Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (41) BooleanGroup -> . LGroup BooleanExpression RGroup
    (42) BooleanGroup -> . Boolean
    (43) BooleanGroup -> . VBoolean
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct
    (62) Boolean -> . True
    (63) Boolean -> . False

    Int             shift and go to state 10
    VInt            shift and go to state 12
    VLang           shift and go to state 21
    LenOp           shift and go to state 33
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    LGroup          shift and go to state 107
    String          shift and go to state 49
    VString         shift and go to state 50
    VAlph           shift and go to state 48
    VBoolean        shift and go to state 109
    OpenStruct      shift and go to state 51
    True            shift and go to state 110
    False           shift and go to state 111

    StringExpression               shift and go to state 99
    IntExpression                  shift and go to state 100
    AlphExpression                 shift and go to state 101
    LangExpression                 shift and go to state 102
    BooleanExpression              shift and go to state 103
    StringConcat                   shift and go to state 14
    StringLen                      shift and go to state 11
    AlphConcat                     shift and go to state 13
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    BooleanOr                      shift and go to state 104
    StringPow                      shift and go to state 35
    AlphPow                        shift and go to state 34
    BooleanAnd                     shift and go to state 105
    StringGroup                    shift and go to state 45
    AlphGroup                      shift and go to state 44
    BooleanGroup                   shift and go to state 106
    Alph                           shift and go to state 47
    Boolean                        shift and go to state 108

state 73

    (67) StringDeclare -> StringType VarName .
    (68) StringDeclare -> StringType VarName . Eq StringExpression

    Splitter        reduce using rule 67 (StringDeclare -> StringType VarName .)
    Term            reduce using rule 67 (StringDeclare -> StringType VarName .)
    Eq              shift and go to state 112


state 74

    (74) IntDeclare -> IntType VarName .
    (75) IntDeclare -> IntType VarName . Eq IntExpression

    Splitter        reduce using rule 74 (IntDeclare -> IntType VarName .)
    Term            reduce using rule 74 (IntDeclare -> IntType VarName .)
    Eq              shift and go to state 113


state 75

    (79) AlphDeclare -> AlphType VarName .
    (80) AlphDeclare -> AlphType VarName . Eq AlphExpression

    Splitter        reduce using rule 79 (AlphDeclare -> AlphType VarName .)
    Term            reduce using rule 79 (AlphDeclare -> AlphType VarName .)
    Eq              shift and go to state 114


state 76

    (84) LangDeclare -> LangType VarName .
    (85) LangDeclare -> LangType VarName . Eq LangExpression

    Splitter        reduce using rule 84 (LangDeclare -> LangType VarName .)
    Term            reduce using rule 84 (LangDeclare -> LangType VarName .)
    Eq              shift and go to state 115


state 77

    (89) BooleanDeclare -> BooleanType VarName .
    (90) BooleanDeclare -> BooleanType VarName . Eq BooleanExpression

    Splitter        reduce using rule 89 (BooleanDeclare -> BooleanType VarName .)
    Term            reduce using rule 89 (BooleanDeclare -> BooleanType VarName .)
    Eq              shift and go to state 116


state 78

    (53) AlphGroup -> LGroup AlphExpression . RGroup

    RGroup          shift and go to state 117


state 79

    (44) StringGroup -> LGroup StringExpression . RGroup

    RGroup          shift and go to state 118


state 80

    (64) Alph -> OpenStruct StringList . CloseStruct
    (71) StringList -> StringList . Splitter StringExpression

    CloseStruct     shift and go to state 119
    Splitter        shift and go to state 120


state 81

    (65) Alph -> OpenStruct StringExpression . CloseStruct
    (72) StringList -> StringExpression . Splitter StringExpression

    CloseStruct     shift and go to state 121
    Splitter        shift and go to state 122


state 82

    (23) expressions -> expressions expression Term .

    Int             reduce using rule 23 (expressions -> expressions expression Term .)
    VInt            reduce using rule 23 (expressions -> expressions expression Term .)
    VLang           reduce using rule 23 (expressions -> expressions expression Term .)
    Show            reduce using rule 23 (expressions -> expressions expression Term .)
    LenOp           reduce using rule 23 (expressions -> expressions expression Term .)
    Prefix          reduce using rule 23 (expressions -> expressions expression Term .)
    Suffix          reduce using rule 23 (expressions -> expressions expression Term .)
    VarName         reduce using rule 23 (expressions -> expressions expression Term .)
    StringType      reduce using rule 23 (expressions -> expressions expression Term .)
    IntType         reduce using rule 23 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 23 (expressions -> expressions expression Term .)
    LangType        reduce using rule 23 (expressions -> expressions expression Term .)
    BooleanType     reduce using rule 23 (expressions -> expressions expression Term .)
    LGroup          reduce using rule 23 (expressions -> expressions expression Term .)
    VAlph           reduce using rule 23 (expressions -> expressions expression Term .)
    String          reduce using rule 23 (expressions -> expressions expression Term .)
    VString         reduce using rule 23 (expressions -> expressions expression Term .)
    OpenStruct      reduce using rule 23 (expressions -> expressions expression Term .)
    $end            reduce using rule 23 (expressions -> expressions expression Term .)


state 83

    (22) AlphKleeneC -> AlphExpression KleeneC IntExpression .

    KleeneC         reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Term            reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)
    Splitter        reduce using rule 22 (AlphKleeneC -> AlphExpression KleeneC IntExpression .)


state 84

    (29) AlphPositiveC -> AlphExpression PositiveC IntExpression .

    KleeneC         reduce using rule 29 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 29 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Term            reduce using rule 29 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)
    Splitter        reduce using rule 29 (AlphPositiveC -> AlphExpression PositiveC IntExpression .)


state 85

    (40) LangKleeneC -> LangExpression KleeneC IntExpression .

    KleeneC         reduce using rule 40 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    PositiveC       reduce using rule 40 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Term            reduce using rule 40 (LangKleeneC -> LangExpression KleeneC IntExpression .)
    Splitter        reduce using rule 40 (LangKleeneC -> LangExpression KleeneC IntExpression .)


state 86

    (52) LangPositiveC -> LangExpression PositiveC IntExpression .

    KleeneC         reduce using rule 52 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    PositiveC       reduce using rule 52 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Term            reduce using rule 52 (LangPositiveC -> LangExpression PositiveC IntExpression .)
    Splitter        reduce using rule 52 (LangPositiveC -> LangExpression PositiveC IntExpression .)


state 87

    (20) AlphConcat -> AlphConcat Concat AlphPow .
    (37) AlphPow -> AlphPow . Pow IntExpression

    Concat          reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    KleeneC         reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    PositiveC       reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    Term            reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    RGroup          reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    LenOp           reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    Splitter        reduce using rule 20 (AlphConcat -> AlphConcat Concat AlphPow .)
    Pow             shift and go to state 68


state 88

    (53) AlphGroup -> LGroup . AlphExpression RGroup
    (2) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 88
    VAlph           shift and go to state 48
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 78
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 44
    Alph                           shift and go to state 47

state 89

    (16) StringConcat -> StringConcat Concat StringPow .
    (27) StringPow -> StringPow . Pow IntExpression

    Concat          reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    KleeneC         reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    PositiveC       reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    RGroup          reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 16 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 69


state 90

    (69) StringDeclare -> StringDeclare Splitter VarName .
    (70) StringDeclare -> StringDeclare Splitter VarName . Eq StringExpression

    Splitter        reduce using rule 69 (StringDeclare -> StringDeclare Splitter VarName .)
    Term            reduce using rule 69 (StringDeclare -> StringDeclare Splitter VarName .)
    Eq              shift and go to state 123


state 91

    (76) IntDeclare -> IntDeclare Splitter VarName .
    (77) IntDeclare -> IntDeclare Splitter VarName . Eq IntExpression

    Splitter        reduce using rule 76 (IntDeclare -> IntDeclare Splitter VarName .)
    Term            reduce using rule 76 (IntDeclare -> IntDeclare Splitter VarName .)
    Eq              shift and go to state 124


state 92

    (81) AlphDeclare -> AlphDeclare Splitter VarName .
    (82) AlphDeclare -> AlphDeclare Splitter VarName . Eq AlphExpression

    Splitter        reduce using rule 81 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Term            reduce using rule 81 (AlphDeclare -> AlphDeclare Splitter VarName .)
    Eq              shift and go to state 125


state 93

    (86) LangDeclare -> LangDeclare Splitter VarName .
    (87) LangDeclare -> LangDeclare Splitter VarName . Eq LangExpression

    Splitter        reduce using rule 86 (LangDeclare -> LangDeclare Splitter VarName .)
    Term            reduce using rule 86 (LangDeclare -> LangDeclare Splitter VarName .)
    Eq              shift and go to state 126


state 94

    (91) BooleanDeclare -> BooleanDeclare Splitter VarName .
    (92) BooleanDeclare -> BooleanDeclare Splitter VarName . Eq BooleanExpression

    Splitter        reduce using rule 91 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Term            reduce using rule 91 (BooleanDeclare -> BooleanDeclare Splitter VarName .)
    Eq              shift and go to state 127


state 95

    (18) StringLen -> LenOp StringExpression LenOp .

    Term            reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    KleeneC         reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    PositiveC       reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    Splitter        reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    Pow             reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    Concat          reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    RGroup          reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    LenOp           reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    On              reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)
    CloseStruct     reduce using rule 18 (StringLen -> LenOp StringExpression LenOp .)


state 96

    (19) StringLen -> LenOp StringExpression On . AlphExpression LenOp
    (2) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 88
    VAlph           shift and go to state 48
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 128
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 44
    Alph                           shift and go to state 47

state 97

    (37) AlphPow -> AlphPow Pow IntExpression .

    Pow             reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Concat          reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    KleeneC         reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    PositiveC       reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Term            reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    RGroup          reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    LenOp           reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)
    Splitter        reduce using rule 37 (AlphPow -> AlphPow Pow IntExpression .)


state 98

    (27) StringPow -> StringPow Pow IntExpression .

    Pow             reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Concat          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Term            reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    LenOp           reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    On              reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    KleeneC         reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    PositiveC       reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    Splitter        reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    RGroup          reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)
    CloseStruct     reduce using rule 27 (StringPow -> StringPow Pow IntExpression .)


state 99

    (73) StringAssign -> VarName Eq StringExpression .

    Term            reduce using rule 73 (StringAssign -> VarName Eq StringExpression .)


state 100

    (78) IntAssign -> VarName Eq IntExpression .

    Term            reduce using rule 78 (IntAssign -> VarName Eq IntExpression .)


state 101

    (83) AlphAssign -> VarName Eq AlphExpression .
    (22) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (29) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    Term            reduce using rule 83 (AlphAssign -> VarName Eq AlphExpression .)
    KleeneC         shift and go to state 54
    PositiveC       shift and go to state 55


state 102

    (88) LangAssign -> VarName Eq LangExpression .
    (40) LangKleeneC -> LangExpression . KleeneC IntExpression
    (52) LangPositiveC -> LangExpression . PositiveC IntExpression

    Term            reduce using rule 88 (LangAssign -> VarName Eq LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 103

    (93) BooleanAssign -> VarName Eq BooleanExpression .

    Term            reduce using rule 93 (BooleanAssign -> VarName Eq BooleanExpression .)


state 104

    (1) BooleanExpression -> BooleanOr .

    Term            reduce using rule 1 (BooleanExpression -> BooleanOr .)
    RGroup          reduce using rule 1 (BooleanExpression -> BooleanOr .)
    Splitter        reduce using rule 1 (BooleanExpression -> BooleanOr .)


state 105

    (13) BooleanOr -> BooleanAnd . Or BooleanAnd
    (14) BooleanOr -> BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanAnd

    Or              shift and go to state 129
    Term            reduce using rule 14 (BooleanOr -> BooleanAnd .)
    RGroup          reduce using rule 14 (BooleanOr -> BooleanAnd .)
    Splitter        reduce using rule 14 (BooleanOr -> BooleanAnd .)
    And             shift and go to state 130


state 106

    (26) BooleanAnd -> BooleanGroup .

    Or              reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    And             reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Term            reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    RGroup          reduce using rule 26 (BooleanAnd -> BooleanGroup .)
    Splitter        reduce using rule 26 (BooleanAnd -> BooleanGroup .)


state 107

    (44) StringGroup -> LGroup . StringExpression RGroup
    (53) AlphGroup -> LGroup . AlphExpression RGroup
    (41) BooleanGroup -> LGroup . BooleanExpression RGroup
    (15) StringExpression -> . StringConcat
    (2) AlphExpression -> . AlphConcat
    (1) BooleanExpression -> . BooleanOr
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (13) BooleanOr -> . BooleanAnd Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (41) BooleanGroup -> . LGroup BooleanExpression RGroup
    (42) BooleanGroup -> . Boolean
    (43) BooleanGroup -> . VBoolean
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct
    (62) Boolean -> . True
    (63) Boolean -> . False

    LGroup          shift and go to state 107
    String          shift and go to state 49
    VString         shift and go to state 50
    VAlph           shift and go to state 48
    VBoolean        shift and go to state 109
    OpenStruct      shift and go to state 51
    True            shift and go to state 110
    False           shift and go to state 111

    StringExpression               shift and go to state 79
    AlphExpression                 shift and go to state 78
    BooleanExpression              shift and go to state 131
    StringConcat                   shift and go to state 14
    AlphConcat                     shift and go to state 13
    BooleanOr                      shift and go to state 104
    StringPow                      shift and go to state 35
    AlphPow                        shift and go to state 34
    BooleanAnd                     shift and go to state 105
    StringGroup                    shift and go to state 45
    AlphGroup                      shift and go to state 44
    BooleanGroup                   shift and go to state 106
    Alph                           shift and go to state 47
    Boolean                        shift and go to state 108

state 108

    (42) BooleanGroup -> Boolean .

    Or              reduce using rule 42 (BooleanGroup -> Boolean .)
    And             reduce using rule 42 (BooleanGroup -> Boolean .)
    Term            reduce using rule 42 (BooleanGroup -> Boolean .)
    RGroup          reduce using rule 42 (BooleanGroup -> Boolean .)
    Splitter        reduce using rule 42 (BooleanGroup -> Boolean .)


state 109

    (43) BooleanGroup -> VBoolean .

    Or              reduce using rule 43 (BooleanGroup -> VBoolean .)
    And             reduce using rule 43 (BooleanGroup -> VBoolean .)
    Term            reduce using rule 43 (BooleanGroup -> VBoolean .)
    RGroup          reduce using rule 43 (BooleanGroup -> VBoolean .)
    Splitter        reduce using rule 43 (BooleanGroup -> VBoolean .)


state 110

    (62) Boolean -> True .

    Or              reduce using rule 62 (Boolean -> True .)
    And             reduce using rule 62 (Boolean -> True .)
    Term            reduce using rule 62 (Boolean -> True .)
    RGroup          reduce using rule 62 (Boolean -> True .)
    Splitter        reduce using rule 62 (Boolean -> True .)


state 111

    (63) Boolean -> False .

    Or              reduce using rule 63 (Boolean -> False .)
    And             reduce using rule 63 (Boolean -> False .)
    Term            reduce using rule 63 (Boolean -> False .)
    RGroup          reduce using rule 63 (Boolean -> False .)
    Splitter        reduce using rule 63 (Boolean -> False .)


state 112

    (68) StringDeclare -> StringType VarName Eq . StringExpression
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 132
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 113

    (75) IntDeclare -> IntType VarName Eq . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 133
    StringLen                      shift and go to state 11

state 114

    (80) AlphDeclare -> AlphType VarName Eq . AlphExpression
    (2) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 88
    VAlph           shift and go to state 48
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 134
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 44
    Alph                           shift and go to state 47

state 115

    (85) LangDeclare -> LangType VarName Eq . LangExpression
    (6) LangExpression -> . StringPrefix
    (7) LangExpression -> . StringSuffix
    (8) LangExpression -> . AlphKleeneC
    (9) LangExpression -> . AlphPositiveC
    (10) LangExpression -> . LangKleeneC
    (11) LangExpression -> . LangPositiveC
    (12) LangExpression -> . VLang
    (56) StringPrefix -> . Prefix StringExpression
    (66) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (29) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (40) LangKleeneC -> . LangExpression KleeneC IntExpression
    (52) LangPositiveC -> . LangExpression PositiveC IntExpression
    (2) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    VLang           shift and go to state 21
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    LGroup          shift and go to state 88
    VAlph           shift and go to state 48
    OpenStruct      shift and go to state 51

    LangExpression                 shift and go to state 135
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    AlphExpression                 shift and go to state 136
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 44
    Alph                           shift and go to state 47

state 116

    (90) BooleanDeclare -> BooleanType VarName Eq . BooleanExpression
    (1) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanAnd Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (41) BooleanGroup -> . LGroup BooleanExpression RGroup
    (42) BooleanGroup -> . Boolean
    (43) BooleanGroup -> . VBoolean
    (62) Boolean -> . True
    (63) Boolean -> . False

    LGroup          shift and go to state 138
    VBoolean        shift and go to state 109
    True            shift and go to state 110
    False           shift and go to state 111

    BooleanExpression              shift and go to state 137
    BooleanOr                      shift and go to state 104
    BooleanAnd                     shift and go to state 105
    BooleanGroup                   shift and go to state 106
    Boolean                        shift and go to state 108

state 117

    (53) AlphGroup -> LGroup AlphExpression RGroup .

    Pow             reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    Concat          reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    KleeneC         reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    PositiveC       reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    Term            reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    RGroup          reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    LenOp           reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)
    Splitter        reduce using rule 53 (AlphGroup -> LGroup AlphExpression RGroup .)


state 118

    (44) StringGroup -> LGroup StringExpression RGroup .

    Pow             reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Concat          reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Term            reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    LenOp           reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    On              reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    KleeneC         reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    PositiveC       reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    Splitter        reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    RGroup          reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)
    CloseStruct     reduce using rule 44 (StringGroup -> LGroup StringExpression RGroup .)


state 119

    (64) Alph -> OpenStruct StringList CloseStruct .

    Pow             reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    Concat          reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    KleeneC         reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    PositiveC       reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    Term            reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    RGroup          reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)
    Splitter        reduce using rule 64 (Alph -> OpenStruct StringList CloseStruct .)


state 120

    (71) StringList -> StringList Splitter . StringExpression
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 139
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 121

    (65) Alph -> OpenStruct StringExpression CloseStruct .

    Pow             reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    Concat          reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    KleeneC         reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    PositiveC       reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    Term            reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    RGroup          reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    LenOp           reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)
    Splitter        reduce using rule 65 (Alph -> OpenStruct StringExpression CloseStruct .)


state 122

    (72) StringList -> StringExpression Splitter . StringExpression
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 140
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 123

    (70) StringDeclare -> StringDeclare Splitter VarName Eq . StringExpression
    (15) StringExpression -> . StringConcat
    (16) StringConcat -> . StringConcat Concat StringPow
    (17) StringConcat -> . StringPow
    (27) StringPow -> . StringPow Pow IntExpression
    (28) StringPow -> . StringGroup
    (44) StringGroup -> . LGroup StringExpression RGroup
    (45) StringGroup -> . String
    (46) StringGroup -> . VString

    LGroup          shift and go to state 67
    String          shift and go to state 49
    VString         shift and go to state 50

    StringExpression               shift and go to state 141
    StringConcat                   shift and go to state 14
    StringPow                      shift and go to state 35
    StringGroup                    shift and go to state 45

state 124

    (77) IntDeclare -> IntDeclare Splitter VarName Eq . IntExpression
    (3) IntExpression -> . Int
    (4) IntExpression -> . StringLen
    (5) IntExpression -> . VInt
    (18) StringLen -> . LenOp StringExpression LenOp
    (19) StringLen -> . LenOp StringExpression On AlphExpression LenOp

    Int             shift and go to state 10
    VInt            shift and go to state 12
    LenOp           shift and go to state 33

    IntExpression                  shift and go to state 142
    StringLen                      shift and go to state 11

state 125

    (82) AlphDeclare -> AlphDeclare Splitter VarName Eq . AlphExpression
    (2) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    LGroup          shift and go to state 88
    VAlph           shift and go to state 48
    OpenStruct      shift and go to state 51

    AlphExpression                 shift and go to state 143
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 44
    Alph                           shift and go to state 47

state 126

    (87) LangDeclare -> LangDeclare Splitter VarName Eq . LangExpression
    (6) LangExpression -> . StringPrefix
    (7) LangExpression -> . StringSuffix
    (8) LangExpression -> . AlphKleeneC
    (9) LangExpression -> . AlphPositiveC
    (10) LangExpression -> . LangKleeneC
    (11) LangExpression -> . LangPositiveC
    (12) LangExpression -> . VLang
    (56) StringPrefix -> . Prefix StringExpression
    (66) StringSuffix -> . Suffix StringExpression
    (22) AlphKleeneC -> . AlphExpression KleeneC IntExpression
    (29) AlphPositiveC -> . AlphExpression PositiveC IntExpression
    (40) LangKleeneC -> . LangExpression KleeneC IntExpression
    (52) LangPositiveC -> . LangExpression PositiveC IntExpression
    (2) AlphExpression -> . AlphConcat
    (20) AlphConcat -> . AlphConcat Concat AlphPow
    (21) AlphConcat -> . AlphPow
    (37) AlphPow -> . AlphPow Pow IntExpression
    (38) AlphPow -> . AlphGroup
    (53) AlphGroup -> . LGroup AlphExpression RGroup
    (54) AlphGroup -> . Alph
    (55) AlphGroup -> . VAlph
    (64) Alph -> . OpenStruct StringList CloseStruct
    (65) Alph -> . OpenStruct StringExpression CloseStruct

    VLang           shift and go to state 21
    Prefix          shift and go to state 36
    Suffix          shift and go to state 37
    LGroup          shift and go to state 88
    VAlph           shift and go to state 48
    OpenStruct      shift and go to state 51

    LangExpression                 shift and go to state 144
    StringPrefix                   shift and go to state 15
    StringSuffix                   shift and go to state 16
    AlphKleeneC                    shift and go to state 17
    AlphPositiveC                  shift and go to state 18
    LangKleeneC                    shift and go to state 19
    LangPositiveC                  shift and go to state 20
    AlphExpression                 shift and go to state 136
    AlphConcat                     shift and go to state 13
    AlphPow                        shift and go to state 34
    AlphGroup                      shift and go to state 44
    Alph                           shift and go to state 47

state 127

    (92) BooleanDeclare -> BooleanDeclare Splitter VarName Eq . BooleanExpression
    (1) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanAnd Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (41) BooleanGroup -> . LGroup BooleanExpression RGroup
    (42) BooleanGroup -> . Boolean
    (43) BooleanGroup -> . VBoolean
    (62) Boolean -> . True
    (63) Boolean -> . False

    LGroup          shift and go to state 138
    VBoolean        shift and go to state 109
    True            shift and go to state 110
    False           shift and go to state 111

    BooleanExpression              shift and go to state 145
    BooleanOr                      shift and go to state 104
    BooleanAnd                     shift and go to state 105
    BooleanGroup                   shift and go to state 106
    Boolean                        shift and go to state 108

state 128

    (19) StringLen -> LenOp StringExpression On AlphExpression . LenOp

    LenOp           shift and go to state 146


state 129

    (13) BooleanOr -> BooleanAnd Or . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (41) BooleanGroup -> . LGroup BooleanExpression RGroup
    (42) BooleanGroup -> . Boolean
    (43) BooleanGroup -> . VBoolean
    (62) Boolean -> . True
    (63) Boolean -> . False

    LGroup          shift and go to state 138
    VBoolean        shift and go to state 109
    True            shift and go to state 110
    False           shift and go to state 111

    BooleanAnd                     shift and go to state 147
    BooleanGroup                   shift and go to state 106
    Boolean                        shift and go to state 108

state 130

    (25) BooleanAnd -> BooleanAnd And . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (41) BooleanGroup -> . LGroup BooleanExpression RGroup
    (42) BooleanGroup -> . Boolean
    (43) BooleanGroup -> . VBoolean
    (62) Boolean -> . True
    (63) Boolean -> . False

    LGroup          shift and go to state 138
    VBoolean        shift and go to state 109
    True            shift and go to state 110
    False           shift and go to state 111

    BooleanAnd                     shift and go to state 148
    BooleanGroup                   shift and go to state 106
    Boolean                        shift and go to state 108

state 131

    (41) BooleanGroup -> LGroup BooleanExpression . RGroup

    RGroup          shift and go to state 149


state 132

    (68) StringDeclare -> StringType VarName Eq StringExpression .

    Splitter        reduce using rule 68 (StringDeclare -> StringType VarName Eq StringExpression .)
    Term            reduce using rule 68 (StringDeclare -> StringType VarName Eq StringExpression .)


state 133

    (75) IntDeclare -> IntType VarName Eq IntExpression .

    Splitter        reduce using rule 75 (IntDeclare -> IntType VarName Eq IntExpression .)
    Term            reduce using rule 75 (IntDeclare -> IntType VarName Eq IntExpression .)


state 134

    (80) AlphDeclare -> AlphType VarName Eq AlphExpression .

    Splitter        reduce using rule 80 (AlphDeclare -> AlphType VarName Eq AlphExpression .)
    Term            reduce using rule 80 (AlphDeclare -> AlphType VarName Eq AlphExpression .)


state 135

    (85) LangDeclare -> LangType VarName Eq LangExpression .
    (40) LangKleeneC -> LangExpression . KleeneC IntExpression
    (52) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 85 (LangDeclare -> LangType VarName Eq LangExpression .)
    Term            reduce using rule 85 (LangDeclare -> LangType VarName Eq LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 136

    (22) AlphKleeneC -> AlphExpression . KleeneC IntExpression
    (29) AlphPositiveC -> AlphExpression . PositiveC IntExpression

    KleeneC         shift and go to state 54
    PositiveC       shift and go to state 55


state 137

    (90) BooleanDeclare -> BooleanType VarName Eq BooleanExpression .

    Splitter        reduce using rule 90 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)
    Term            reduce using rule 90 (BooleanDeclare -> BooleanType VarName Eq BooleanExpression .)


state 138

    (41) BooleanGroup -> LGroup . BooleanExpression RGroup
    (1) BooleanExpression -> . BooleanOr
    (13) BooleanOr -> . BooleanAnd Or BooleanAnd
    (14) BooleanOr -> . BooleanAnd
    (25) BooleanAnd -> . BooleanAnd And BooleanAnd
    (26) BooleanAnd -> . BooleanGroup
    (41) BooleanGroup -> . LGroup BooleanExpression RGroup
    (42) BooleanGroup -> . Boolean
    (43) BooleanGroup -> . VBoolean
    (62) Boolean -> . True
    (63) Boolean -> . False

    LGroup          shift and go to state 138
    VBoolean        shift and go to state 109
    True            shift and go to state 110
    False           shift and go to state 111

    BooleanExpression              shift and go to state 131
    BooleanOr                      shift and go to state 104
    BooleanAnd                     shift and go to state 105
    BooleanGroup                   shift and go to state 106
    Boolean                        shift and go to state 108

state 139

    (71) StringList -> StringList Splitter StringExpression .

    CloseStruct     reduce using rule 71 (StringList -> StringList Splitter StringExpression .)
    Splitter        reduce using rule 71 (StringList -> StringList Splitter StringExpression .)


state 140

    (72) StringList -> StringExpression Splitter StringExpression .

    CloseStruct     reduce using rule 72 (StringList -> StringExpression Splitter StringExpression .)
    Splitter        reduce using rule 72 (StringList -> StringExpression Splitter StringExpression .)


state 141

    (70) StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .

    Splitter        reduce using rule 70 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)
    Term            reduce using rule 70 (StringDeclare -> StringDeclare Splitter VarName Eq StringExpression .)


state 142

    (77) IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .

    Splitter        reduce using rule 77 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)
    Term            reduce using rule 77 (IntDeclare -> IntDeclare Splitter VarName Eq IntExpression .)


state 143

    (82) AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .

    Splitter        reduce using rule 82 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)
    Term            reduce using rule 82 (AlphDeclare -> AlphDeclare Splitter VarName Eq AlphExpression .)


state 144

    (87) LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .
    (40) LangKleeneC -> LangExpression . KleeneC IntExpression
    (52) LangPositiveC -> LangExpression . PositiveC IntExpression

    Splitter        reduce using rule 87 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    Term            reduce using rule 87 (LangDeclare -> LangDeclare Splitter VarName Eq LangExpression .)
    KleeneC         shift and go to state 56
    PositiveC       shift and go to state 57


state 145

    (92) BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .

    Splitter        reduce using rule 92 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)
    Term            reduce using rule 92 (BooleanDeclare -> BooleanDeclare Splitter VarName Eq BooleanExpression .)


state 146

    (19) StringLen -> LenOp StringExpression On AlphExpression LenOp .

    Term            reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    KleeneC         reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    PositiveC       reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Splitter        reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Pow             reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    Concat          reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    RGroup          reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    LenOp           reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    On              reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)
    CloseStruct     reduce using rule 19 (StringLen -> LenOp StringExpression On AlphExpression LenOp .)


state 147

    (13) BooleanOr -> BooleanAnd Or BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanAnd

    Term            reduce using rule 13 (BooleanOr -> BooleanAnd Or BooleanAnd .)
    RGroup          reduce using rule 13 (BooleanOr -> BooleanAnd Or BooleanAnd .)
    Splitter        reduce using rule 13 (BooleanOr -> BooleanAnd Or BooleanAnd .)
    And             shift and go to state 130


state 148

    (25) BooleanAnd -> BooleanAnd And BooleanAnd .
    (25) BooleanAnd -> BooleanAnd . And BooleanAnd

  ! shift/reduce conflict for And resolved as shift
    Or              reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    Term            reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    RGroup          reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    Splitter        reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .)
    And             shift and go to state 130

  ! And             [ reduce using rule 25 (BooleanAnd -> BooleanAnd And BooleanAnd .) ]


state 149

    (41) BooleanGroup -> LGroup BooleanExpression RGroup .

    Or              reduce using rule 41 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    And             reduce using rule 41 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Term            reduce using rule 41 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    RGroup          reduce using rule 41 (BooleanGroup -> LGroup BooleanExpression RGroup .)
    Splitter        reduce using rule 41 (BooleanGroup -> LGroup BooleanExpression RGroup .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for And in state 148 resolved as shift
