Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LangType
    NextLine

Grammar

Rule 0     S' -> expressions
Rule 1     SuperAlph -> Alph
Rule 2     SuperAlph -> StringPrefix
Rule 3     Integer -> Int
Rule 4     Integer -> StringLen
Rule 5     SuperString -> StringConcat
Rule 6     Alph -> OpenStruct StringList CloseStruct
Rule 7     Alph -> OpenStruct SuperString CloseStruct
Rule 8     ShowVal -> Show Integer
Rule 9     ShowVal -> Show SuperString
Rule 10    ShowVal -> Show SuperAlph
Rule 11    StringList -> StringList Splitter StringConcat
Rule 12    StringList -> StringConcat Splitter StringConcat
Rule 13    expressions -> expressions expression Term
Rule 14    expressions -> expression Term
Rule 15    expression -> VarAssign
Rule 16    expression -> ShowVal
Rule 17    VarAssign -> StringType VarName Eq SuperString
Rule 18    VarAssign -> AlphType VarName Eq SuperAlph
Rule 19    VarAssign -> IntType VarName Eq Integer
Rule 20    StringPrefix -> Prefix SuperString
Rule 21    StringConcat -> StringConcat Concat StringPow
Rule 22    StringConcat -> StringPow
Rule 23    StringPow -> StringPow Pow Integer
Rule 24    StringPow -> String
Rule 25    StringLen -> LenOp SuperString LenOp
Rule 26    StringLen -> LenOp SuperString On Alph LenOp
Rule 27    StringLen -> LenOp SuperString On VarName LenOp

Terminals, with rules where they appear

AlphType             : 18
CloseStruct          : 6 7
Concat               : 21
Eq                   : 17 18 19
Int                  : 3
IntType              : 19
LangType             : 
LenOp                : 25 25 26 26 27 27
NextLine             : 
On                   : 26 27
OpenStruct           : 6 7
Pow                  : 23
Prefix               : 20
Show                 : 8 9 10
Splitter             : 11 12
String               : 24
StringType           : 17
Term                 : 13 14
VarName              : 17 18 19 27
error                : 

Nonterminals, with rules where they appear

Alph                 : 1 26
Integer              : 8 19 23
ShowVal              : 16
StringConcat         : 5 11 12 12 21
StringLen            : 4
StringList           : 6 11
StringPow            : 21 22 23
StringPrefix         : 2
SuperAlph            : 10 18
SuperString          : 7 9 17 20 25 26 27
VarAssign            : 15
expression           : 13 14
expressions          : 13 0

Parsing method: LALR

state 0

    (0) S' -> . expressions
    (13) expressions -> . expressions expression Term
    (14) expressions -> . expression Term
    (15) expression -> . VarAssign
    (16) expression -> . ShowVal
    (17) VarAssign -> . StringType VarName Eq SuperString
    (18) VarAssign -> . AlphType VarName Eq SuperAlph
    (19) VarAssign -> . IntType VarName Eq Integer
    (8) ShowVal -> . Show Integer
    (9) ShowVal -> . Show SuperString
    (10) ShowVal -> . Show SuperAlph

    StringType      shift and go to state 5
    AlphType        shift and go to state 6
    IntType         shift and go to state 7
    Show            shift and go to state 8

    expressions                    shift and go to state 1
    expression                     shift and go to state 2
    VarAssign                      shift and go to state 3
    ShowVal                        shift and go to state 4

state 1

    (0) S' -> expressions .
    (13) expressions -> expressions . expression Term
    (15) expression -> . VarAssign
    (16) expression -> . ShowVal
    (17) VarAssign -> . StringType VarName Eq SuperString
    (18) VarAssign -> . AlphType VarName Eq SuperAlph
    (19) VarAssign -> . IntType VarName Eq Integer
    (8) ShowVal -> . Show Integer
    (9) ShowVal -> . Show SuperString
    (10) ShowVal -> . Show SuperAlph

    StringType      shift and go to state 5
    AlphType        shift and go to state 6
    IntType         shift and go to state 7
    Show            shift and go to state 8

    expression                     shift and go to state 9
    VarAssign                      shift and go to state 3
    ShowVal                        shift and go to state 4

state 2

    (14) expressions -> expression . Term

    Term            shift and go to state 10


state 3

    (15) expression -> VarAssign .

    Term            reduce using rule 15 (expression -> VarAssign .)


state 4

    (16) expression -> ShowVal .

    Term            reduce using rule 16 (expression -> ShowVal .)


state 5

    (17) VarAssign -> StringType . VarName Eq SuperString

    VarName         shift and go to state 11


state 6

    (18) VarAssign -> AlphType . VarName Eq SuperAlph

    VarName         shift and go to state 12


state 7

    (19) VarAssign -> IntType . VarName Eq Integer

    VarName         shift and go to state 13


state 8

    (8) ShowVal -> Show . Integer
    (9) ShowVal -> Show . SuperString
    (10) ShowVal -> Show . SuperAlph
    (3) Integer -> . Int
    (4) Integer -> . StringLen
    (5) SuperString -> . StringConcat
    (1) SuperAlph -> . Alph
    (2) SuperAlph -> . StringPrefix
    (25) StringLen -> . LenOp SuperString LenOp
    (26) StringLen -> . LenOp SuperString On Alph LenOp
    (27) StringLen -> . LenOp SuperString On VarName LenOp
    (21) StringConcat -> . StringConcat Concat StringPow
    (22) StringConcat -> . StringPow
    (6) Alph -> . OpenStruct StringList CloseStruct
    (7) Alph -> . OpenStruct SuperString CloseStruct
    (20) StringPrefix -> . Prefix SuperString
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    Int             shift and go to state 17
    LenOp           shift and go to state 22
    OpenStruct      shift and go to state 24
    Prefix          shift and go to state 25
    String          shift and go to state 26

    Integer                        shift and go to state 14
    SuperString                    shift and go to state 15
    SuperAlph                      shift and go to state 16
    StringLen                      shift and go to state 18
    StringConcat                   shift and go to state 19
    Alph                           shift and go to state 20
    StringPrefix                   shift and go to state 21
    StringPow                      shift and go to state 23

state 9

    (13) expressions -> expressions expression . Term

    Term            shift and go to state 27


state 10

    (14) expressions -> expression Term .

    StringType      reduce using rule 14 (expressions -> expression Term .)
    AlphType        reduce using rule 14 (expressions -> expression Term .)
    IntType         reduce using rule 14 (expressions -> expression Term .)
    Show            reduce using rule 14 (expressions -> expression Term .)
    $end            reduce using rule 14 (expressions -> expression Term .)


state 11

    (17) VarAssign -> StringType VarName . Eq SuperString

    Eq              shift and go to state 28


state 12

    (18) VarAssign -> AlphType VarName . Eq SuperAlph

    Eq              shift and go to state 29


state 13

    (19) VarAssign -> IntType VarName . Eq Integer

    Eq              shift and go to state 30


state 14

    (8) ShowVal -> Show Integer .

    Term            reduce using rule 8 (ShowVal -> Show Integer .)


state 15

    (9) ShowVal -> Show SuperString .

    Term            reduce using rule 9 (ShowVal -> Show SuperString .)


state 16

    (10) ShowVal -> Show SuperAlph .

    Term            reduce using rule 10 (ShowVal -> Show SuperAlph .)


state 17

    (3) Integer -> Int .

    Term            reduce using rule 3 (Integer -> Int .)
    Pow             reduce using rule 3 (Integer -> Int .)
    Concat          reduce using rule 3 (Integer -> Int .)
    LenOp           reduce using rule 3 (Integer -> Int .)
    On              reduce using rule 3 (Integer -> Int .)
    Splitter        reduce using rule 3 (Integer -> Int .)
    CloseStruct     reduce using rule 3 (Integer -> Int .)


state 18

    (4) Integer -> StringLen .

    Term            reduce using rule 4 (Integer -> StringLen .)
    Pow             reduce using rule 4 (Integer -> StringLen .)
    Concat          reduce using rule 4 (Integer -> StringLen .)
    LenOp           reduce using rule 4 (Integer -> StringLen .)
    On              reduce using rule 4 (Integer -> StringLen .)
    Splitter        reduce using rule 4 (Integer -> StringLen .)
    CloseStruct     reduce using rule 4 (Integer -> StringLen .)


state 19

    (5) SuperString -> StringConcat .
    (21) StringConcat -> StringConcat . Concat StringPow

    Term            reduce using rule 5 (SuperString -> StringConcat .)
    LenOp           reduce using rule 5 (SuperString -> StringConcat .)
    On              reduce using rule 5 (SuperString -> StringConcat .)
    Concat          shift and go to state 31


state 20

    (1) SuperAlph -> Alph .

    Term            reduce using rule 1 (SuperAlph -> Alph .)


state 21

    (2) SuperAlph -> StringPrefix .

    Term            reduce using rule 2 (SuperAlph -> StringPrefix .)


state 22

    (25) StringLen -> LenOp . SuperString LenOp
    (26) StringLen -> LenOp . SuperString On Alph LenOp
    (27) StringLen -> LenOp . SuperString On VarName LenOp
    (5) SuperString -> . StringConcat
    (21) StringConcat -> . StringConcat Concat StringPow
    (22) StringConcat -> . StringPow
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    String          shift and go to state 26

    SuperString                    shift and go to state 32
    StringConcat                   shift and go to state 19
    StringPow                      shift and go to state 23

state 23

    (22) StringConcat -> StringPow .
    (23) StringPow -> StringPow . Pow Integer

    Concat          reduce using rule 22 (StringConcat -> StringPow .)
    Term            reduce using rule 22 (StringConcat -> StringPow .)
    LenOp           reduce using rule 22 (StringConcat -> StringPow .)
    On              reduce using rule 22 (StringConcat -> StringPow .)
    Splitter        reduce using rule 22 (StringConcat -> StringPow .)
    CloseStruct     reduce using rule 22 (StringConcat -> StringPow .)
    Pow             shift and go to state 33


state 24

    (6) Alph -> OpenStruct . StringList CloseStruct
    (7) Alph -> OpenStruct . SuperString CloseStruct
    (11) StringList -> . StringList Splitter StringConcat
    (12) StringList -> . StringConcat Splitter StringConcat
    (5) SuperString -> . StringConcat
    (21) StringConcat -> . StringConcat Concat StringPow
    (22) StringConcat -> . StringPow
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    String          shift and go to state 26

    StringList                     shift and go to state 34
    SuperString                    shift and go to state 35
    StringConcat                   shift and go to state 36
    StringPow                      shift and go to state 23

state 25

    (20) StringPrefix -> Prefix . SuperString
    (5) SuperString -> . StringConcat
    (21) StringConcat -> . StringConcat Concat StringPow
    (22) StringConcat -> . StringPow
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    String          shift and go to state 26

    SuperString                    shift and go to state 37
    StringConcat                   shift and go to state 19
    StringPow                      shift and go to state 23

state 26

    (24) StringPow -> String .

    Pow             reduce using rule 24 (StringPow -> String .)
    Concat          reduce using rule 24 (StringPow -> String .)
    Term            reduce using rule 24 (StringPow -> String .)
    LenOp           reduce using rule 24 (StringPow -> String .)
    On              reduce using rule 24 (StringPow -> String .)
    Splitter        reduce using rule 24 (StringPow -> String .)
    CloseStruct     reduce using rule 24 (StringPow -> String .)


state 27

    (13) expressions -> expressions expression Term .

    StringType      reduce using rule 13 (expressions -> expressions expression Term .)
    AlphType        reduce using rule 13 (expressions -> expressions expression Term .)
    IntType         reduce using rule 13 (expressions -> expressions expression Term .)
    Show            reduce using rule 13 (expressions -> expressions expression Term .)
    $end            reduce using rule 13 (expressions -> expressions expression Term .)


state 28

    (17) VarAssign -> StringType VarName Eq . SuperString
    (5) SuperString -> . StringConcat
    (21) StringConcat -> . StringConcat Concat StringPow
    (22) StringConcat -> . StringPow
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    String          shift and go to state 26

    SuperString                    shift and go to state 38
    StringConcat                   shift and go to state 19
    StringPow                      shift and go to state 23

state 29

    (18) VarAssign -> AlphType VarName Eq . SuperAlph
    (1) SuperAlph -> . Alph
    (2) SuperAlph -> . StringPrefix
    (6) Alph -> . OpenStruct StringList CloseStruct
    (7) Alph -> . OpenStruct SuperString CloseStruct
    (20) StringPrefix -> . Prefix SuperString

    OpenStruct      shift and go to state 24
    Prefix          shift and go to state 25

    SuperAlph                      shift and go to state 39
    Alph                           shift and go to state 20
    StringPrefix                   shift and go to state 21

state 30

    (19) VarAssign -> IntType VarName Eq . Integer
    (3) Integer -> . Int
    (4) Integer -> . StringLen
    (25) StringLen -> . LenOp SuperString LenOp
    (26) StringLen -> . LenOp SuperString On Alph LenOp
    (27) StringLen -> . LenOp SuperString On VarName LenOp

    Int             shift and go to state 17
    LenOp           shift and go to state 22

    Integer                        shift and go to state 40
    StringLen                      shift and go to state 18

state 31

    (21) StringConcat -> StringConcat Concat . StringPow
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    String          shift and go to state 26

    StringPow                      shift and go to state 41

state 32

    (25) StringLen -> LenOp SuperString . LenOp
    (26) StringLen -> LenOp SuperString . On Alph LenOp
    (27) StringLen -> LenOp SuperString . On VarName LenOp

    LenOp           shift and go to state 42
    On              shift and go to state 43


state 33

    (23) StringPow -> StringPow Pow . Integer
    (3) Integer -> . Int
    (4) Integer -> . StringLen
    (25) StringLen -> . LenOp SuperString LenOp
    (26) StringLen -> . LenOp SuperString On Alph LenOp
    (27) StringLen -> . LenOp SuperString On VarName LenOp

    Int             shift and go to state 17
    LenOp           shift and go to state 22

    Integer                        shift and go to state 44
    StringLen                      shift and go to state 18

state 34

    (6) Alph -> OpenStruct StringList . CloseStruct
    (11) StringList -> StringList . Splitter StringConcat

    CloseStruct     shift and go to state 45
    Splitter        shift and go to state 46


state 35

    (7) Alph -> OpenStruct SuperString . CloseStruct

    CloseStruct     shift and go to state 47


state 36

    (12) StringList -> StringConcat . Splitter StringConcat
    (5) SuperString -> StringConcat .
    (21) StringConcat -> StringConcat . Concat StringPow

    Splitter        shift and go to state 48
    CloseStruct     reduce using rule 5 (SuperString -> StringConcat .)
    Concat          shift and go to state 31


state 37

    (20) StringPrefix -> Prefix SuperString .

    Term            reduce using rule 20 (StringPrefix -> Prefix SuperString .)


state 38

    (17) VarAssign -> StringType VarName Eq SuperString .

    Term            reduce using rule 17 (VarAssign -> StringType VarName Eq SuperString .)


state 39

    (18) VarAssign -> AlphType VarName Eq SuperAlph .

    Term            reduce using rule 18 (VarAssign -> AlphType VarName Eq SuperAlph .)


state 40

    (19) VarAssign -> IntType VarName Eq Integer .

    Term            reduce using rule 19 (VarAssign -> IntType VarName Eq Integer .)


state 41

    (21) StringConcat -> StringConcat Concat StringPow .
    (23) StringPow -> StringPow . Pow Integer

    Concat          reduce using rule 21 (StringConcat -> StringConcat Concat StringPow .)
    Term            reduce using rule 21 (StringConcat -> StringConcat Concat StringPow .)
    LenOp           reduce using rule 21 (StringConcat -> StringConcat Concat StringPow .)
    On              reduce using rule 21 (StringConcat -> StringConcat Concat StringPow .)
    Splitter        reduce using rule 21 (StringConcat -> StringConcat Concat StringPow .)
    CloseStruct     reduce using rule 21 (StringConcat -> StringConcat Concat StringPow .)
    Pow             shift and go to state 33


state 42

    (25) StringLen -> LenOp SuperString LenOp .

    Term            reduce using rule 25 (StringLen -> LenOp SuperString LenOp .)
    Pow             reduce using rule 25 (StringLen -> LenOp SuperString LenOp .)
    Concat          reduce using rule 25 (StringLen -> LenOp SuperString LenOp .)
    LenOp           reduce using rule 25 (StringLen -> LenOp SuperString LenOp .)
    On              reduce using rule 25 (StringLen -> LenOp SuperString LenOp .)
    Splitter        reduce using rule 25 (StringLen -> LenOp SuperString LenOp .)
    CloseStruct     reduce using rule 25 (StringLen -> LenOp SuperString LenOp .)


state 43

    (26) StringLen -> LenOp SuperString On . Alph LenOp
    (27) StringLen -> LenOp SuperString On . VarName LenOp
    (6) Alph -> . OpenStruct StringList CloseStruct
    (7) Alph -> . OpenStruct SuperString CloseStruct

    VarName         shift and go to state 50
    OpenStruct      shift and go to state 24

    Alph                           shift and go to state 49

state 44

    (23) StringPow -> StringPow Pow Integer .

    Pow             reduce using rule 23 (StringPow -> StringPow Pow Integer .)
    Concat          reduce using rule 23 (StringPow -> StringPow Pow Integer .)
    Term            reduce using rule 23 (StringPow -> StringPow Pow Integer .)
    LenOp           reduce using rule 23 (StringPow -> StringPow Pow Integer .)
    On              reduce using rule 23 (StringPow -> StringPow Pow Integer .)
    Splitter        reduce using rule 23 (StringPow -> StringPow Pow Integer .)
    CloseStruct     reduce using rule 23 (StringPow -> StringPow Pow Integer .)


state 45

    (6) Alph -> OpenStruct StringList CloseStruct .

    Term            reduce using rule 6 (Alph -> OpenStruct StringList CloseStruct .)
    LenOp           reduce using rule 6 (Alph -> OpenStruct StringList CloseStruct .)


state 46

    (11) StringList -> StringList Splitter . StringConcat
    (21) StringConcat -> . StringConcat Concat StringPow
    (22) StringConcat -> . StringPow
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    String          shift and go to state 26

    StringConcat                   shift and go to state 51
    StringPow                      shift and go to state 23

state 47

    (7) Alph -> OpenStruct SuperString CloseStruct .

    Term            reduce using rule 7 (Alph -> OpenStruct SuperString CloseStruct .)
    LenOp           reduce using rule 7 (Alph -> OpenStruct SuperString CloseStruct .)


state 48

    (12) StringList -> StringConcat Splitter . StringConcat
    (21) StringConcat -> . StringConcat Concat StringPow
    (22) StringConcat -> . StringPow
    (23) StringPow -> . StringPow Pow Integer
    (24) StringPow -> . String

    String          shift and go to state 26

    StringConcat                   shift and go to state 52
    StringPow                      shift and go to state 23

state 49

    (26) StringLen -> LenOp SuperString On Alph . LenOp

    LenOp           shift and go to state 53


state 50

    (27) StringLen -> LenOp SuperString On VarName . LenOp

    LenOp           shift and go to state 54


state 51

    (11) StringList -> StringList Splitter StringConcat .
    (21) StringConcat -> StringConcat . Concat StringPow

    CloseStruct     reduce using rule 11 (StringList -> StringList Splitter StringConcat .)
    Splitter        reduce using rule 11 (StringList -> StringList Splitter StringConcat .)
    Concat          shift and go to state 31


state 52

    (12) StringList -> StringConcat Splitter StringConcat .
    (21) StringConcat -> StringConcat . Concat StringPow

    CloseStruct     reduce using rule 12 (StringList -> StringConcat Splitter StringConcat .)
    Splitter        reduce using rule 12 (StringList -> StringConcat Splitter StringConcat .)
    Concat          shift and go to state 31


state 53

    (26) StringLen -> LenOp SuperString On Alph LenOp .

    Term            reduce using rule 26 (StringLen -> LenOp SuperString On Alph LenOp .)
    Pow             reduce using rule 26 (StringLen -> LenOp SuperString On Alph LenOp .)
    Concat          reduce using rule 26 (StringLen -> LenOp SuperString On Alph LenOp .)
    LenOp           reduce using rule 26 (StringLen -> LenOp SuperString On Alph LenOp .)
    On              reduce using rule 26 (StringLen -> LenOp SuperString On Alph LenOp .)
    Splitter        reduce using rule 26 (StringLen -> LenOp SuperString On Alph LenOp .)
    CloseStruct     reduce using rule 26 (StringLen -> LenOp SuperString On Alph LenOp .)


state 54

    (27) StringLen -> LenOp SuperString On VarName LenOp .

    Term            reduce using rule 27 (StringLen -> LenOp SuperString On VarName LenOp .)
    Pow             reduce using rule 27 (StringLen -> LenOp SuperString On VarName LenOp .)
    Concat          reduce using rule 27 (StringLen -> LenOp SuperString On VarName LenOp .)
    LenOp           reduce using rule 27 (StringLen -> LenOp SuperString On VarName LenOp .)
    On              reduce using rule 27 (StringLen -> LenOp SuperString On VarName LenOp .)
    Splitter        reduce using rule 27 (StringLen -> LenOp SuperString On VarName LenOp .)
    CloseStruct     reduce using rule 27 (StringLen -> LenOp SuperString On VarName LenOp .)

